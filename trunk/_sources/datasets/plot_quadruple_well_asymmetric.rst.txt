
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "datasets\plot_quadruple_well_asymmetric.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_datasets_plot_quadruple_well_asymmetric.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_datasets_plot_quadruple_well_asymmetric.py:


Asymmetric Quadruple-well
=========================

Example for the :meth:`deeptime.data.quadruple_well_asymmetric` dataset.

.. GENERATED FROM PYTHON SOURCE LINES 7-54



.. image-sg:: /datasets/images/sphx_glr_plot_quadruple_well_asymmetric_001.png
   :alt: Example of a trajectory
   :srcset: /datasets/images/sphx_glr_plot_quadruple_well_asymmetric_001.png
   :class: sphx-glr-single-img





.. code-block:: default
   :lineno-start: 8


    import numpy as np
    import scipy
    import matplotlib.pyplot as plt
    from matplotlib.collections import LineCollection

    from deeptime.data import quadruple_well_asymmetric

    system = quadruple_well_asymmetric(n_steps=10000)
    traj = system.trajectory(np.array([[-1, 1]]), 70, seed=36)

    xy = np.arange(-1.8, 1.8, 0.1)
    coords = np.dstack(np.meshgrid(xy, xy)).reshape(-1, 2)
    V = system.potential(coords).reshape((xy.shape[0], xy.shape[0]))

    fig, ax = plt.subplots(1, 1)
    ax.set_aspect('equal')
    ax.set_title("Example of a trajectory")

    cb = ax.contourf(xy, xy, V, levels=50, cmap='coolwarm')

    ax.annotate(f'V(x) = {system.potential([[1., 1.]]).squeeze():.2f}', xy=(1., 1.), xycoords='data',
                xytext=(-30, 40), textcoords='offset points',
                bbox=dict(boxstyle="round"), arrowprops=dict(arrowstyle='simple'))
    ax.annotate(f'V(x) = {system.potential([[-1., -1.]]).squeeze():.2f}', xy=(-1., -1.), xycoords='data',
                xytext=(-30, -40), textcoords='offset points',
                bbox=dict(boxstyle="round"), arrowprops=dict(arrowstyle='simple'))
    ax.annotate(f'V(x) = {system.potential([[-1., 1.]]).squeeze():.2f}', xy=(-1., 1.), xycoords='data',
                xytext=(-30, 40), textcoords='offset points',
                bbox=dict(boxstyle="round"), arrowprops=dict(arrowstyle='simple'))
    ax.annotate(f'V(x) = {system.potential([[1., -1.]]).squeeze():.2f}', xy=(1., -1.), xycoords='data',
                xytext=(-30, -40), textcoords='offset points',
                bbox=dict(boxstyle="round"), arrowprops=dict(arrowstyle='simple'))

    x = np.r_[traj[:, 0]]
    y = np.r_[traj[:, 1]]
    f, u = scipy.interpolate.splprep([x, y], s=0, per=False)
    xint, yint = scipy.interpolate.splev(np.linspace(0, 1, 50000), f)

    points = np.stack([xint, yint]).T.reshape(-1, 1, 2)
    segments = np.concatenate([points[:-1], points[1:]], axis=1)
    coll = LineCollection(segments, cmap='jet')
    coll.set_array(np.linspace(0, 1, num=len(points), endpoint=True))
    coll.set_linewidth(1)
    ax.add_collection(coll)

    fig.colorbar(cb)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.914 seconds)

**Estimated memory usage:**  36 MB


.. _sphx_glr_download_datasets_plot_quadruple_well_asymmetric.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_quadruple_well_asymmetric.py <plot_quadruple_well_asymmetric.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_quadruple_well_asymmetric.ipynb <plot_quadruple_well_asymmetric.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
