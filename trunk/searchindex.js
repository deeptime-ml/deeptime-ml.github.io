Search.setIndex({"docnames": ["api/generated/deeptime.base.Dataset", "api/generated/deeptime.base.Estimator", "api/generated/deeptime.base.Model", "api/generated/deeptime.base.Transformer", "api/generated/deeptime.basis.Concatenation", "api/generated/deeptime.basis.Identity", "api/generated/deeptime.basis.Monomials", "api/generated/deeptime.basis.Observable", "api/generated/deeptime.clustering.BoxDiscretization", "api/generated/deeptime.clustering.BoxDiscretizationModel", "api/generated/deeptime.clustering.ClusterModel", "api/generated/deeptime.clustering.KMeans", "api/generated/deeptime.clustering.KMeansModel", "api/generated/deeptime.clustering.MetricRegistry", "api/generated/deeptime.clustering.MiniBatchKMeans", "api/generated/deeptime.clustering.RegularSpace", "api/generated/deeptime.clustering.kmeans_plusplus", "api/generated/deeptime.clustering.metrics", "api/generated/deeptime.covariance.Covariance", "api/generated/deeptime.covariance.CovarianceModel", "api/generated/deeptime.covariance.KoopmanWeightingEstimator", "api/generated/deeptime.covariance.KoopmanWeightingModel", "api/generated/deeptime.data.abc_flow", "api/generated/deeptime.data.bickley_jet", "api/generated/deeptime.data.birth_death_chain", "api/generated/deeptime.data.custom_ode", "api/generated/deeptime.data.custom_sde", "api/generated/deeptime.data.double_well_2d", "api/generated/deeptime.data.double_well_discrete", "api/generated/deeptime.data.drunkards_walk", "api/generated/deeptime.data.ellipsoids", "api/generated/deeptime.data.ornstein_uhlenbeck", "api/generated/deeptime.data.position_based_fluids", "api/generated/deeptime.data.prinz_potential", "api/generated/deeptime.data.quadruple_well", "api/generated/deeptime.data.quadruple_well_asymmetric", "api/generated/deeptime.data.sqrt_model", "api/generated/deeptime.data.swissroll_model", "api/generated/deeptime.data.time_dependent_quintuple_well", "api/generated/deeptime.data.tmatrix_metropolis1d", "api/generated/deeptime.data.triple_well_1d", "api/generated/deeptime.data.triple_well_2d", "api/generated/deeptime.decomposition.CovarianceKoopmanModel", "api/generated/deeptime.decomposition.DMD", "api/generated/deeptime.decomposition.DMDModel", "api/generated/deeptime.decomposition.EDMD", "api/generated/deeptime.decomposition.EDMDModel", "api/generated/deeptime.decomposition.KVAD", "api/generated/deeptime.decomposition.KVADModel", "api/generated/deeptime.decomposition.KernelCCA", "api/generated/deeptime.decomposition.KernelCCAModel", "api/generated/deeptime.decomposition.KernelEDMD", "api/generated/deeptime.decomposition.KernelEDMDModel", "api/generated/deeptime.decomposition.TICA", "api/generated/deeptime.decomposition.TransferOperatorModel", "api/generated/deeptime.decomposition.VAMP", "api/generated/deeptime.decomposition.blocksplit_trajs", "api/generated/deeptime.decomposition.cvsplit_trajs", "api/generated/deeptime.decomposition.deep.TAE", "api/generated/deeptime.decomposition.deep.TAEModel", "api/generated/deeptime.decomposition.deep.TVAE", "api/generated/deeptime.decomposition.deep.TVAEEncoder", "api/generated/deeptime.decomposition.deep.TVAEModel", "api/generated/deeptime.decomposition.deep.VAMPNet", "api/generated/deeptime.decomposition.deep.VAMPNetModel", "api/generated/deeptime.decomposition.deep.covariances", "api/generated/deeptime.decomposition.deep.koopman_matrix", "api/generated/deeptime.decomposition.deep.kvad_score", "api/generated/deeptime.decomposition.deep.sym_inverse", "api/generated/deeptime.decomposition.deep.vamp_score", "api/generated/deeptime.decomposition.deep.vampnet_loss", "api/generated/deeptime.decomposition.vamp_score", "api/generated/deeptime.decomposition.vamp_score_cv", "api/generated/deeptime.decomposition.vamp_score_data", "api/generated/deeptime.kernels.GaussianKernel", "api/generated/deeptime.kernels.GeneralizedGaussianKernel", "api/generated/deeptime.kernels.Kernel", "api/generated/deeptime.kernels.LaplacianKernel", "api/generated/deeptime.kernels.PolynomialKernel", "api/generated/deeptime.kernels.TorchGaussianKernel", "api/generated/deeptime.kernels.is_torch_kernel", "api/generated/deeptime.markov.PCCAModel", "api/generated/deeptime.markov.ReactiveFlux", "api/generated/deeptime.markov.TransitionCountEstimator", "api/generated/deeptime.markov.TransitionCountModel", "api/generated/deeptime.markov.compute_connected_sets", "api/generated/deeptime.markov.compute_dtrajs_effective", "api/generated/deeptime.markov.compute_effective_stride", "api/generated/deeptime.markov.count_states", "api/generated/deeptime.markov.hmm.BayesianHMM", "api/generated/deeptime.markov.hmm.BayesianHMMPosterior", "api/generated/deeptime.markov.hmm.DiscreteOutputModel", "api/generated/deeptime.markov.hmm.GaussianOutputModel", "api/generated/deeptime.markov.hmm.HiddenMarkovModel", "api/generated/deeptime.markov.hmm.MaximumLikelihoodHMM", "api/generated/deeptime.markov.hmm.OutputModel", "api/generated/deeptime.markov.hmm.init.discrete.metastable_from_data", "api/generated/deeptime.markov.hmm.init.discrete.metastable_from_msm", "api/generated/deeptime.markov.hmm.init.discrete.random_guess", "api/generated/deeptime.markov.hmm.init.gaussian.from_data", "api/generated/deeptime.markov.msm.AugmentedMSM", "api/generated/deeptime.markov.msm.AugmentedMSMEstimator", "api/generated/deeptime.markov.msm.BayesianMSM", "api/generated/deeptime.markov.msm.BayesianMSMPosterior", "api/generated/deeptime.markov.msm.KoopmanReweightedMSM", "api/generated/deeptime.markov.msm.MarkovStateModel", "api/generated/deeptime.markov.msm.MarkovStateModelCollection", "api/generated/deeptime.markov.msm.MaximumLikelihoodMSM", "api/generated/deeptime.markov.msm.OOMReweightedMSM", "api/generated/deeptime.markov.msm.TRAM", "api/generated/deeptime.markov.msm.TRAMDataset", "api/generated/deeptime.markov.msm.TRAMModel", "api/generated/deeptime.markov.number_of_states", "api/generated/deeptime.markov.pcca", "api/generated/deeptime.markov.reactive_flux", "api/generated/deeptime.markov.sample.compute_index_states", "api/generated/deeptime.markov.sample.indices_by_distribution", "api/generated/deeptime.markov.sample.indices_by_sequence", "api/generated/deeptime.markov.sample.indices_by_state", "api/generated/deeptime.markov.tools.analysis.committor", "api/generated/deeptime.markov.tools.analysis.committor_sensitivity", "api/generated/deeptime.markov.tools.analysis.correlation", "api/generated/deeptime.markov.tools.analysis.eigenvalue_sensitivity", "api/generated/deeptime.markov.tools.analysis.eigenvalues", "api/generated/deeptime.markov.tools.analysis.eigenvector_sensitivity", "api/generated/deeptime.markov.tools.analysis.eigenvectors", "api/generated/deeptime.markov.tools.analysis.expectation", "api/generated/deeptime.markov.tools.analysis.expectation_sensitivity", "api/generated/deeptime.markov.tools.analysis.expected_counts", "api/generated/deeptime.markov.tools.analysis.expected_counts_stationary", "api/generated/deeptime.markov.tools.analysis.fingerprint_correlation", "api/generated/deeptime.markov.tools.analysis.fingerprint_relaxation", "api/generated/deeptime.markov.tools.analysis.hitting_probability", "api/generated/deeptime.markov.tools.analysis.is_connected", "api/generated/deeptime.markov.tools.analysis.is_rate_matrix", "api/generated/deeptime.markov.tools.analysis.is_reversible", "api/generated/deeptime.markov.tools.analysis.is_transition_matrix", "api/generated/deeptime.markov.tools.analysis.mfpt", "api/generated/deeptime.markov.tools.analysis.mfpt_sensitivity", "api/generated/deeptime.markov.tools.analysis.pcca_memberships", "api/generated/deeptime.markov.tools.analysis.rdl_decomposition", "api/generated/deeptime.markov.tools.analysis.relaxation", "api/generated/deeptime.markov.tools.analysis.stationary_distribution", "api/generated/deeptime.markov.tools.analysis.stationary_distribution_sensitivity", "api/generated/deeptime.markov.tools.analysis.timescale_sensitivity", "api/generated/deeptime.markov.tools.analysis.timescales", "api/generated/deeptime.markov.tools.estimation.bootstrap_counts", "api/generated/deeptime.markov.tools.estimation.bootstrap_trajectories", "api/generated/deeptime.markov.tools.estimation.connected_sets", "api/generated/deeptime.markov.tools.estimation.count_matrix", "api/generated/deeptime.markov.tools.estimation.error_perturbation", "api/generated/deeptime.markov.tools.estimation.is_connected", "api/generated/deeptime.markov.tools.estimation.largest_connected_set", "api/generated/deeptime.markov.tools.estimation.largest_connected_submatrix", "api/generated/deeptime.markov.tools.estimation.log_likelihood", "api/generated/deeptime.markov.tools.estimation.prior_const", "api/generated/deeptime.markov.tools.estimation.prior_neighbor", "api/generated/deeptime.markov.tools.estimation.prior_rev", "api/generated/deeptime.markov.tools.estimation.rate_matrix", "api/generated/deeptime.markov.tools.estimation.tmatrix_cov", "api/generated/deeptime.markov.tools.estimation.tmatrix_sampler", "api/generated/deeptime.markov.tools.estimation.transition_matrix", "api/generated/deeptime.markov.tools.flux.coarsegrain", "api/generated/deeptime.markov.tools.flux.flux_consumers", "api/generated/deeptime.markov.tools.flux.flux_matrix", "api/generated/deeptime.markov.tools.flux.flux_producers", "api/generated/deeptime.markov.tools.flux.flux_production", "api/generated/deeptime.markov.tools.flux.mfpt", "api/generated/deeptime.markov.tools.flux.pathways", "api/generated/deeptime.markov.tools.flux.rate", "api/generated/deeptime.markov.tools.flux.to_netflux", "api/generated/deeptime.markov.tools.flux.total_flux", "api/generated/deeptime.numeric.ZeroRankError", "api/generated/deeptime.numeric.drop_nan_rows", "api/generated/deeptime.numeric.eig_corr", "api/generated/deeptime.numeric.eigs", "api/generated/deeptime.numeric.is_diagonal_matrix", "api/generated/deeptime.numeric.is_square_matrix", "api/generated/deeptime.numeric.schatten_norm", "api/generated/deeptime.numeric.sort_eigs", "api/generated/deeptime.numeric.spd_eig", "api/generated/deeptime.numeric.spd_inv", "api/generated/deeptime.numeric.spd_inv_split", "api/generated/deeptime.numeric.spd_inv_sqrt", "api/generated/deeptime.numeric.spd_truncated_svd", "api/generated/deeptime.plots.Energy2dPlot", "api/generated/deeptime.plots.Network", "api/generated/deeptime.plots.plot_adjacency", "api/generated/deeptime.plots.plot_ck_test", "api/generated/deeptime.plots.plot_energy2d", "api/generated/deeptime.plots.plot_flux", "api/generated/deeptime.plots.plot_implied_timescales", "api/generated/deeptime.plots.plot_markov_model", "api/generated/deeptime.sindy.SINDy", "api/generated/deeptime.sindy.SINDyModel", "api/generated/deeptime.sindy.STLSQ", "api/generated/deeptime.util.EnergyLandscape2d", "api/generated/deeptime.util.QuantityStatistics", "api/generated/deeptime.util.callbacks.ProgressCallback", "api/generated/deeptime.util.callbacks.supports_progress_interface", "api/generated/deeptime.util.confidence_interval", "api/generated/deeptime.util.data.ConcatDataset", "api/generated/deeptime.util.data.TimeLaggedConcatDataset", "api/generated/deeptime.util.data.TimeLaggedDataset", "api/generated/deeptime.util.data.TrajectoriesDataset", "api/generated/deeptime.util.data.TrajectoryDataset", "api/generated/deeptime.util.data.timeshifted_split", "api/generated/deeptime.util.decorators.cached_property", "api/generated/deeptime.util.decorators.deprecated_argument", "api/generated/deeptime.util.decorators.plotting_function", "api/generated/deeptime.util.energy2d", "api/generated/deeptime.util.parallel.handle_n_jobs", "api/generated/deeptime.util.platform.handle_progress_bar", "api/generated/deeptime.util.platform.module_available", "api/generated/deeptime.util.types.atleast_nd", "api/generated/deeptime.util.types.is_timelagged_dataset", "api/generated/deeptime.util.types.to_dataset", "api/generated/deeptime.util.validation.ChapmanKolmogorovTest", "api/generated/deeptime.util.validation.ImpliedTimescales", "api/generated/deeptime.util.validation.ck_test", "api/generated/deeptime.util.validation.implied_timescales", "api/generated/impl/deeptime.covariance.WhiteningTransform", "api/generated/impl/deeptime.covariance.covar", "api/generated/impl/deeptime.covariance.covars", "api/generated/impl/deeptime.covariance.moments_XX", "api/generated/impl/deeptime.covariance.moments_XXXY", "api/generated/impl/deeptime.covariance.moments_block", "api/generated/impl/deeptime.data.BickleyJet", "api/generated/impl/deeptime.data.BirthDeathChain", "api/generated/impl/deeptime.data.CustomSystem", "api/generated/impl/deeptime.data.DoubleWellDiscrete", "api/generated/impl/deeptime.data.DrunkardsWalk", "api/generated/impl/deeptime.data.Ellipsoids", "api/generated/impl/deeptime.data.PBFSimulator", "api/generated/impl/deeptime.data.TimeDependentSystem", "api/generated/impl/deeptime.data.TimeIndependentSystem", "api/index_base", "api/index_basis", "api/index_clustering", "api/index_covariance", "api/index_data", "api/index_decomposition", "api/index_kernels", "api/index_markov", "api/index_markov_hmm", "api/index_markov_tools", "api/index_numeric", "api/index_plots", "api/index_sindy", "api/index_util", "contents", "datasets/index", "datasets/plot_abc_flow", "datasets/plot_bickley_jet", "datasets/plot_birth_death_chain", "datasets/plot_custom_ode", "datasets/plot_custom_sde", "datasets/plot_double_well_2d", "datasets/plot_double_well_discrete", "datasets/plot_drunkards_walk", "datasets/plot_ellipsoids", "datasets/plot_ornstein_uhlenbeck", "datasets/plot_pbf", "datasets/plot_prinz", "datasets/plot_quadruple_well", "datasets/plot_quadruple_well_asymmetric", "datasets/plot_sqrt_model", "datasets/plot_swissroll_model", "datasets/plot_time_quintuple_well", "datasets/plot_tmatrix_1d", "datasets/plot_triple_well_1d", "datasets/plot_triple_well_2d", "datasets/sg_execution_times", "examples/index", "examples/plot_ck_test", "examples/plot_clustering_comparison", "examples/plot_energy_surface", "examples/plot_implied_timescales", "examples/plot_kcca_bickley", "examples/plot_kcca_projection", "examples/plot_network", "examples/plot_pcca_drunkard", "examples/plot_sindy_rossler_attractor", "examples/plot_tpt_gross_net_flux", "examples/plot_tram", "examples/plot_vamp_pbf_projection", "examples/plot_vamp_vs_tica_vs_pca", "examples/sg_execution_times", "imprint", "index_deepdimreduction", "index_dev", "index_dimreduction", "index_examples", "index_msm", "license", "notebooks/clustering", "notebooks/dmd", "notebooks/edmd", "notebooks/examples/ala2-example", "notebooks/examples/coherence-bickley-jet", "notebooks/examples/msm-prinz", "notebooks/examples/sqrt-model-dimrx", "notebooks/hmm", "notebooks/kcca", "notebooks/kedmd", "notebooks/mlmsm", "notebooks/pcca", "notebooks/sindy", "notebooks/tae", "notebooks/tica", "notebooks/tpt", "notebooks/tram", "notebooks/transition-counting", "notebooks/vamp", "notebooks/vampnets"], "filenames": ["api/generated/deeptime.base.Dataset.rst", "api/generated/deeptime.base.Estimator.rst", "api/generated/deeptime.base.Model.rst", "api/generated/deeptime.base.Transformer.rst", "api/generated/deeptime.basis.Concatenation.rst", "api/generated/deeptime.basis.Identity.rst", "api/generated/deeptime.basis.Monomials.rst", "api/generated/deeptime.basis.Observable.rst", "api/generated/deeptime.clustering.BoxDiscretization.rst", "api/generated/deeptime.clustering.BoxDiscretizationModel.rst", "api/generated/deeptime.clustering.ClusterModel.rst", "api/generated/deeptime.clustering.KMeans.rst", "api/generated/deeptime.clustering.KMeansModel.rst", "api/generated/deeptime.clustering.MetricRegistry.rst", "api/generated/deeptime.clustering.MiniBatchKMeans.rst", "api/generated/deeptime.clustering.RegularSpace.rst", "api/generated/deeptime.clustering.kmeans_plusplus.rst", "api/generated/deeptime.clustering.metrics.rst", "api/generated/deeptime.covariance.Covariance.rst", "api/generated/deeptime.covariance.CovarianceModel.rst", "api/generated/deeptime.covariance.KoopmanWeightingEstimator.rst", "api/generated/deeptime.covariance.KoopmanWeightingModel.rst", "api/generated/deeptime.data.abc_flow.rst", "api/generated/deeptime.data.bickley_jet.rst", "api/generated/deeptime.data.birth_death_chain.rst", "api/generated/deeptime.data.custom_ode.rst", "api/generated/deeptime.data.custom_sde.rst", "api/generated/deeptime.data.double_well_2d.rst", "api/generated/deeptime.data.double_well_discrete.rst", "api/generated/deeptime.data.drunkards_walk.rst", "api/generated/deeptime.data.ellipsoids.rst", "api/generated/deeptime.data.ornstein_uhlenbeck.rst", "api/generated/deeptime.data.position_based_fluids.rst", "api/generated/deeptime.data.prinz_potential.rst", "api/generated/deeptime.data.quadruple_well.rst", "api/generated/deeptime.data.quadruple_well_asymmetric.rst", "api/generated/deeptime.data.sqrt_model.rst", "api/generated/deeptime.data.swissroll_model.rst", "api/generated/deeptime.data.time_dependent_quintuple_well.rst", "api/generated/deeptime.data.tmatrix_metropolis1d.rst", "api/generated/deeptime.data.triple_well_1d.rst", "api/generated/deeptime.data.triple_well_2d.rst", "api/generated/deeptime.decomposition.CovarianceKoopmanModel.rst", "api/generated/deeptime.decomposition.DMD.rst", "api/generated/deeptime.decomposition.DMDModel.rst", "api/generated/deeptime.decomposition.EDMD.rst", "api/generated/deeptime.decomposition.EDMDModel.rst", "api/generated/deeptime.decomposition.KVAD.rst", "api/generated/deeptime.decomposition.KVADModel.rst", "api/generated/deeptime.decomposition.KernelCCA.rst", "api/generated/deeptime.decomposition.KernelCCAModel.rst", "api/generated/deeptime.decomposition.KernelEDMD.rst", "api/generated/deeptime.decomposition.KernelEDMDModel.rst", "api/generated/deeptime.decomposition.TICA.rst", "api/generated/deeptime.decomposition.TransferOperatorModel.rst", "api/generated/deeptime.decomposition.VAMP.rst", "api/generated/deeptime.decomposition.blocksplit_trajs.rst", "api/generated/deeptime.decomposition.cvsplit_trajs.rst", "api/generated/deeptime.decomposition.deep.TAE.rst", "api/generated/deeptime.decomposition.deep.TAEModel.rst", "api/generated/deeptime.decomposition.deep.TVAE.rst", "api/generated/deeptime.decomposition.deep.TVAEEncoder.rst", "api/generated/deeptime.decomposition.deep.TVAEModel.rst", "api/generated/deeptime.decomposition.deep.VAMPNet.rst", "api/generated/deeptime.decomposition.deep.VAMPNetModel.rst", "api/generated/deeptime.decomposition.deep.covariances.rst", "api/generated/deeptime.decomposition.deep.koopman_matrix.rst", "api/generated/deeptime.decomposition.deep.kvad_score.rst", "api/generated/deeptime.decomposition.deep.sym_inverse.rst", "api/generated/deeptime.decomposition.deep.vamp_score.rst", "api/generated/deeptime.decomposition.deep.vampnet_loss.rst", "api/generated/deeptime.decomposition.vamp_score.rst", "api/generated/deeptime.decomposition.vamp_score_cv.rst", "api/generated/deeptime.decomposition.vamp_score_data.rst", "api/generated/deeptime.kernels.GaussianKernel.rst", "api/generated/deeptime.kernels.GeneralizedGaussianKernel.rst", "api/generated/deeptime.kernels.Kernel.rst", "api/generated/deeptime.kernels.LaplacianKernel.rst", "api/generated/deeptime.kernels.PolynomialKernel.rst", "api/generated/deeptime.kernels.TorchGaussianKernel.rst", "api/generated/deeptime.kernels.is_torch_kernel.rst", "api/generated/deeptime.markov.PCCAModel.rst", "api/generated/deeptime.markov.ReactiveFlux.rst", "api/generated/deeptime.markov.TransitionCountEstimator.rst", "api/generated/deeptime.markov.TransitionCountModel.rst", "api/generated/deeptime.markov.compute_connected_sets.rst", "api/generated/deeptime.markov.compute_dtrajs_effective.rst", "api/generated/deeptime.markov.compute_effective_stride.rst", "api/generated/deeptime.markov.count_states.rst", "api/generated/deeptime.markov.hmm.BayesianHMM.rst", "api/generated/deeptime.markov.hmm.BayesianHMMPosterior.rst", "api/generated/deeptime.markov.hmm.DiscreteOutputModel.rst", "api/generated/deeptime.markov.hmm.GaussianOutputModel.rst", "api/generated/deeptime.markov.hmm.HiddenMarkovModel.rst", "api/generated/deeptime.markov.hmm.MaximumLikelihoodHMM.rst", "api/generated/deeptime.markov.hmm.OutputModel.rst", "api/generated/deeptime.markov.hmm.init.discrete.metastable_from_data.rst", "api/generated/deeptime.markov.hmm.init.discrete.metastable_from_msm.rst", "api/generated/deeptime.markov.hmm.init.discrete.random_guess.rst", "api/generated/deeptime.markov.hmm.init.gaussian.from_data.rst", "api/generated/deeptime.markov.msm.AugmentedMSM.rst", "api/generated/deeptime.markov.msm.AugmentedMSMEstimator.rst", "api/generated/deeptime.markov.msm.BayesianMSM.rst", "api/generated/deeptime.markov.msm.BayesianMSMPosterior.rst", "api/generated/deeptime.markov.msm.KoopmanReweightedMSM.rst", "api/generated/deeptime.markov.msm.MarkovStateModel.rst", "api/generated/deeptime.markov.msm.MarkovStateModelCollection.rst", "api/generated/deeptime.markov.msm.MaximumLikelihoodMSM.rst", "api/generated/deeptime.markov.msm.OOMReweightedMSM.rst", "api/generated/deeptime.markov.msm.TRAM.rst", "api/generated/deeptime.markov.msm.TRAMDataset.rst", "api/generated/deeptime.markov.msm.TRAMModel.rst", "api/generated/deeptime.markov.number_of_states.rst", "api/generated/deeptime.markov.pcca.rst", "api/generated/deeptime.markov.reactive_flux.rst", "api/generated/deeptime.markov.sample.compute_index_states.rst", "api/generated/deeptime.markov.sample.indices_by_distribution.rst", "api/generated/deeptime.markov.sample.indices_by_sequence.rst", "api/generated/deeptime.markov.sample.indices_by_state.rst", "api/generated/deeptime.markov.tools.analysis.committor.rst", "api/generated/deeptime.markov.tools.analysis.committor_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.correlation.rst", "api/generated/deeptime.markov.tools.analysis.eigenvalue_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.eigenvalues.rst", "api/generated/deeptime.markov.tools.analysis.eigenvector_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.eigenvectors.rst", "api/generated/deeptime.markov.tools.analysis.expectation.rst", "api/generated/deeptime.markov.tools.analysis.expectation_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.expected_counts.rst", "api/generated/deeptime.markov.tools.analysis.expected_counts_stationary.rst", "api/generated/deeptime.markov.tools.analysis.fingerprint_correlation.rst", "api/generated/deeptime.markov.tools.analysis.fingerprint_relaxation.rst", "api/generated/deeptime.markov.tools.analysis.hitting_probability.rst", "api/generated/deeptime.markov.tools.analysis.is_connected.rst", "api/generated/deeptime.markov.tools.analysis.is_rate_matrix.rst", "api/generated/deeptime.markov.tools.analysis.is_reversible.rst", "api/generated/deeptime.markov.tools.analysis.is_transition_matrix.rst", "api/generated/deeptime.markov.tools.analysis.mfpt.rst", "api/generated/deeptime.markov.tools.analysis.mfpt_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.pcca_memberships.rst", "api/generated/deeptime.markov.tools.analysis.rdl_decomposition.rst", "api/generated/deeptime.markov.tools.analysis.relaxation.rst", "api/generated/deeptime.markov.tools.analysis.stationary_distribution.rst", "api/generated/deeptime.markov.tools.analysis.stationary_distribution_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.timescale_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.timescales.rst", "api/generated/deeptime.markov.tools.estimation.bootstrap_counts.rst", "api/generated/deeptime.markov.tools.estimation.bootstrap_trajectories.rst", "api/generated/deeptime.markov.tools.estimation.connected_sets.rst", "api/generated/deeptime.markov.tools.estimation.count_matrix.rst", "api/generated/deeptime.markov.tools.estimation.error_perturbation.rst", "api/generated/deeptime.markov.tools.estimation.is_connected.rst", "api/generated/deeptime.markov.tools.estimation.largest_connected_set.rst", "api/generated/deeptime.markov.tools.estimation.largest_connected_submatrix.rst", "api/generated/deeptime.markov.tools.estimation.log_likelihood.rst", "api/generated/deeptime.markov.tools.estimation.prior_const.rst", "api/generated/deeptime.markov.tools.estimation.prior_neighbor.rst", "api/generated/deeptime.markov.tools.estimation.prior_rev.rst", "api/generated/deeptime.markov.tools.estimation.rate_matrix.rst", "api/generated/deeptime.markov.tools.estimation.tmatrix_cov.rst", "api/generated/deeptime.markov.tools.estimation.tmatrix_sampler.rst", "api/generated/deeptime.markov.tools.estimation.transition_matrix.rst", "api/generated/deeptime.markov.tools.flux.coarsegrain.rst", "api/generated/deeptime.markov.tools.flux.flux_consumers.rst", "api/generated/deeptime.markov.tools.flux.flux_matrix.rst", "api/generated/deeptime.markov.tools.flux.flux_producers.rst", "api/generated/deeptime.markov.tools.flux.flux_production.rst", "api/generated/deeptime.markov.tools.flux.mfpt.rst", "api/generated/deeptime.markov.tools.flux.pathways.rst", "api/generated/deeptime.markov.tools.flux.rate.rst", "api/generated/deeptime.markov.tools.flux.to_netflux.rst", "api/generated/deeptime.markov.tools.flux.total_flux.rst", "api/generated/deeptime.numeric.ZeroRankError.rst", "api/generated/deeptime.numeric.drop_nan_rows.rst", "api/generated/deeptime.numeric.eig_corr.rst", "api/generated/deeptime.numeric.eigs.rst", "api/generated/deeptime.numeric.is_diagonal_matrix.rst", "api/generated/deeptime.numeric.is_square_matrix.rst", "api/generated/deeptime.numeric.schatten_norm.rst", "api/generated/deeptime.numeric.sort_eigs.rst", "api/generated/deeptime.numeric.spd_eig.rst", "api/generated/deeptime.numeric.spd_inv.rst", "api/generated/deeptime.numeric.spd_inv_split.rst", "api/generated/deeptime.numeric.spd_inv_sqrt.rst", "api/generated/deeptime.numeric.spd_truncated_svd.rst", "api/generated/deeptime.plots.Energy2dPlot.rst", "api/generated/deeptime.plots.Network.rst", "api/generated/deeptime.plots.plot_adjacency.rst", "api/generated/deeptime.plots.plot_ck_test.rst", "api/generated/deeptime.plots.plot_energy2d.rst", "api/generated/deeptime.plots.plot_flux.rst", "api/generated/deeptime.plots.plot_implied_timescales.rst", "api/generated/deeptime.plots.plot_markov_model.rst", "api/generated/deeptime.sindy.SINDy.rst", "api/generated/deeptime.sindy.SINDyModel.rst", "api/generated/deeptime.sindy.STLSQ.rst", "api/generated/deeptime.util.EnergyLandscape2d.rst", "api/generated/deeptime.util.QuantityStatistics.rst", "api/generated/deeptime.util.callbacks.ProgressCallback.rst", "api/generated/deeptime.util.callbacks.supports_progress_interface.rst", "api/generated/deeptime.util.confidence_interval.rst", "api/generated/deeptime.util.data.ConcatDataset.rst", "api/generated/deeptime.util.data.TimeLaggedConcatDataset.rst", "api/generated/deeptime.util.data.TimeLaggedDataset.rst", "api/generated/deeptime.util.data.TrajectoriesDataset.rst", "api/generated/deeptime.util.data.TrajectoryDataset.rst", "api/generated/deeptime.util.data.timeshifted_split.rst", "api/generated/deeptime.util.decorators.cached_property.rst", "api/generated/deeptime.util.decorators.deprecated_argument.rst", "api/generated/deeptime.util.decorators.plotting_function.rst", "api/generated/deeptime.util.energy2d.rst", "api/generated/deeptime.util.parallel.handle_n_jobs.rst", "api/generated/deeptime.util.platform.handle_progress_bar.rst", "api/generated/deeptime.util.platform.module_available.rst", "api/generated/deeptime.util.types.atleast_nd.rst", "api/generated/deeptime.util.types.is_timelagged_dataset.rst", "api/generated/deeptime.util.types.to_dataset.rst", "api/generated/deeptime.util.validation.ChapmanKolmogorovTest.rst", "api/generated/deeptime.util.validation.ImpliedTimescales.rst", "api/generated/deeptime.util.validation.ck_test.rst", "api/generated/deeptime.util.validation.implied_timescales.rst", "api/generated/impl/deeptime.covariance.WhiteningTransform.rst", "api/generated/impl/deeptime.covariance.covar.rst", "api/generated/impl/deeptime.covariance.covars.rst", "api/generated/impl/deeptime.covariance.moments_XX.rst", "api/generated/impl/deeptime.covariance.moments_XXXY.rst", "api/generated/impl/deeptime.covariance.moments_block.rst", "api/generated/impl/deeptime.data.BickleyJet.rst", "api/generated/impl/deeptime.data.BirthDeathChain.rst", "api/generated/impl/deeptime.data.CustomSystem.rst", "api/generated/impl/deeptime.data.DoubleWellDiscrete.rst", "api/generated/impl/deeptime.data.DrunkardsWalk.rst", "api/generated/impl/deeptime.data.Ellipsoids.rst", "api/generated/impl/deeptime.data.PBFSimulator.rst", "api/generated/impl/deeptime.data.TimeDependentSystem.rst", "api/generated/impl/deeptime.data.TimeIndependentSystem.rst", "api/index_base.rst", "api/index_basis.rst", "api/index_clustering.rst", "api/index_covariance.rst", "api/index_data.rst", "api/index_decomposition.rst", "api/index_kernels.rst", "api/index_markov.rst", "api/index_markov_hmm.rst", "api/index_markov_tools.rst", "api/index_numeric.rst", "api/index_plots.rst", "api/index_sindy.rst", "api/index_util.rst", "contents.rst", "datasets/index.rst", "datasets/plot_abc_flow.rst", "datasets/plot_bickley_jet.rst", "datasets/plot_birth_death_chain.rst", "datasets/plot_custom_ode.rst", "datasets/plot_custom_sde.rst", "datasets/plot_double_well_2d.rst", "datasets/plot_double_well_discrete.rst", "datasets/plot_drunkards_walk.rst", "datasets/plot_ellipsoids.rst", "datasets/plot_ornstein_uhlenbeck.rst", "datasets/plot_pbf.rst", "datasets/plot_prinz.rst", "datasets/plot_quadruple_well.rst", "datasets/plot_quadruple_well_asymmetric.rst", "datasets/plot_sqrt_model.rst", "datasets/plot_swissroll_model.rst", "datasets/plot_time_quintuple_well.rst", "datasets/plot_tmatrix_1d.rst", "datasets/plot_triple_well_1d.rst", "datasets/plot_triple_well_2d.rst", "datasets/sg_execution_times.rst", "examples/index.rst", "examples/plot_ck_test.rst", "examples/plot_clustering_comparison.rst", "examples/plot_energy_surface.rst", "examples/plot_implied_timescales.rst", "examples/plot_kcca_bickley.rst", "examples/plot_kcca_projection.rst", "examples/plot_network.rst", "examples/plot_pcca_drunkard.rst", "examples/plot_sindy_rossler_attractor.rst", "examples/plot_tpt_gross_net_flux.rst", "examples/plot_tram.rst", "examples/plot_vamp_pbf_projection.rst", "examples/plot_vamp_vs_tica_vs_pca.rst", "examples/sg_execution_times.rst", "imprint.rst", "index_deepdimreduction.rst", "index_dev.rst", "index_dimreduction.rst", "index_examples.rst", "index_msm.rst", "license.rst", "notebooks/clustering.ipynb", "notebooks/dmd.ipynb", "notebooks/edmd.ipynb", "notebooks/examples/ala2-example.ipynb", "notebooks/examples/coherence-bickley-jet.ipynb", "notebooks/examples/msm-prinz.ipynb", "notebooks/examples/sqrt-model-dimrx.ipynb", "notebooks/hmm.ipynb", "notebooks/kcca.ipynb", "notebooks/kedmd.ipynb", "notebooks/mlmsm.ipynb", "notebooks/pcca.ipynb", "notebooks/sindy.ipynb", "notebooks/tae.ipynb", "notebooks/tica.ipynb", "notebooks/tpt.ipynb", "notebooks/tram.ipynb", "notebooks/transition-counting.ipynb", "notebooks/vamp.ipynb", "notebooks/vampnets.ipynb"], "titles": ["<em>class</em> Dataset", "<em>class</em> Estimator", "<em>class</em> Model", "<em>class</em> Transformer", "<em>class</em> Concatenation", "<em>class</em> Identity", "<em>class</em> Monomials", "<em>class</em> Observable", "<em>class</em> BoxDiscretization", "<em>class</em> BoxDiscretizationModel", "<em>class</em> ClusterModel", "<em>class</em> KMeans", "<em>class</em> KMeansModel", "<em>class</em> MetricRegistry", "<em>class</em> MiniBatchKMeans", "<em>class</em> RegularSpace", "<em>function</em> kmeans_plusplus", "<em>data</em> metrics", "<em>class</em> Covariance", "<em>class</em> CovarianceModel", "<em>class</em> KoopmanWeightingEstimator", "<em>class</em> KoopmanWeightingModel", "<em>function</em> abc_flow", "<em>function</em> bickley_jet", "<em>function</em> birth_death_chain", "<em>function</em> custom_ode", "<em>function</em> custom_sde", "<em>function</em> double_well_2d", "<em>function</em> double_well_discrete", "<em>function</em> drunkards_walk", "<em>function</em> ellipsoids", "<em>function</em> ornstein_uhlenbeck", "<em>function</em> position_based_fluids", "<em>function</em> prinz_potential", "<em>function</em> quadruple_well", "<em>function</em> quadruple_well_asymmetric", "<em>function</em> sqrt_model", "<em>function</em> swissroll_model", "<em>function</em> time_dependent_quintuple_well", "<em>function</em> tmatrix_metropolis1d", "<em>function</em> triple_well_1d", "<em>function</em> triple_well_2d", "<em>class</em> CovarianceKoopmanModel", "<em>class</em> DMD", "<em>class</em> DMDModel", "<em>class</em> EDMD", "<em>class</em> EDMDModel", "<em>class</em> KVAD", "<em>class</em> KVADModel", "<em>class</em> KernelCCA", "<em>class</em> KernelCCAModel", "<em>class</em> KernelEDMD", "<em>class</em> KernelEDMDModel", "<em>class</em> TICA", "<em>class</em> TransferOperatorModel", "<em>class</em> VAMP", "<em>function</em> blocksplit_trajs", "<em>function</em> cvsplit_trajs", "<em>class</em> TAE", "<em>class</em> TAEModel", "<em>class</em> TVAE", "<em>class</em> TVAEEncoder", "<em>class</em> TVAEModel", "<em>class</em> VAMPNet", "<em>class</em> VAMPNetModel", "<em>function</em> covariances", "<em>function</em> koopman_matrix", "<em>function</em> kvad_score", "<em>function</em> sym_inverse", "<em>function</em> vamp_score", "<em>function</em> vampnet_loss", "<em>function</em> vamp_score", "<em>function</em> vamp_score_cv", "<em>function</em> vamp_score_data", "<em>class</em> GaussianKernel", "<em>class</em> GeneralizedGaussianKernel", "<em>class</em> Kernel", "<em>class</em> LaplacianKernel", "<em>class</em> PolynomialKernel", "<em>class</em> TorchGaussianKernel", "<em>function</em> is_torch_kernel", "<em>class</em> PCCAModel", "<em>class</em> ReactiveFlux", "<em>class</em> TransitionCountEstimator", "<em>class</em> TransitionCountModel", "<em>function</em> compute_connected_sets", "<em>function</em> compute_dtrajs_effective", "<em>function</em> compute_effective_stride", "<em>function</em> count_states", "<em>class</em> BayesianHMM", "<em>class</em> BayesianHMMPosterior", "<em>class</em> DiscreteOutputModel", "<em>class</em> GaussianOutputModel", "<em>class</em> HiddenMarkovModel", "<em>class</em> MaximumLikelihoodHMM", "<em>class</em> OutputModel", "<em>function</em> metastable_from_data", "<em>function</em> metastable_from_msm", "<em>function</em> random_guess", "<em>function</em> from_data", "<em>class</em> AugmentedMSM", "<em>class</em> AugmentedMSMEstimator", "<em>class</em> BayesianMSM", "<em>class</em> BayesianMSMPosterior", "<em>class</em> KoopmanReweightedMSM", "<em>class</em> MarkovStateModel", "<em>class</em> MarkovStateModelCollection", "<em>class</em> MaximumLikelihoodMSM", "<em>class</em> OOMReweightedMSM", "<em>class</em> TRAM", "<em>class</em> TRAMDataset", "<em>class</em> TRAMModel", "<em>function</em> number_of_states", "<em>function</em> pcca", "<em>function</em> reactive_flux", "<em>function</em> compute_index_states", "<em>function</em> indices_by_distribution", "<em>function</em> indices_by_sequence", "<em>function</em> indices_by_state", "deeptime.markov.tools.analysis.committor", "deeptime.markov.tools.analysis.committor_sensitivity", "deeptime.markov.tools.analysis.correlation", "deeptime.markov.tools.analysis.eigenvalue_sensitivity", "<em>function</em> eigenvalues", "deeptime.markov.tools.analysis.eigenvector_sensitivity", "<em>function</em> eigenvectors", "deeptime.markov.tools.analysis.expectation", "deeptime.markov.tools.analysis.expectation_sensitivity", "deeptime.markov.tools.analysis.expected_counts", "deeptime.markov.tools.analysis.expected_counts_stationary", "deeptime.markov.tools.analysis.fingerprint_correlation", "deeptime.markov.tools.analysis.fingerprint_relaxation", "deeptime.markov.tools.analysis.hitting_probability", "<em>function</em> is_connected", "<em>function</em> is_rate_matrix", "<em>function</em> is_reversible", "<em>function</em> is_transition_matrix", "deeptime.markov.tools.analysis.mfpt", "deeptime.markov.tools.analysis.mfpt_sensitivity", "deeptime.markov.tools.analysis.pcca_memberships", "<em>function</em> rdl_decomposition", "deeptime.markov.tools.analysis.relaxation", "<em>function</em> stationary_distribution", "deeptime.markov.tools.analysis.stationary_distribution_sensitivity", "deeptime.markov.tools.analysis.timescale_sensitivity", "<em>function</em> timescales", "deeptime.markov.tools.estimation.bootstrap_counts", "deeptime.markov.tools.estimation.bootstrap_trajectories", "deeptime.markov.tools.estimation.connected_sets", "deeptime.markov.tools.estimation.count_matrix", "deeptime.markov.tools.estimation.error_perturbation", "deeptime.markov.tools.estimation.is_connected", "deeptime.markov.tools.estimation.largest_connected_set", "deeptime.markov.tools.estimation.largest_connected_submatrix", "deeptime.markov.tools.estimation.log_likelihood", "deeptime.markov.tools.estimation.prior_const", "deeptime.markov.tools.estimation.prior_neighbor", "deeptime.markov.tools.estimation.prior_rev", "deeptime.markov.tools.estimation.rate_matrix", "deeptime.markov.tools.estimation.tmatrix_cov", "deeptime.markov.tools.estimation.tmatrix_sampler", "deeptime.markov.tools.estimation.transition_matrix", "deeptime.markov.tools.flux.coarsegrain", "deeptime.markov.tools.flux.flux_consumers", "deeptime.markov.tools.flux.flux_matrix", "deeptime.markov.tools.flux.flux_producers", "deeptime.markov.tools.flux.flux_production", "deeptime.markov.tools.flux.mfpt", "deeptime.markov.tools.flux.pathways", "deeptime.markov.tools.flux.rate", "deeptime.markov.tools.flux.to_netflux", "deeptime.markov.tools.flux.total_flux", "<em>exception</em> ZeroRankError", "<em>function</em> drop_nan_rows", "<em>function</em> eig_corr", "<em>function</em> eigs", "<em>function</em> is_diagonal_matrix", "<em>function</em> is_square_matrix", "<em>function</em> schatten_norm", "<em>function</em> sort_eigs", "<em>function</em> spd_eig", "<em>function</em> spd_inv", "<em>function</em> spd_inv_split", "<em>function</em> spd_inv_sqrt", "<em>function</em> spd_truncated_svd", "<em>class</em> Energy2dPlot", "<em>class</em> Network", "<em>function</em> plot_adjacency", "<em>function</em> plot_ck_test", "<em>function</em> plot_energy2d", "<em>function</em> plot_flux", "<em>function</em> plot_implied_timescales", "<em>function</em> plot_markov_model", "<em>class</em> SINDy", "<em>class</em> SINDyModel", "<em>class</em> STLSQ", "<em>class</em> EnergyLandscape2d", "<em>class</em> QuantityStatistics", "<em>class</em> ProgressCallback", "<em>function</em> supports_progress_interface", "<em>function</em> confidence_interval", "<em>class</em> ConcatDataset", "<em>class</em> TimeLaggedConcatDataset", "<em>class</em> TimeLaggedDataset", "<em>class</em> TrajectoriesDataset", "<em>class</em> TrajectoryDataset", "<em>function</em> timeshifted_split", "<em>class</em> cached_property", "<em>function</em> deprecated_argument", "<em>function</em> plotting_function", "<em>function</em> energy2d", "<em>function</em> handle_n_jobs", "<em>function</em> handle_progress_bar", "<em>function</em> module_available", "<em>function</em> atleast_nd", "<em>function</em> is_timelagged_dataset", "<em>function</em> to_dataset", "<em>class</em> ChapmanKolmogorovTest", "<em>class</em> ImpliedTimescales", "<em>function</em> ck_test", "<em>function</em> implied_timescales", "<em>class</em> WhiteningTransform", "<em>function</em> covar", "<em>function</em> covars", "<em>function</em> moments_XX", "<em>function</em> moments_XXXY", "<em>function</em> moments_block", "<em>class</em> BickleyJet", "<em>class</em> BirthDeathChain", "<em>class</em> CustomSystem", "<em>class</em> DoubleWellDiscrete", "<em>class</em> DrunkardsWalk", "<em>class</em> Ellipsoids", "<em>class</em> PBFSimulator", "<em>class</em> TimeDependentSystem", "<em>class</em> TimeIndependentSystem", "deeptime.base", "deeptime.basis", "deeptime.clustering", "deeptime.covariance", "deeptime.data", "deeptime.decomposition", "deeptime.kernels", "deeptime.markov", "deeptime.markov.hmm", "deeptime.markov.tools", "deeptime.numeric", "deeptime.plots", "deeptime.sindy", "deeptime.util", "Table Of Contents", "Datasets", "Arnold-Beltrami-Childress flow", "Bickley Jet", "Birth-death chain model", "Custom ODEs", "Custom SDEs", "Double-well 2D", "Double-well discrete", "Drunkard\u2019s walk", "Ellipsoids dataset", "One-dimensional Ornstein-Uhlenbeck process", "Position-based fluids", "One-dimensional Prinz potential", "Quadruple-well", "Asymmetric Quadruple-well", "Sqrt model", "Swissroll model", "Time-dependent quintuple well", "Metropolis chain in 1D energy landscape", "Triple-well 1D", "Triple-well 2D", "Computation times", "General examples", "Chapman-Kolmogorov test", "Clustering methods comparison", "Energy surface", "Implied timescales", "Kernel CCA on the Bickley jet to find coherent sets", "Kernel CCA on the sqrt-Model to transform data", "Network plots", "PCCA+ on the Drunkard\u2019s walk example", "Identification of the Rossler system with SINDy", "Gross and net flux on the Drunkard\u2019s walk example", "TRAM on a 1D double well", "VAMP on Position Based Fluids", "VAMP vs. TICA vs. PCA", "Computation times", "Imprint", "Deep dim reduction", "For developers", "Dimension reduction", "Examples", "Markov state models", "Software License", "Clustering", "DMD", "EDMD", "VAMPNets on Alanine Dipeptide", "Coherent set comparison on Bickley jet", "MSM on Prinz potential", "Dimension reduction of double-wedge dataset", "Hidden Markov Models", "Kernel VAMP / kernel CCA", "Kernel EDMD", "Maximum-likelihood MSMs", "Coarse-graining with PCCA+", "SINDy", "Time-lagged autoencoders", "TICA", "Transition path theory", "TRAM", "Transition counting", "VAMP / time-lagged CCA", "VAMPNets"], "terms": {"deeptim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 133, 134, 135, 136, 140, 142, 145, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314], "base": [0, 1, 2, 3, 8, 11, 14, 23, 32, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 60, 63, 65, 66, 69, 71, 72, 73, 76, 82, 83, 93, 100, 101, 102, 104, 105, 106, 108, 109, 110, 158, 160, 174, 180, 181, 182, 183, 186, 187, 190, 198, 210, 216, 227, 232, 233, 237, 250, 251, 272, 273, 276, 280, 284, 287, 288, 290, 291, 292, 293, 294, 298, 300, 302, 303, 304, 305, 306, 309, 310, 311, 312], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 119, 121, 123, 125, 126, 130, 131, 132, 135, 137, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 216, 218, 219, 220, 221, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 253, 259, 260, 268, 281, 288, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314], "superclass": [0, 2, 12, 14, 95], "It": [0, 8, 10, 12, 15, 22, 25, 26, 31, 32, 34, 35, 40, 42, 45, 46, 53, 54, 55, 61, 69, 70, 71, 75, 84, 93, 94, 105, 110, 121, 130, 158, 168, 186, 190, 192, 193, 194, 214, 219, 221, 233, 290, 291, 295, 296, 297, 298, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314], "an": [0, 1, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 64, 65, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 121, 126, 130, 131, 141, 147, 148, 154, 158, 174, 177, 186, 187, 188, 190, 191, 192, 193, 194, 208, 212, 214, 215, 218, 219, 222, 223, 224, 225, 226, 231, 232, 233, 243, 244, 249, 266, 267, 277, 278, 279, 282, 286, 290, 291, 293, 294, 295, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313], "abstract": [0, 1, 3, 95, 290], "requir": [0, 18, 20, 43, 80, 84, 85, 87, 89, 93, 94, 96, 102, 105, 107, 110, 160, 214, 219, 233, 241, 289, 291, 294, 295, 296, 298, 302, 305, 309, 312, 314], "implement": [0, 9, 10, 11, 12, 13, 14, 17, 18, 22, 23, 27, 31, 34, 35, 41, 49, 51, 55, 61, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 89, 91, 95, 100, 102, 104, 105, 106, 107, 113, 119, 147, 158, 161, 193, 194, 198, 199, 216, 227, 233, 234, 235, 242, 250, 275, 289, 290, 291, 293, 295, 299, 302, 309, 310, 313], "__len__": [0, 215, 216, 299], "obtain": [0, 25, 33, 42, 53, 55, 84, 90, 92, 93, 94, 95, 97, 100, 103, 104, 105, 106, 108, 110, 149, 186, 189, 190, 191, 192, 197, 207, 221, 277, 279, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313], "its": [0, 10, 11, 12, 14, 53, 55, 58, 61, 71, 82, 87, 100, 104, 105, 106, 110, 140, 158, 161, 174, 186, 218, 231, 284, 290, 291, 294, 295, 296, 298, 299, 300, 302, 305, 306, 310, 313], "length": [0, 10, 11, 12, 14, 25, 26, 29, 42, 56, 63, 72, 81, 83, 84, 91, 92, 93, 95, 100, 104, 105, 106, 108, 109, 110, 116, 140, 146, 147, 173, 186, 194, 203, 206, 215, 216, 227, 229, 230, 231, 234, 235, 255, 268, 270, 276, 277, 294, 297, 299, 300, 310, 311, 312], "__getitem__": [0, 215, 216, 299], "one": [0, 1, 6, 8, 9, 11, 14, 15, 18, 20, 25, 29, 30, 31, 33, 40, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 64, 71, 72, 81, 83, 84, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 133, 136, 137, 147, 158, 161, 186, 193, 194, 217, 222, 223, 224, 225, 226, 227, 229, 231, 234, 235, 244, 275, 282, 288, 290, 291, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314], "sever": [0, 61, 94, 100, 104, 105, 106, 114, 293, 312], "item": [0, 202, 299], "setflag": [0, 110, 201, 202, 203, 204, 205], "set": [0, 1, 2, 6, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 27, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 72, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 120, 132, 137, 138, 139, 146, 147, 148, 152, 153, 154, 161, 162, 168, 171, 172, 186, 188, 190, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 210, 214, 218, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 250, 273, 281, 282, 287, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314], "writeabl": [0, 110, 201, 202, 203, 204, 205], "state": [0, 7, 9, 24, 25, 26, 28, 29, 30, 33, 36, 37, 38, 41, 42, 46, 48, 50, 52, 53, 54, 61, 63, 72, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127, 130, 131, 132, 133, 137, 138, 139, 141, 148, 153, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 186, 190, 192, 206, 210, 219, 227, 228, 229, 230, 231, 232, 234, 235, 243, 244, 245, 250, 254, 259, 266, 267, 269, 275, 277, 279, 280, 281, 284, 290, 291, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "util": [0, 42, 53, 55, 61, 63, 64, 68, 90, 93, 100, 103, 104, 105, 106, 185, 188, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 227, 229, 234, 235, 242, 245, 246, 247, 250, 276, 277, 290, 291, 294, 298, 299, 301, 308, 314], "data": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 89, 92, 93, 94, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 139, 147, 158, 161, 188, 189, 191, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 210, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "timelaggeddataset": [0, 202, 205, 216, 250, 299], "A": [0, 1, 2, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 72, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 117, 119, 120, 127, 131, 132, 133, 134, 135, 136, 140, 141, 147, 151, 158, 160, 161, 164, 167, 168, 169, 170, 171, 176, 184, 186, 187, 190, 191, 192, 194, 195, 206, 211, 212, 214, 216, 228, 229, 230, 231, 233, 291, 293, 294, 295, 296, 297, 300, 302, 304, 305, 306, 309, 310, 312], "pair": [0, 43, 45, 47, 49, 51, 82, 110, 133, 140, 162, 163, 164, 165, 166, 170, 171, 175, 206, 228, 296, 309], "instantan": [0, 18, 19, 42, 47, 48, 52, 55, 58, 60, 63, 64, 65, 66, 73, 174, 203, 205, 216, 308, 309, 313], "timelag": [0, 18, 23, 63, 64, 203, 216], "timelaggedconcatdataset": [0, 203, 250], "concaten": [0, 11, 107, 201, 204, 205, 216, 250, 257, 264, 265, 271, 276, 277, 298, 300, 301, 302, 313], "trajectorydataset": [0, 203, 204, 250, 298, 301, 308, 314], "trajectori": [0, 9, 10, 11, 12, 14, 18, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 44, 47, 53, 55, 56, 57, 59, 62, 72, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 137, 145, 146, 147, 149, 204, 205, 206, 216, 222, 223, 224, 225, 227, 229, 230, 232, 233, 234, 235, 250, 255, 256, 257, 261, 263, 264, 265, 266, 267, 268, 270, 271, 276, 277, 284, 285, 286, 291, 295, 297, 298, 299, 300, 301, 302, 304, 305, 308, 309, 311, 312, 313, 314], "lagtim": [0, 18, 19, 20, 42, 43, 45, 47, 49, 51, 53, 55, 72, 83, 84, 86, 87, 89, 90, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 146, 149, 188, 204, 205, 206, 216, 217, 218, 219, 274, 276, 277, 284, 285, 286, 291, 298, 299, 300, 301, 302, 305, 306, 309, 311, 312, 313, 314], "trajectoriesdataset": [0, 203, 205, 216, 250, 298], "multipl": [0, 14, 42, 53, 55, 58, 60, 88, 93, 100, 104, 105, 106, 109, 140, 146, 147, 204, 205, 206, 214, 222, 223, 227, 229, 234, 235, 311], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 30, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 125, 142, 147, 149, 158, 160, 161, 174, 180, 181, 182, 183, 184, 186, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 215, 217, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 242, 244, 273, 284, 287, 289, 290, 291, 292, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314], "write": [0, 110, 201, 202, 203, 204, 205, 250, 307], "true": [0, 11, 13, 17, 18, 19, 42, 46, 48, 50, 52, 53, 54, 55, 56, 61, 64, 65, 68, 71, 72, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 118, 119, 120, 121, 123, 124, 125, 133, 134, 135, 136, 142, 145, 146, 147, 148, 149, 151, 152, 153, 160, 161, 164, 174, 176, 178, 187, 188, 189, 190, 191, 195, 196, 200, 201, 202, 203, 204, 205, 210, 214, 217, 219, 222, 223, 224, 225, 226, 227, 231, 252, 254, 257, 258, 263, 264, 265, 268, 269, 270, 271, 274, 276, 279, 281, 282, 295, 297, 298, 299, 300, 301, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314], "flag": [0, 84, 93, 110, 201, 202, 203, 204, 205], "contain": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 28, 30, 42, 43, 45, 47, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 64, 66, 69, 71, 81, 82, 83, 84, 89, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 139, 140, 148, 166, 173, 186, 187, 188, 191, 192, 193, 194, 195, 197, 201, 202, 203, 204, 205, 217, 218, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 274, 291, 292, 294, 297, 304, 305, 309, 310, 311, 312, 313], "arrai": [0, 8, 9, 10, 11, 12, 14, 16, 18, 22, 25, 26, 27, 31, 33, 35, 38, 41, 42, 64, 65, 68, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 89, 90, 91, 92, 93, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 164, 166, 173, 177, 186, 187, 190, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 210, 214, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 245, 252, 256, 257, 258, 264, 265, 271, 275, 280, 282, 290, 295, 299, 301, 302, 305, 306, 309, 310, 312], "model": [1, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 25, 27, 28, 30, 31, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 72, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 139, 146, 147, 149, 154, 158, 160, 161, 164, 168, 170, 171, 190, 191, 192, 193, 194, 195, 217, 218, 219, 220, 230, 231, 232, 245, 250, 251, 259, 272, 273, 274, 277, 278, 280, 282, 284, 285, 287, 290, 291, 292, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "none": [1, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 30, 32, 36, 37, 42, 43, 45, 47, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 121, 123, 125, 126, 129, 130, 131, 135, 137, 140, 141, 142, 145, 146, 149, 153, 158, 159, 160, 161, 171, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 279, 284, 290, 294, 305, 309, 313], "all": [1, 3, 8, 11, 12, 14, 15, 18, 20, 23, 42, 45, 53, 55, 61, 72, 73, 76, 82, 84, 89, 91, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 132, 139, 146, 147, 148, 149, 160, 166, 168, 173, 175, 180, 184, 186, 190, 192, 195, 202, 205, 210, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 236, 288, 290, 291, 294, 295, 296, 297, 305, 306, 308, 309, 310, 311, 312, 313], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 290, 291, 294, 295, 299, 301, 303, 304, 305, 309, 313, 314], "option": [1, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 30, 32, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 51, 53, 54, 55, 58, 60, 61, 63, 64, 66, 68, 71, 72, 73, 78, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 123, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 168, 171, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 206, 210, 211, 212, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 290, 294, 295, 296, 302, 305, 307, 309, 310, 312, 313], "default": [1, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 72, 73, 78, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 121, 142, 146, 148, 151, 152, 153, 158, 160, 161, 168, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 206, 210, 214, 216, 218, 219, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 290, 291, 302, 307, 309, 310, 313], "which": [1, 6, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 27, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 51, 53, 54, 55, 58, 60, 61, 63, 64, 66, 72, 74, 75, 76, 77, 78, 79, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 117, 121, 137, 140, 141, 143, 145, 146, 161, 162, 173, 175, 176, 178, 179, 184, 186, 187, 190, 191, 192, 193, 194, 197, 202, 203, 206, 210, 217, 227, 231, 232, 233, 241, 242, 243, 244, 245, 274, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314], "can": [1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 41, 42, 43, 45, 46, 47, 51, 53, 55, 58, 59, 60, 61, 63, 64, 70, 71, 72, 73, 79, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 121, 128, 130, 133, 135, 146, 147, 148, 149, 151, 152, 153, 158, 160, 168, 175, 179, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 199, 203, 206, 207, 211, 215, 217, 218, 219, 221, 222, 223, 227, 228, 230, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 278, 282, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "us": [1, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 75, 81, 82, 83, 84, 86, 89, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 121, 123, 125, 130, 133, 139, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 158, 160, 161, 162, 164, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 202, 203, 206, 210, 211, 214, 218, 219, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 238, 241, 242, 243, 245, 249, 258, 274, 282, 283, 284, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "initi": [1, 8, 11, 14, 15, 16, 18, 20, 22, 23, 27, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 83, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 128, 141, 158, 193, 194, 227, 229, 231, 233, 234, 235, 250, 275, 282, 284, 299, 302, 307, 309, 310, 311, 313], "In": [1, 11, 12, 15, 18, 19, 22, 30, 42, 43, 45, 49, 53, 55, 58, 61, 72, 84, 90, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 133, 135, 147, 158, 184, 186, 187, 206, 211, 215, 216, 218, 227, 229, 232, 233, 234, 235, 280, 282, 289, 293, 294, 295, 296, 297, 298, 300, 302, 303, 305, 308, 309, 310, 311, 312, 313, 314], "case": [1, 8, 11, 14, 15, 19, 24, 26, 30, 42, 47, 53, 55, 58, 60, 63, 64, 72, 74, 75, 76, 77, 78, 79, 80, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 125, 135, 175, 179, 184, 186, 187, 188, 206, 216, 218, 227, 228, 229, 232, 234, 235, 244, 290, 291, 295, 297, 302, 303, 305, 308, 309, 310, 311, 312, 313], "capabl": [1, 22, 27, 31, 33, 34, 35, 38, 41, 46, 250], "onlin": [1, 18, 65, 288, 291, 295], "learn": [1, 11, 14, 20, 42, 49, 53, 55, 58, 60, 63, 71, 72, 89, 94, 99, 101, 105, 107, 193, 194, 282, 289, 291, 299, 303, 305, 307, 308, 309, 313, 314], "i": [1, 6, 11, 12, 18, 22, 24, 26, 29, 30, 39, 42, 46, 48, 49, 50, 52, 53, 54, 63, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 89, 91, 92, 93, 95, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 127, 132, 133, 134, 138, 139, 140, 146, 149, 150, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 168, 169, 176, 186, 193, 194, 203, 206, 216, 217, 222, 223, 224, 225, 226, 227, 228, 231, 233, 267, 268, 275, 281, 283, 284, 285, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "e": [1, 6, 18, 23, 24, 26, 30, 33, 39, 42, 46, 48, 50, 52, 54, 55, 61, 63, 71, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 121, 126, 128, 129, 130, 131, 137, 141, 149, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 176, 186, 187, 190, 191, 192, 194, 203, 206, 210, 216, 217, 227, 231, 233, 284, 289, 290, 291, 293, 294, 295, 296, 298, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "updat": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 33, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 198, 199, 233, 252, 268, 290, 295], "thi": [1, 2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 125, 133, 135, 136, 139, 146, 147, 149, 157, 158, 160, 161, 168, 174, 176, 177, 180, 181, 182, 183, 185, 186, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 206, 209, 210, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 275, 277, 278, 279, 281, 282, 283, 284, 286, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "resum": [1, 11, 14], "process": [1, 9, 10, 12, 20, 26, 27, 28, 31, 34, 35, 38, 40, 41, 42, 53, 55, 63, 71, 72, 82, 90, 94, 96, 100, 101, 103, 104, 105, 106, 107, 114, 119, 121, 130, 131, 133, 137, 141, 147, 158, 164, 168, 170, 171, 191, 214, 218, 230, 241, 247, 251, 272, 289, 291, 293, 295, 296, 297, 298, 302, 303, 305, 306, 308, 309, 310, 312, 313, 314], "attribut": [1, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 33, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 74, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 186, 190, 193, 194, 197, 199, 201, 202, 203, 204, 205, 207, 215, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235], "fetch_model": [1, 8, 11, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 83, 89, 94, 101, 102, 107, 108, 109, 193, 275, 278, 279, 282, 285, 286, 290, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314], "yield": [1, 6, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 30, 32, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 62, 63, 65, 71, 72, 74, 75, 76, 77, 78, 79, 83, 89, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 184, 186, 187, 193, 216, 218, 221, 227, 228, 229, 231, 232, 234, 235, 291, 295, 297, 300, 302, 309, 313, 314], "fit": [1, 8, 11, 12, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 64, 72, 83, 89, 91, 92, 93, 94, 95, 101, 102, 107, 108, 109, 193, 194, 195, 275, 278, 279, 282, 285, 286, 290, 291, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314], "wa": [1, 9, 10, 11, 12, 14, 15, 19, 20, 21, 32, 42, 43, 44, 46, 47, 48, 50, 52, 53, 55, 71, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 121, 137, 145, 158, 161, 185, 186, 190, 206, 212, 221, 290, 293, 294, 296, 303, 305, 309, 311, 312, 313], "call": [1, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 83, 89, 90, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 133, 136, 146, 147, 160, 185, 193, 195, 197, 198, 214, 219, 231, 290, 293, 294, 295, 302, 304, 309, 310, 312, 313], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 252, 256, 267, 268, 282, 284, 290, 295, 299, 301, 303, 305, 309, 310, 311], "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 250, 290, 293, 295, 302, 308, 313], "kwarg": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 83, 89, 90, 94, 101, 102, 103, 107, 108, 109, 191, 193, 197, 221], "s": [1, 2, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 30, 33, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 72, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 119, 120, 121, 122, 124, 127, 130, 131, 133, 138, 141, 143, 144, 147, 148, 150, 151, 152, 153, 161, 180, 182, 184, 185, 186, 190, 192, 193, 194, 195, 214, 224, 226, 227, 229, 231, 233, 234, 235, 251, 257, 264, 265, 267, 271, 272, 273, 284, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314], "intern": [1, 8, 11, 14, 15, 18, 20, 22, 27, 31, 33, 34, 35, 38, 41, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 69, 71, 83, 89, 91, 92, 93, 94, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 193, 232, 233, 291, 295, 310], "overwrit": [1, 8, 47, 100, 104, 105, 106, 190, 192], "wai": [1, 8, 11, 15, 23, 47, 72, 109, 194, 233, 290, 295, 310, 313], "everi": [1, 8, 15, 47, 55, 61, 82, 93, 100, 104, 105, 106, 109, 110, 111, 146, 147, 160, 180, 182, 284, 295, 302, 313], "autonom": [1, 8, 47], "instanc": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 26, 27, 29, 31, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 185, 193, 194, 195, 203, 205, 218, 219, 230, 299, 302, 305, 309, 312, 313, 314], "sometim": [1, 8, 47, 83, 295, 296, 306, 309, 313], "partial_fit": [1, 8, 14, 15, 18, 20, 47, 53, 55, 63, 290, 291, 295], "avail": [1, 8, 11, 13, 14, 15, 16, 17, 18, 42, 43, 47, 51, 53, 55, 72, 82, 83, 89, 90, 93, 94, 96, 97, 100, 104, 105, 106, 116, 118, 147, 211, 213, 217, 218, 227, 229, 234, 235, 290, 291, 293, 295, 298, 302, 309, 311, 312, 313], "get": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 72, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 162, 193, 194, 195, 202, 207, 233, 282, 295, 296, 298, 299, 302, 305, 308, 311], "array_lik": [1, 3, 4, 5, 6, 7, 8, 11, 14, 15, 18, 20, 24, 43, 45, 47, 49, 51, 53, 55, 58, 59, 60, 62, 63, 64, 72, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 117, 119, 120, 132, 149, 160, 161, 168, 171, 193, 214, 221, 227, 228, 229, 234, 235], "addit": [1, 8, 11, 14, 15, 18, 20, 30, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 71, 83, 89, 93, 94, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 173, 193, 221, 222, 223, 231, 232, 234, 235, 294, 311, 313], "self": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 172, 193, 194, 195, 198, 227, 290, 299], "refer": [1, 8, 11, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 32, 33, 41, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 71, 72, 81, 82, 83, 84, 89, 91, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 119, 121, 130, 131, 133, 137, 139, 141, 147, 148, 149, 151, 152, 153, 154, 158, 160, 161, 162, 164, 167, 168, 169, 170, 171, 189, 190, 192, 193, 195, 227, 231, 233, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "fit_fetch": [1, 8, 11, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 72, 83, 89, 94, 101, 102, 107, 108, 109, 193, 274, 276, 277, 284, 298, 299, 300, 301, 311], "subsequ": [1, 8, 9, 11, 13, 14, 15, 17, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 83, 89, 93, 94, 96, 101, 102, 107, 108, 109, 193, 210, 290, 295, 301, 303, 309, 310], "fetch": [1, 8, 11, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 72, 83, 89, 94, 100, 101, 102, 104, 105, 106, 107, 108, 109, 193, 290, 295, 298, 309, 312], "argument": [1, 8, 11, 14, 15, 18, 20, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 83, 84, 89, 90, 93, 94, 99, 101, 102, 103, 105, 107, 108, 109, 173, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 208, 211, 214, 216, 230, 233, 291, 294, 302, 305, 309, 310, 314], "get_param": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195], "deep": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 250, 298, 299, 301, 308, 314], "fals": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 116, 118, 119, 120, 123, 125, 133, 134, 135, 136, 140, 145, 148, 149, 151, 152, 153, 160, 161, 164, 174, 176, 178, 180, 182, 183, 190, 193, 194, 195, 197, 200, 206, 209, 214, 219, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 253, 257, 260, 262, 263, 264, 265, 267, 271, 274, 280, 285, 286, 297, 298, 299, 300, 302, 308, 310, 312, 313, 314], "param": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 301, 303], "name": [1, 2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 197, 213, 295, 302, 305, 307], "map": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 31, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 227, 231, 232, 244, 289, 295, 296, 299, 302, 304, 308, 309, 312, 313], "valu": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 121, 125, 126, 127, 128, 129, 131, 141, 150, 155, 156, 157, 158, 162, 163, 164, 165, 166, 168, 170, 171, 174, 178, 184, 186, 187, 190, 191, 192, 193, 194, 195, 196, 200, 210, 211, 227, 228, 232, 233, 279, 290, 291, 295, 302, 303, 306, 307, 309, 310, 312, 313, 314], "string": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 158, 186, 190, 192, 193, 194, 198, 233, 305, 314], "ani": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 133, 173, 187, 193, 194, 200, 204, 214, 252, 253, 262, 268, 288, 294, 295, 299, 302, 303, 306, 311, 313, 314], "set_param": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195], "work": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 208, 214, 241, 289, 294, 298, 306, 307, 311, 314], "simpl": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 214, 265, 284, 302, 311], "well": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 25, 27, 28, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 76, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 125, 193, 194, 195, 199, 216, 230, 250, 251, 272, 273, 287, 292, 293, 294, 296, 297, 298, 302, 303, 304, 305, 306, 308, 309, 310, 312, 313], "nest": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195], "object": [1, 2, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 25, 26, 28, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 67, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 158, 160, 164, 177, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 215, 218, 220, 233, 249, 250, 275, 288, 293, 294, 295, 301, 302, 303, 305, 309, 310, 311], "pipelin": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 291, 298, 309], "latter": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195, 295, 313], "have": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 129, 140, 151, 161, 162, 163, 165, 173, 193, 194, 195, 206, 210, 214, 222, 223, 224, 225, 227, 229, 231, 233, 234, 235, 290, 294, 295, 298, 305, 307, 308, 309, 311, 312], "form": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 25, 26, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 149, 174, 193, 194, 195, 204, 255, 256, 275, 294, 295, 296, 302, 303, 304, 307, 309, 310, 313], "compon": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 73, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 133, 148, 151, 152, 153, 184, 193, 194, 195, 221, 274, 285, 286, 291, 295, 303, 306, 307, 309, 313], "__": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 193, 194, 195], "so": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 30, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 133, 135, 159, 168, 184, 193, 194, 195, 211, 214, 219, 233, 290, 291, 293, 294, 295, 304, 308, 309, 310, 311, 313, 314], "possibl": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 29, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 168, 190, 192, 193, 194, 195, 210, 216, 222, 223, 224, 225, 226, 231, 233, 288, 291, 293, 295, 302, 303, 306, 309, 313, 314], "each": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 72, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 134, 136, 139, 140, 146, 147, 148, 159, 166, 168, 173, 174, 186, 190, 192, 193, 194, 195, 206, 210, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 233, 234, 235, 290, 293, 294, 295, 298, 300, 302, 305, 306, 307, 309, 310, 311, 312, 313], "dict": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 186, 187, 189, 192, 193, 194, 195, 234, 235, 265, 276, 299, 300, 301], "properti": [1, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 74, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 133, 136, 162, 186, 193, 194, 197, 201, 202, 203, 204, 205, 207, 217, 218, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 290, 296, 300, 305, 307, 309, 312, 314], "has_model": [1, 8, 11, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 83, 89, 94, 101, 102, 107, 108, 109, 193], "bool": [1, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 24, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 68, 72, 80, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 119, 120, 123, 124, 125, 133, 134, 135, 136, 140, 142, 145, 148, 149, 151, 152, 153, 160, 161, 174, 176, 177, 178, 180, 183, 187, 188, 189, 191, 193, 195, 197, 199, 200, 206, 210, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 279], "report": [1, 8, 11, 14, 15, 16, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 83, 89, 94, 101, 102, 107, 108, 109, 193, 295, 310], "whether": [1, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 24, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 63, 64, 65, 68, 72, 80, 83, 84, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 118, 142, 148, 149, 151, 152, 153, 176, 177, 180, 183, 187, 188, 189, 191, 193, 195, 197, 199, 206, 209, 210, 213, 215, 217, 218, 219, 227, 228, 229, 231, 234, 235, 294, 305, 307, 309, 313], "assum": [1, 8, 11, 14, 15, 18, 20, 26, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 71, 81, 83, 84, 89, 93, 94, 96, 101, 102, 105, 106, 107, 108, 109, 110, 113, 146, 147, 178, 193, 194, 197, 210, 216, 221, 231, 291, 293, 296, 309, 311, 313, 314], "otherwis": [1, 8, 11, 14, 15, 18, 20, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 71, 72, 80, 83, 84, 86, 89, 93, 94, 95, 96, 101, 102, 105, 107, 108, 109, 110, 111, 124, 125, 133, 134, 135, 136, 151, 161, 176, 186, 187, 189, 190, 193, 210, 216, 294, 302, 309, 310, 312, 313, 314], "shortcut": [1, 8, 11, 14, 15, 18, 20, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 83, 89, 94, 101, 102, 107, 108, 109, 193, 217], "copi": [2, 9, 10, 12, 19, 21, 42, 44, 46, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 81, 82, 84, 90, 91, 92, 93, 95, 100, 102, 103, 104, 105, 106, 107, 111, 194, 195, 207, 214, 222, 223, 224, 225, 226, 227, 253, 291, 294, 301], "make": [2, 9, 10, 12, 16, 19, 21, 42, 44, 46, 48, 50, 52, 54, 59, 61, 62, 63, 64, 81, 82, 83, 84, 90, 91, 92, 93, 95, 96, 97, 99, 100, 103, 104, 105, 106, 111, 154, 162, 190, 192, 194, 227, 290, 291, 294, 295, 299, 301, 305, 306, 308, 309, 310, 312, 313], "new": [2, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 42, 44, 46, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 84, 90, 91, 92, 93, 94, 95, 100, 103, 104, 105, 106, 107, 111, 147, 188, 192, 194, 203, 205, 214, 227, 236, 250, 290, 294, 295, 298, 307, 313], "estim": [2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 69, 71, 72, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 142, 189, 191, 193, 194, 195, 196, 210, 217, 219, 226, 233, 236, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314], "__call__": [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 20, 21, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 83, 198, 221, 227, 229, 234, 235, 299], "arg": [3, 9, 10, 11, 12, 14, 20, 21, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 83, 90, 101, 103, 107, 109, 173, 197, 198, 218, 231], "function": [3, 9, 10, 11, 12, 14, 20, 21, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 83, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 119, 146, 147, 149, 158, 164, 193, 194, 195, 198, 227, 229, 234, 235, 245, 250, 278, 290, 291, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313], "input": [3, 4, 5, 6, 7, 9, 11, 14, 16, 18, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 63, 71, 72, 83, 84, 86, 89, 93, 94, 96, 100, 104, 105, 106, 107, 108, 109, 110, 114, 146, 161, 172, 173, 178, 180, 184, 193, 194, 195, 202, 206, 212, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 233, 289, 297, 308, 309, 311, 313, 314], "basi": [4, 5, 6, 7, 10, 19, 21, 42, 45, 46, 47, 53, 54, 55, 69, 194, 250, 291, 297, 301, 307, 309, 313], "obs1": [4, 121, 130], "callabl": [4, 16, 25, 26, 42, 45, 46, 47, 48, 50, 52, 53, 54, 55, 58, 60, 61, 63, 72, 73, 102, 187, 194, 208, 219, 227, 229, 234, 235, 301], "ndarrai": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 26, 32, 36, 37, 39, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 192, 193, 194, 196, 197, 200, 203, 204, 205, 206, 210, 214, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 290], "obs2": [4, 121, 130], "oper": [4, 20, 21, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 58, 60, 61, 63, 64, 69, 71, 100, 104, 105, 106, 108, 219, 227, 231, 233, 289, 291, 293, 294, 296, 297, 303, 304, 309, 310, 313, 314], "evalu": [4, 5, 6, 7, 11, 16, 22, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 42, 52, 53, 55, 58, 60, 61, 63, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 93, 95, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 146, 150, 186, 193, 194, 197, 219, 221, 227, 229, 233, 234, 235, 279, 284, 291, 295, 298, 299, 302, 303, 304, 305, 310, 311, 313, 314], "f_1": [4, 150, 307, 313], "circ": [4, 289], "f_2": [4, 307], "x": [4, 5, 6, 7, 11, 12, 15, 18, 21, 22, 23, 25, 26, 27, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 50, 52, 53, 54, 55, 58, 60, 65, 66, 74, 75, 76, 77, 78, 79, 100, 104, 105, 106, 111, 119, 121, 130, 131, 137, 141, 149, 150, 184, 188, 190, 193, 194, 195, 196, 206, 210, 216, 221, 222, 223, 224, 225, 226, 227, 228, 233, 255, 256, 257, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 279, 282, 284, 286, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314], "where": [4, 6, 7, 9, 10, 11, 12, 18, 25, 26, 27, 30, 33, 38, 42, 46, 53, 54, 55, 72, 74, 75, 77, 78, 88, 89, 91, 93, 95, 100, 104, 105, 106, 107, 111, 112, 115, 116, 117, 118, 146, 147, 158, 174, 178, 195, 210, 216, 232, 233, 279, 280, 291, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313], "ar": [4, 8, 10, 11, 12, 14, 15, 18, 19, 20, 21, 23, 29, 32, 36, 37, 38, 39, 42, 43, 53, 55, 56, 58, 60, 61, 62, 63, 64, 66, 68, 71, 72, 75, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 119, 123, 125, 129, 130, 131, 136, 139, 140, 147, 148, 149, 158, 160, 161, 163, 165, 168, 173, 174, 175, 178, 180, 181, 182, 183, 184, 186, 187, 190, 191, 192, 194, 195, 197, 200, 202, 206, 209, 210, 214, 216, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 244, 245, 274, 275, 279, 280, 281, 288, 289, 290, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "observ": [4, 5, 6, 30, 36, 37, 42, 47, 48, 50, 52, 53, 54, 55, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 108, 110, 111, 117, 121, 126, 127, 130, 131, 141, 146, 147, 150, 154, 159, 160, 217, 219, 221, 232, 244, 250, 260, 266, 274, 279, 289, 291, 293, 295, 297, 298, 299, 301, 302, 305, 306, 308, 309, 310, 313, 314], "first": [4, 15, 18, 22, 23, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 41, 42, 46, 55, 56, 58, 60, 63, 81, 82, 84, 89, 96, 100, 104, 105, 106, 107, 109, 110, 111, 113, 119, 123, 125, 133, 137, 138, 142, 145, 148, 149, 151, 152, 153, 167, 174, 181, 182, 183, 186, 187, 194, 200, 215, 221, 224, 225, 226, 228, 243, 290, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 307, 308, 309, 310, 313, 314], "second": [4, 6, 15, 18, 19, 58, 60, 63, 93, 100, 104, 105, 106, 107, 108, 109, 110, 111, 121, 130, 186, 206, 223, 225, 226, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 307, 309, 310, 313], "n": [4, 5, 6, 7, 8, 11, 14, 15, 18, 19, 20, 21, 24, 29, 33, 42, 44, 45, 46, 48, 50, 52, 53, 54, 55, 61, 65, 69, 72, 73, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 125, 128, 129, 130, 131, 132, 133, 137, 139, 146, 147, 149, 158, 160, 162, 174, 175, 179, 180, 181, 182, 183, 184, 186, 187, 190, 192, 197, 203, 206, 210, 214, 217, 221, 223, 225, 226, 228, 230, 231, 232, 233, 279, 289, 291, 293, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313], "d": [4, 5, 6, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 27, 32, 33, 34, 35, 39, 40, 41, 43, 52, 69, 74, 75, 76, 77, 78, 79, 89, 91, 92, 95, 105, 109, 121, 125, 130, 131, 140, 141, 149, 154, 158, 161, 184, 205, 214, 221, 228, 233, 255, 256, 289, 291, 293, 294, 295, 297, 301, 302, 304, 307, 308, 311], "np": [4, 5, 6, 7, 9, 10, 11, 12, 16, 18, 22, 25, 26, 27, 31, 33, 34, 35, 38, 41, 42, 43, 53, 55, 56, 57, 58, 59, 60, 63, 64, 72, 83, 84, 85, 91, 92, 93, 100, 102, 104, 105, 106, 107, 111, 115, 117, 118, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 185, 186, 193, 194, 200, 206, 214, 216, 221, 227, 229, 234, 235, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "dimension": [4, 5, 6, 7, 8, 10, 11, 12, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 40, 41, 47, 54, 55, 63, 69, 92, 107, 186, 189, 210, 221, 228, 231, 232, 233, 247, 251, 259, 272, 276, 286, 291, 295, 297, 299, 301, 302, 304, 306, 308, 309, 310, 313, 314], "point": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 22, 25, 26, 27, 29, 31, 33, 34, 35, 38, 41, 42, 55, 61, 71, 74, 75, 76, 77, 78, 79, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 109, 121, 134, 135, 136, 147, 149, 160, 194, 221, 222, 223, 224, 225, 227, 229, 231, 233, 234, 235, 252, 257, 264, 265, 271, 289, 293, 295, 296, 297, 302, 303, 304, 306, 307, 308, 309, 310, 313], "out": [4, 5, 6, 7, 15, 29, 61, 106, 110, 131, 141, 161, 194, 195, 221, 231, 244, 259, 268, 274, 279, 282, 284, 293, 294, 296, 314], "result": [4, 5, 6, 7, 11, 12, 14, 16, 23, 28, 42, 43, 53, 56, 61, 83, 84, 89, 90, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 111, 158, 161, 185, 188, 190, 192, 194, 196, 200, 216, 217, 219, 221, 232, 249, 291, 295, 301, 302, 303, 306, 309, 312, 313], "p": [4, 5, 6, 7, 20, 21, 24, 29, 30, 36, 37, 39, 42, 45, 53, 55, 78, 81, 89, 93, 94, 100, 104, 105, 106, 113, 119, 121, 128, 130, 131, 133, 135, 136, 141, 154, 159, 160, 164, 168, 170, 171, 178, 186, 190, 192, 210, 221, 228, 231, 232, 254, 280, 293, 296, 297, 301, 302, 303, 305, 306, 308, 309, 310, 312, 313], "transform": [4, 5, 6, 7, 9, 10, 11, 12, 14, 19, 20, 21, 36, 37, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 73, 83, 193, 194, 221, 227, 231, 233, 237, 250, 266, 267, 273, 275, 276, 277, 278, 284, 286, 287, 289, 292, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 309, 311, 313, 314], "int": [6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 49, 51, 53, 55, 56, 57, 58, 60, 61, 63, 71, 72, 73, 78, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 158, 159, 160, 161, 162, 163, 165, 168, 174, 175, 184, 186, 189, 191, 194, 195, 198, 204, 205, 206, 210, 211, 214, 216, 218, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 290, 295, 298, 299, 300, 308, 309, 313, 314], "number": [6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 49, 51, 53, 55, 57, 58, 60, 61, 63, 72, 73, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 123, 125, 128, 129, 130, 131, 133, 139, 140, 141, 142, 145, 146, 147, 158, 160, 161, 168, 169, 173, 174, 175, 186, 189, 191, 195, 198, 200, 206, 210, 211, 214, 218, 220, 227, 229, 230, 231, 232, 233, 234, 235, 259, 275, 291, 293, 294, 295, 298, 300, 302, 304, 306, 307, 309, 310, 311], "datapoint": [6, 295, 296, 301, 303], "mathbf": [6, 11, 42, 45, 55, 100, 104, 105, 106, 137, 174, 295, 304, 309], "mathbb": [6, 7, 18, 26, 29, 42, 43, 45, 46, 48, 50, 52, 54, 55, 74, 75, 76, 77, 78, 79, 92, 95, 100, 104, 105, 106, 119, 121, 126, 128, 129, 130, 131, 133, 137, 141, 150, 159, 160, 184, 231, 232, 233, 255, 256, 289, 291, 293, 296, 297, 302, 303, 305, 306, 307, 308, 310, 312, 313], "r": [6, 7, 23, 26, 29, 42, 43, 45, 49, 53, 54, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 92, 95, 96, 97, 100, 101, 102, 104, 105, 106, 109, 111, 113, 114, 119, 125, 139, 140, 147, 161, 174, 178, 181, 182, 183, 184, 194, 195, 197, 217, 227, 231, 232, 233, 255, 256, 260, 289, 290, 291, 293, 296, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314], "uniqu": [6, 93, 109, 110, 299, 305, 310], "most": [6, 82, 84, 90, 93, 101, 102, 107, 109, 147, 158, 161, 184, 295, 302, 305, 309, 310, 312], "degre": [6, 55, 61, 78, 157, 193, 282, 289, 297, 301, 306, 307], "mean": [6, 11, 12, 14, 16, 18, 19, 22, 27, 31, 34, 35, 36, 37, 41, 42, 53, 55, 61, 62, 63, 65, 71, 72, 82, 89, 91, 92, 93, 95, 96, 100, 102, 104, 105, 106, 109, 111, 137, 138, 167, 177, 186, 191, 195, 197, 199, 214, 221, 222, 223, 224, 225, 226, 227, 229, 234, 235, 250, 275, 290, 291, 293, 294, 298, 299, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313], "mapsto": [6, 23, 36, 37, 45, 46, 227, 308, 313], "left": [6, 8, 9, 11, 23, 33, 38, 39, 41, 42, 53, 55, 58, 60, 64, 72, 74, 75, 77, 93, 96, 100, 104, 105, 106, 111, 124, 125, 135, 137, 140, 142, 149, 150, 154, 156, 157, 158, 159, 160, 164, 178, 186, 187, 189, 190, 192, 194, 227, 285, 295, 297, 300, 301, 307, 308, 313], "prod_": [6, 89, 111, 154, 159, 160, 305], "1": [6, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 66, 69, 71, 72, 74, 75, 78, 79, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 177, 178, 182, 183, 186, 188, 190, 192, 193, 194, 195, 198, 200, 206, 210, 211, 214, 216, 217, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "_d": [6, 295], "k_d": 6, "sum": [6, 12, 24, 42, 60, 71, 81, 93, 100, 104, 105, 106, 107, 110, 111, 116, 134, 136, 195, 224, 225, 275, 279, 295, 300, 310, 311, 313], "leq": [6, 24, 134, 157, 310], "right": [6, 8, 9, 11, 23, 25, 26, 33, 38, 39, 41, 42, 53, 55, 74, 75, 77, 93, 96, 100, 104, 105, 106, 111, 124, 125, 135, 137, 139, 140, 149, 150, 154, 156, 157, 158, 159, 160, 164, 178, 194, 227, 229, 234, 235, 263, 280, 283, 285, 288, 294, 295, 300, 301, 307, 309, 310, 313], "numpi": [6, 22, 25, 26, 27, 31, 33, 34, 35, 38, 41, 42, 43, 47, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 68, 91, 92, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 173, 185, 186, 194, 214, 245, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "shape": [6, 9, 11, 16, 18, 19, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 38, 41, 53, 55, 68, 83, 91, 92, 93, 101, 109, 110, 117, 118, 123, 125, 137, 145, 149, 158, 160, 177, 186, 187, 193, 194, 195, 196, 200, 204, 205, 210, 214, 218, 227, 229, 232, 233, 234, 235, 256, 257, 260, 264, 265, 266, 268, 271, 279, 296, 297, 298, 299, 300, 301, 303, 306, 308, 309, 310, 311, 313, 314], "n_test_point": [6, 227, 229, 234, 235], "n_monomi": 6, "size": [6, 10, 14, 18, 22, 25, 26, 27, 29, 31, 33, 34, 35, 38, 40, 41, 53, 55, 56, 61, 79, 84, 85, 90, 92, 93, 100, 101, 103, 104, 105, 106, 109, 110, 111, 147, 148, 160, 174, 185, 186, 190, 192, 194, 204, 205, 206, 227, 229, 231, 233, 234, 235, 252, 268, 275, 277, 280, 283, 290, 295, 296, 297, 299, 304, 309, 310, 312], "maximum": [6, 11, 14, 15, 72, 82, 83, 84, 89, 92, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 109, 111, 158, 161, 168, 186, 191, 195, 218, 230, 231, 250, 275, 293, 295, 302, 311, 312], "must": [6, 11, 15, 18, 20, 24, 25, 26, 29, 42, 53, 55, 58, 60, 61, 63, 72, 75, 78, 90, 92, 93, 94, 95, 100, 102, 104, 105, 106, 107, 116, 121, 123, 125, 130, 131, 140, 142, 145, 174, 177, 178, 186, 194, 203, 204, 205, 206, 227, 229, 231, 233, 234, 235, 294, 302, 305, 308, 309, 313, 314], "posit": [6, 10, 15, 23, 25, 26, 32, 53, 55, 61, 63, 68, 84, 102, 107, 133, 166, 174, 180, 181, 182, 183, 184, 186, 187, 190, 192, 204, 205, 211, 215, 227, 233, 251, 272, 273, 280, 287, 292, 298, 299, 307, 309, 310], "dimens": [6, 7, 8, 11, 12, 14, 18, 19, 23, 25, 26, 32, 36, 42, 46, 47, 48, 50, 52, 53, 54, 55, 58, 60, 63, 75, 92, 109, 110, 111, 184, 200, 205, 206, 210, 214, 221, 227, 229, 232, 234, 235, 250, 290, 295, 296, 299, 300, 309, 310, 312, 313], "exampl": [6, 10, 12, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 41, 53, 61, 83, 84, 91, 92, 93, 100, 102, 104, 105, 106, 107, 110, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 186, 193, 206, 214, 216, 231, 232, 240, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 290, 295, 298, 300, 302, 303, 304, 305, 309, 311, 312, 314], "given": [6, 8, 11, 12, 15, 18, 26, 27, 31, 34, 35, 36, 37, 40, 41, 42, 53, 55, 56, 58, 61, 63, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 89, 91, 92, 93, 94, 95, 96, 97, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 141, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 169, 186, 190, 192, 193, 195, 200, 214, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 293, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313], "three": [6, 10, 22, 23, 82, 100, 104, 105, 106, 295, 299, 300, 302, 305, 307, 313], "test": [6, 11, 22, 27, 31, 33, 34, 35, 38, 41, 42, 53, 57, 71, 72, 80, 83, 89, 90, 93, 100, 103, 104, 105, 106, 109, 110, 135, 188, 195, 198, 209, 217, 219, 227, 229, 233, 234, 235, 249, 250, 252, 273, 279, 282, 287, 292, 298, 299, 313, 314], "import": [6, 12, 13, 17, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 38, 41, 53, 55, 100, 102, 104, 105, 106, 107, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 185, 186, 213, 236, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "random": [6, 10, 11, 14, 16, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 41, 53, 56, 57, 72, 92, 98, 102, 147, 185, 206, 227, 229, 231, 232, 234, 235, 252, 268, 275, 277, 290, 295, 296, 297, 299, 302, 303, 304, 309, 310], "normal": [6, 10, 26, 30, 53, 83, 91, 100, 102, 104, 105, 106, 107, 125, 140, 161, 195, 210, 231, 233, 277, 280, 281, 290, 296, 297, 299, 301, 302, 304, 306, 309, 310, 311, 313], "3": [6, 10, 22, 23, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 45, 49, 51, 53, 55, 61, 72, 82, 89, 92, 94, 96, 100, 104, 105, 106, 107, 109, 110, 114, 119, 134, 136, 140, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 164, 186, 194, 206, 216, 227, 233, 252, 254, 255, 256, 257, 264, 267, 270, 272, 274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "up": [6, 22, 27, 31, 32, 33, 34, 35, 38, 41, 42, 71, 100, 104, 105, 106, 109, 116, 134, 136, 147, 190, 192, 233, 295, 297, 298, 299, 301, 303, 307, 310], "two": [6, 11, 14, 15, 23, 27, 29, 30, 34, 35, 36, 38, 41, 42, 43, 49, 61, 63, 72, 74, 75, 76, 77, 78, 79, 83, 84, 87, 89, 93, 94, 96, 100, 102, 104, 105, 106, 107, 108, 110, 119, 121, 130, 149, 189, 210, 224, 225, 226, 227, 231, 232, 233, 247, 274, 276, 284, 286, 291, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314], "0": [6, 10, 11, 14, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 53, 55, 56, 58, 60, 61, 63, 72, 78, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 168, 170, 174, 177, 184, 186, 188, 190, 191, 192, 194, 195, 197, 200, 206, 210, 214, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "2": [6, 10, 11, 12, 15, 22, 23, 26, 27, 30, 31, 33, 34, 35, 38, 40, 41, 42, 43, 45, 49, 51, 53, 55, 58, 60, 61, 63, 66, 71, 72, 73, 74, 75, 81, 83, 89, 92, 93, 94, 96, 97, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 123, 125, 130, 131, 133, 134, 136, 139, 140, 142, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 160, 161, 164, 177, 183, 185, 186, 187, 188, 192, 193, 195, 200, 206, 210, 211, 214, 215, 216, 217, 221, 223, 225, 227, 230, 231, 232, 233, 252, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "expect": [6, 11, 14, 42, 55, 61, 93, 100, 101, 102, 104, 105, 106, 110, 111, 127, 128, 129, 131, 137, 141, 186, 195, 250, 299, 302, 303, 304, 306, 308, 309, 310, 313], "y": [6, 22, 23, 36, 37, 38, 41, 43, 45, 53, 55, 58, 60, 65, 66, 67, 74, 75, 76, 77, 78, 79, 121, 130, 131, 137, 141, 188, 193, 194, 195, 196, 206, 210, 216, 217, 221, 222, 223, 224, 225, 226, 227, 233, 257, 260, 264, 265, 266, 268, 271, 282, 286, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 313, 314], "g": [6, 18, 42, 45, 46, 48, 50, 51, 52, 54, 61, 74, 75, 76, 77, 78, 79, 80, 84, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 133, 137, 187, 190, 191, 192, 194, 216, 289, 290, 291, 293, 294, 295, 297, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314], "third": [6, 10, 109, 110, 111, 161, 313], "itself": [6, 61, 106, 233, 290, 295, 304, 307, 313], "assert_almost_equ": 6, "get_feature_nam": 6, "input_featur": [6, 193, 194, 307], "list": [6, 8, 11, 13, 15, 16, 18, 25, 26, 29, 42, 43, 47, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 132, 137, 138, 141, 148, 149, 162, 168, 171, 173, 186, 190, 191, 192, 193, 194, 195, 197, 201, 202, 204, 205, 206, 216, 217, 218, 219, 220, 226, 230, 231, 233, 294, 295, 300, 305, 310], "str": [6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 42, 43, 44, 45, 53, 55, 58, 60, 61, 63, 66, 68, 69, 70, 71, 72, 73, 83, 84, 86, 89, 90, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 142, 158, 161, 174, 175, 179, 180, 181, 182, 183, 186, 188, 190, 192, 194, 197, 208, 213, 222, 223, 224, 225, 226, 227, 229, 231, 233, 234, 235], "see": [6, 11, 12, 14, 15, 16, 18, 19, 32, 42, 43, 44, 45, 47, 49, 51, 53, 55, 60, 61, 63, 64, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 86, 89, 90, 91, 93, 96, 101, 103, 104, 107, 110, 119, 147, 162, 167, 170, 175, 185, 189, 190, 192, 193, 194, 195, 196, 210, 214, 216, 217, 223, 225, 230, 232, 233, 274, 281, 283, 284, 285, 289, 290, 293, 295, 296, 303, 307, 309, 311, 312, 313, 314], "get_feature_names_out": [6, 193, 194], "featur": [6, 30, 42, 46, 47, 48, 50, 52, 53, 54, 55, 58, 63, 101, 193, 194, 195, 232, 237, 299, 303, 304, 307, 309, 313, 314], "If": [6, 8, 11, 13, 14, 15, 16, 17, 18, 33, 42, 43, 45, 53, 55, 56, 58, 61, 71, 72, 82, 84, 89, 90, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 119, 120, 123, 124, 125, 126, 129, 133, 135, 145, 146, 147, 149, 158, 160, 161, 162, 174, 175, 178, 185, 186, 187, 189, 190, 192, 194, 195, 197, 200, 204, 205, 210, 216, 217, 222, 223, 224, 225, 226, 227, 229, 230, 231, 234, 235, 288, 290, 293, 294, 295, 296, 298, 302, 305, 307, 309, 310, 312, 313, 314], "replac": [6, 53, 55, 89, 94, 102, 107, 108, 116, 118, 208, 295, 303], "feature_nam": 6, "correspond": [6, 21, 28, 42, 53, 55, 61, 64, 69, 73, 74, 75, 76, 77, 78, 79, 82, 84, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 125, 131, 133, 140, 142, 148, 152, 153, 157, 164, 168, 178, 193, 203, 214, 216, 218, 219, 227, 231, 249, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314], "seri": [7, 12, 18, 42, 53, 55, 63, 71, 72, 89, 90, 101, 105, 107, 147, 203, 204, 205, 232, 238, 239, 290, 291, 293, 305, 306, 309, 313, 314], "vector": [7, 10, 18, 21, 25, 26, 42, 43, 48, 53, 79, 82, 92, 93, 95, 100, 102, 104, 105, 106, 107, 114, 119, 121, 123, 125, 126, 128, 129, 130, 131, 132, 135, 137, 139, 140, 141, 142, 145, 150, 158, 160, 161, 184, 195, 227, 228, 229, 234, 235, 296, 301, 305, 306, 307, 308, 309], "t": [7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 58, 60, 61, 63, 65, 72, 73, 74, 75, 76, 77, 78, 79, 83, 89, 91, 92, 93, 94, 95, 96, 100, 102, 104, 105, 106, 108, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 154, 158, 159, 160, 161, 162, 164, 167, 169, 178, 182, 185, 193, 194, 203, 205, 206, 217, 219, 222, 223, 224, 225, 226, 227, 228, 230, 233, 245, 252, 256, 257, 260, 261, 264, 265, 266, 267, 268, 271, 275, 276, 278, 279, 282, 284, 286, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314], "time": [7, 11, 18, 19, 20, 22, 23, 26, 27, 28, 29, 31, 32, 34, 35, 38, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 121, 126, 130, 131, 137, 138, 141, 144, 145, 146, 147, 158, 167, 169, 174, 184, 193, 194, 202, 203, 204, 205, 206, 215, 216, 217, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 294, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314], "psi": [7, 42, 45, 46, 53, 55, 291, 298], "k": [7, 10, 11, 12, 14, 16, 23, 26, 42, 45, 46, 48, 50, 51, 52, 54, 55, 66, 69, 74, 75, 76, 77, 78, 79, 90, 91, 92, 93, 95, 100, 101, 103, 104, 105, 106, 109, 110, 111, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 140, 141, 142, 144, 145, 149, 150, 158, 159, 175, 179, 180, 184, 210, 219, 221, 224, 225, 226, 227, 250, 256, 275, 284, 290, 291, 296, 297, 300, 302, 303, 304, 305, 307, 309, 310, 311, 313], "space": [7, 8, 10, 15, 23, 24, 30, 42, 47, 51, 53, 54, 55, 63, 71, 72, 76, 84, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 110, 113, 119, 121, 130, 131, 141, 161, 189, 193, 194, 221, 227, 228, 229, 231, 232, 234, 235, 250, 275, 278, 279, 284, 291, 293, 298, 299, 300, 301, 302, 304, 305, 306, 307, 309, 310, 313], "cluster": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 53, 81, 96, 97, 105, 113, 139, 227, 250, 273, 274, 276, 277, 278, 279, 284, 287, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 306, 309, 310, 311, 314], "dim": [8, 11, 16, 25, 26, 42, 47, 53, 55, 71, 72, 73, 100, 104, 105, 106, 184, 221, 250, 255, 256, 286, 290, 295, 298, 299, 301, 309, 313, 314], "n_box": [8, 9, 295, 301], "v0": [8, 9, 300], "v1": [8, 9, 300], "box": [8, 9, 32, 233, 250, 301, 313], "discret": [8, 9, 10, 11, 12, 14, 15, 23, 28, 30, 36, 37, 39, 57, 72, 82, 83, 84, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 146, 147, 149, 164, 169, 194, 230, 231, 232, 238, 243, 244, 250, 251, 266, 272, 279, 284, 290, 291, 293, 297, 300, 301, 302, 304, 308, 309, 311, 313, 314], "euclidean": [8, 10, 11, 13, 14, 15, 16, 17, 53, 102, 107, 161, 284, 295, 309, 313], "span": [8, 296], "grid": [8, 29, 188, 217, 231, 259, 260, 274, 299, 301, 303, 310, 314], "linspac": [8, 255, 257, 260, 263, 264, 265, 266, 269, 270, 271, 284, 286, 297, 299, 300, 301, 303, 304, 307, 308, 309, 311, 314], "along": [8, 149, 197, 231, 233, 309, 310], "axi": [8, 23, 93, 188, 190, 197, 206, 214, 227, 231, 256, 257, 264, 265, 271, 275, 276, 290, 295, 298, 307, 309, 311], "center": [8, 9, 10, 11, 12, 14, 15, 16, 139, 190, 192, 254, 275, 284, 290, 295, 298, 299, 300, 301, 306, 311], "bound": [8, 24, 61, 106, 109, 110, 147, 158, 186, 197, 200, 217, 231, 294, 301, 303, 309], "either": [8, 29, 30, 42, 53, 55, 61, 63, 93, 102, 107, 110, 231, 232, 233, 291, 294, 307, 309, 310, 312, 313], "user": [8, 11, 61, 82, 109, 110, 186, 190, 192, 288, 294, 295, 302, 307, 308, 309, 311, 313, 314], "from": [8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 27, 30, 31, 33, 34, 35, 38, 41, 42, 45, 46, 53, 55, 56, 61, 63, 71, 72, 81, 82, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 167, 168, 169, 170, 173, 182, 184, 185, 186, 189, 190, 192, 193, 194, 195, 200, 204, 205, 206, 207, 214, 222, 223, 224, 225, 226, 228, 230, 233, 243, 245, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314], "per": [8, 9, 10, 11, 12, 13, 16, 17, 20, 23, 25, 26, 40, 63, 75, 84, 89, 91, 92, 93, 95, 107, 110, 111, 116, 118, 160, 169, 188, 190, 191, 219, 233, 257, 264, 265, 271, 295, 309, 310, 313], "singl": [8, 61, 83, 89, 101, 107, 133, 146, 147, 151, 190, 192, 205, 214, 216, 227, 234, 294, 295, 302, 308, 309, 313], "integ": [8, 11, 15, 42, 53, 55, 82, 83, 84, 93, 100, 101, 103, 104, 105, 106, 107, 109, 110, 114, 117, 119, 120, 132, 148, 152, 171, 194, 211, 231, 232, 295, 309, 310, 313], "lower": [8, 9, 63, 71, 93, 108, 158, 197, 200, 217, 281, 291, 295, 301, 302, 309, 310, 313], "vertex": [8, 9], "upper": [8, 9, 147, 157, 197, 200, 217, 254, 301, 310], "boxdiscretizationmodel": [8, 250], "cluster_cent": [9, 10, 12, 275, 284, 295, 300, 301, 306, 311], "produc": [9, 18, 33, 36, 37, 42, 43, 44, 48, 50, 55, 59, 61, 62, 81, 82, 83, 87, 102, 107, 158, 163, 165, 171, 186, 194, 206, 294, 298, 301, 302, 308, 309, 311], "boxdiscret": [9, 250, 295, 300, 301], "hot": 9, "n_job": [9, 10, 11, 12, 14, 15, 16, 22, 23, 27, 31, 32, 33, 34, 35, 38, 41, 72, 83, 211, 227, 229, 233, 234, 235, 252, 253, 262, 275, 278, 285, 295, 297, 303, 304, 311, 313], "For": [9, 10, 11, 12, 15, 16, 18, 30, 32, 42, 53, 55, 60, 61, 63, 81, 83, 84, 89, 93, 96, 107, 109, 110, 115, 116, 117, 118, 133, 137, 146, 147, 149, 168, 187, 193, 195, 230, 233, 250, 284, 285, 294, 295, 296, 297, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "frame": [9, 10, 11, 12, 14, 15, 18, 23, 42, 83, 84, 93, 100, 104, 105, 106, 146, 205, 230, 233, 267, 268, 284, 290, 291, 293, 298, 299, 300, 301, 306, 309, 313], "index": [9, 10, 12, 18, 81, 88, 91, 92, 93, 95, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 115, 116, 117, 118, 124, 143, 163, 165, 200, 214, 218, 228], "closest": [9, 10, 12], "job": [9, 10, 12, 14, 15, 16, 72, 211, 227, 229, 233, 234, 235, 308], "assign": [9, 10, 11, 12, 14, 15, 16, 63, 81, 91, 92, 93, 95, 96, 97, 100, 102, 104, 105, 106, 113, 119, 139, 186, 222, 223, 224, 225, 231, 233, 275, 279, 281, 290, 293, 295, 298, 299, 306, 309, 310], "discrete_trajectori": [9, 10, 11, 12, 14, 101, 232, 286, 309], "denot": [9, 10, 12, 42, 53, 55, 92, 95, 100, 104, 105, 106, 119, 303, 304, 309, 310, 313], "transform_onehot": 9, "encod": [9, 55, 58, 59, 60, 62, 194, 227, 308], "one_hot": 9, "were": [9, 10, 12, 42, 84, 90, 100, 102, 104, 105, 106, 110, 187, 191, 193, 194, 217, 231, 288, 303, 306, 307, 309, 310, 311, 313], "converg": [9, 10, 11, 12, 14, 83, 94, 101, 102, 107, 109, 110, 161, 295, 311, 312, 313], "also": [9, 10, 11, 12, 14, 15, 18, 42, 43, 53, 55, 56, 61, 63, 64, 71, 74, 75, 76, 77, 78, 79, 83, 84, 90, 93, 100, 103, 104, 105, 106, 107, 109, 133, 136, 147, 161, 179, 186, 192, 193, 197, 198, 207, 214, 222, 223, 224, 225, 226, 231, 233, 282, 289, 290, 293, 294, 295, 296, 298, 299, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314], "indic": [9, 10, 11, 12, 16, 83, 84, 90, 93, 100, 102, 103, 104, 105, 106, 109, 110, 111, 115, 116, 117, 118, 123, 125, 140, 145, 149, 165, 190, 192, 194, 198, 214, 224, 225, 226, 288, 293, 298, 299, 302, 309, 312], "creat": [9, 10, 12, 14, 22, 27, 30, 31, 32, 33, 34, 35, 38, 41, 61, 84, 90, 101, 103, 107, 188, 191, 204, 205, 206, 214, 216, 222, 223, 224, 225, 226, 233, 245, 275, 288, 291, 295, 298, 299, 300, 302, 308, 309, 310, 312, 313, 314], "manual": [9, 10, 12, 84], "doe": [9, 10, 12, 18, 43, 58, 60, 63, 80, 81, 93, 94, 100, 102, 104, 105, 106, 111, 113, 162, 212, 214, 222, 223, 227, 229, 234, 235, 294, 295, 299, 303, 305, 308, 310, 313], "stem": [9, 10, 12, 42, 106, 286, 313], "directli": [9, 10, 11, 12, 13, 17, 32, 53, 55, 100, 102, 104, 105, 106, 107, 108, 190, 192, 196, 222, 223, 227, 243, 286, 291, 295, 298, 302, 305, 307, 310, 312, 313], "metric": [9, 10, 11, 12, 13, 14, 15, 16, 250, 284], "relat": [9, 10, 12, 49, 53, 84, 140, 289, 291, 293, 302, 303, 309, 310, 311, 313], "via": [9, 10, 11, 12, 23, 26, 33, 36, 37, 63, 82, 100, 101, 104, 105, 106, 109, 110, 128, 135, 139, 140, 173, 187, 189, 191, 194, 216, 281, 282, 290, 293, 295, 297, 298, 302, 305, 306, 310], "registri": [9, 10, 11, 12, 13, 14, 15, 16, 17], "n_cluster": [9, 10, 11, 12, 14, 15, 16, 274, 275, 276, 277, 278, 295, 297, 299, 300, 301, 303, 304, 306, 311], "gener": [10, 11, 15, 16, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 56, 75, 82, 89, 91, 92, 93, 95, 100, 102, 104, 105, 106, 107, 115, 119, 121, 123, 125, 130, 131, 140, 142, 145, 146, 147, 149, 154, 158, 160, 161, 174, 186, 195, 206, 227, 228, 229, 230, 232, 234, 235, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 293, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314], "store": [10, 12, 61, 83, 89, 90, 101, 103, 105, 109, 110, 111, 194, 197, 295, 311], "comput": [10, 12, 15, 18, 19, 20, 21, 39, 42, 45, 51, 53, 55, 61, 65, 66, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 158, 160, 161, 164, 168, 169, 170, 171, 174, 175, 178, 181, 182, 183, 186, 193, 194, 197, 200, 210, 217, 219, 220, 221, 222, 223, 224, 225, 226, 231, 245, 283, 290, 291, 293, 294, 295, 296, 299, 302, 303, 304, 305, 306, 309, 310, 311, 313], "should": [10, 11, 12, 13, 14, 17, 18, 25, 26, 42, 53, 55, 58, 60, 61, 63, 64, 72, 73, 83, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 173, 186, 191, 193, 194, 198, 220, 221, 231, 286, 290, 291, 295, 296, 302, 305, 309, 312, 313], "match": [10, 18, 43, 61, 75, 92, 101, 161, 204, 205, 296], "let": [10, 55, 61, 149, 298, 299, 301, 302, 303, 304, 306, 307, 314], "artifici": [10, 71, 83, 233], "just": [10, 43, 83, 102, 147, 186, 212, 229, 231, 234, 235, 295, 297, 305, 307, 310, 312, 313], "canon": [10, 42, 49, 291, 303, 313], "c_1": 10, "top": [10, 18, 23, 32, 36, 37, 42, 45, 46, 48, 50, 52, 54, 55, 71, 75, 78, 93, 100, 104, 105, 106, 184, 194, 222, 223, 224, 225, 226, 227, 290, 291, 297, 300, 301, 302, 303, 304, 307, 309, 313], "c_2": 10, "c_3": 10, "we": [10, 11, 25, 26, 33, 36, 55, 61, 81, 93, 100, 102, 104, 105, 106, 107, 109, 110, 114, 129, 147, 149, 164, 186, 210, 228, 233, 249, 274, 276, 279, 280, 282, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314], "five": 10, "sampl": [10, 14, 18, 25, 26, 36, 37, 56, 63, 71, 72, 83, 84, 87, 89, 90, 91, 92, 93, 95, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 146, 147, 157, 160, 191, 195, 197, 200, 210, 217, 218, 219, 220, 230, 243, 250, 260, 266, 267, 275, 284, 286, 293, 295, 303, 304, 309, 310, 311, 312, 313], "around": [10, 32, 38, 55, 89, 214, 268, 284, 302, 305, 311], "ey": 10, "loc": [10, 254, 301], "scale": [10, 26, 42, 43, 53, 55, 100, 104, 105, 106, 110, 130, 131, 144, 145, 174, 186, 187, 190, 192, 227, 277, 280, 295, 296, 299], "01": [10, 55, 100, 104, 105, 106, 119, 125, 140, 161, 257, 268, 271, 272, 282, 284, 287, 301], "5": [10, 11, 14, 18, 22, 23, 25, 26, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 53, 55, 58, 60, 72, 91, 92, 100, 104, 105, 106, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 145, 154, 174, 188, 206, 216, 217, 227, 232, 233, 252, 254, 255, 256, 257, 258, 259, 262, 263, 268, 269, 270, 274, 275, 278, 279, 280, 281, 283, 284, 285, 286, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "print": [10, 23, 61, 100, 102, 104, 105, 106, 108, 149, 161, 186, 190, 192, 194, 206, 216, 259, 282, 288, 290, 296, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "max_it": [11, 14, 195, 295, 311], "500": [11, 30, 31, 33, 40, 101, 252, 256, 263, 266, 267, 268, 270, 274, 285, 295, 296, 299, 300, 301, 303, 308, 309, 314], "toler": [11, 12, 14, 100, 102, 104, 105, 106, 107, 114, 134, 135, 136, 158, 161, 163, 165, 184], "1e": [11, 14, 19, 20, 22, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 42, 47, 49, 53, 55, 63, 66, 67, 68, 69, 70, 71, 73, 94, 100, 102, 104, 105, 106, 107, 109, 134, 135, 136, 161, 163, 165, 174, 180, 181, 182, 183, 186, 190, 192, 255, 256, 263, 268, 270, 276, 278, 280, 283, 284, 296, 298, 299, 301, 303, 304, 306, 308, 309, 310, 314], "05": [11, 14, 33, 36, 37, 41, 101, 107, 163, 165, 186, 195, 254, 280, 282, 283, 284, 298, 302, 310], "init_strategi": [11, 14, 109, 275, 284, 295, 311], "fixed_se": [11, 14, 275, 295, 306, 311], "initial_cent": [11, 14, 295], "progress": [11, 16, 42, 63, 89, 90, 93, 94, 100, 102, 103, 104, 105, 106, 109, 110, 161, 198, 199, 212, 219, 231, 284, 295, 298, 301, 311, 314], "minim": [11, 15, 45, 110, 132, 158, 190, 192, 195, 231, 294, 295, 301, 303, 310], "cost": [11, 12, 14, 295], "c": [11, 13, 17, 22, 23, 36, 37, 45, 55, 78, 85, 100, 104, 105, 106, 110, 121, 128, 129, 130, 131, 133, 137, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 170, 171, 174, 195, 198, 210, 221, 224, 226, 227, 253, 259, 267, 275, 278, 279, 282, 294, 295, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 310, 312], "sum_": [11, 12, 55, 100, 104, 105, 106, 128, 134, 137, 149, 150, 154, 158, 162, 293, 295, 307, 310], "_j": [11, 42, 295, 309], "s_i": [11, 12, 100, 104, 105, 106, 295, 310, 311], "boldsymbol": [11, 42, 55, 100, 104, 105, 106, 295], "mu_i": [11, 12, 42, 123, 125, 126, 135, 145, 160, 295, 309], "mass": [11, 27, 33, 233, 257, 295], "associ": [11, 61, 91, 92, 93, 95, 106, 158, 294, 295, 297, 303, 304, 309, 310, 313], "outcom": [11, 295], "veri": [11, 15, 20, 83, 101, 102, 107, 108, 109, 190, 192, 214, 233, 291, 293, 295, 306, 307], "depend": [11, 38, 55, 63, 79, 80, 83, 84, 100, 104, 105, 106, 111, 131, 141, 184, 186, 194, 209, 210, 214, 219, 227, 229, 234, 235, 244, 250, 251, 272, 280, 293, 295, 300, 302, 303, 306, 310, 311, 312, 313], "particular": [11, 12, 19, 20, 30, 42, 55, 61, 92, 93, 95, 96, 100, 102, 104, 105, 106, 184, 186, 191, 211, 215, 218, 280, 289, 293, 294, 295, 296, 302, 312, 313], "offer": [11, 23, 101, 102, 202, 249, 288, 290, 293, 295, 302, 305, 306, 308, 309, 310, 314], "uniform": [11, 14, 22, 25, 27, 29, 31, 33, 34, 35, 38, 41, 89, 93, 94, 98, 147, 185, 186, 190, 193, 194, 231, 250, 252, 268, 275, 296, 297, 299, 302, 304, 309, 310, 311], "pick": [11, 227, 234, 295, 297, 298, 303], "uniformli": [11, 18, 23, 146, 227, 295, 302, 303, 304], "over": [11, 12, 14, 18, 23, 42, 53, 55, 61, 66, 79, 83, 84, 88, 93, 97, 100, 101, 102, 104, 105, 106, 109, 110, 111, 113, 116, 146, 147, 161, 210, 218, 269, 281, 284, 290, 293, 295, 297, 298, 300, 302, 305, 306, 307, 309, 311, 312], "provid": [11, 13, 14, 17, 42, 53, 55, 61, 63, 72, 76, 82, 83, 84, 87, 90, 93, 94, 100, 104, 105, 106, 107, 109, 110, 175, 176, 186, 189, 206, 211, 216, 221, 227, 229, 234, 235, 244, 288, 289, 291, 293, 294, 295, 302, 307, 308, 309, 312, 313, 314], "former": [11, 61, 72, 295], "tri": [11, 61, 94, 142, 233, 295, 305, 308, 310], "find": [11, 15, 29, 53, 63, 84, 90, 96, 110, 123, 231, 233, 245, 273, 287, 289, 291, 292, 294, 295, 299, 303, 307, 309, 310, 313, 314], "cover": [11, 293, 294, 295, 310], "spatial": [11, 28, 230, 295, 300], "configur": [11, 20, 53, 55, 58, 60, 63, 83, 90, 100, 102, 104, 105, 106, 107, 295, 299, 300, 309], "dataset": [11, 12, 23, 27, 28, 29, 30, 34, 35, 38, 41, 53, 110, 201, 202, 203, 204, 205, 206, 215, 216, 231, 250, 252, 253, 257, 258, 261, 263, 264, 265, 270, 271, 272, 275, 278, 279, 291, 295, 296, 298, 299, 303, 308, 309, 311, 313, 314], "more": [11, 15, 28, 30, 32, 53, 61, 82, 83, 84, 89, 90, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 133, 147, 163, 165, 178, 184, 187, 190, 192, 193, 194, 195, 202, 214, 230, 233, 284, 285, 290, 291, 295, 296, 302, 306, 307, 309, 310], "less": [11, 14, 25, 26, 42, 110, 116, 118, 149, 161, 190, 192, 230, 295, 302, 310], "detail": [11, 18, 32, 42, 53, 61, 69, 83, 89, 90, 94, 103, 108, 119, 160, 161, 193, 195, 230, 285, 289, 290, 291, 294, 302, 303, 305, 306, 309, 310], "amount": [11, 53, 55, 186, 191, 291, 309], "iter": [11, 12, 14, 61, 82, 89, 90, 93, 94, 101, 102, 103, 107, 109, 114, 142, 161, 194, 195, 198, 206, 212, 218, 233, 295, 302, 310, 311], "befor": [11, 14, 32, 53, 61, 72, 83, 93, 96, 100, 102, 104, 105, 106, 107, 109, 135, 161, 174, 180, 181, 182, 183, 195, 214, 227, 228, 231, 304, 309, 310], "stop": [11, 12, 14, 93, 94, 100, 104, 105, 106, 230, 231, 285, 310], "dure": [11, 14, 15, 16, 19, 60, 63, 84, 101, 104, 119, 233, 274, 291, 294, 295, 303], "float": [11, 12, 14, 15, 19, 20, 21, 22, 25, 26, 27, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 47, 48, 49, 51, 53, 55, 58, 60, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 89, 90, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 126, 134, 135, 136, 150, 154, 155, 156, 157, 158, 161, 163, 165, 167, 168, 169, 171, 174, 178, 180, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 197, 200, 210, 217, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 279, 299, 301, 309, 313], "when": [11, 12, 14, 18, 53, 55, 56, 61, 62, 80, 83, 84, 89, 90, 91, 93, 94, 96, 100, 101, 102, 104, 105, 106, 109, 110, 137, 147, 158, 168, 190, 192, 193, 194, 195, 206, 214, 219, 222, 223, 224, 225, 226, 230, 233, 236, 290, 291, 293, 294, 295, 302, 309, 310, 311, 312, 313, 314], "rel": [11, 12, 14, 101, 102, 107, 141, 161, 163, 165, 190, 192, 295, 309], "chang": [11, 12, 14, 58, 60, 61, 63, 83, 84, 101, 102, 106, 107, 109, 161, 222, 223, 224, 225, 226, 227, 288, 294, 299, 305, 313], "inertia": [11, 12, 295, 299], "smaller": [11, 12, 20, 53, 55, 84, 110, 116, 118, 180, 181, 182, 183, 303, 310], "than": [11, 12, 14, 15, 20, 30, 53, 55, 82, 84, 87, 93, 94, 100, 104, 105, 106, 108, 110, 116, 118, 119, 121, 123, 125, 130, 131, 140, 142, 145, 149, 174, 180, 181, 182, 183, 184, 227, 229, 230, 232, 233, 234, 235, 290, 291, 294, 295, 296, 298, 299, 302, 303, 306, 309, 310, 311, 313], "determin": [11, 18, 20, 45, 53, 55, 83, 84, 93, 100, 101, 102, 104, 105, 106, 142, 147, 160, 175, 177, 186, 187, 194, 195, 206, 295, 297, 302, 305, 309], "how": [11, 12, 18, 42, 61, 92, 94, 95, 107, 194, 211, 214, 231, 244, 274, 276, 277, 282, 283, 284, 290, 291, 297, 298, 303, 304, 305, 307, 308, 309, 311, 312, 313], "being": [11, 27, 34, 35, 40, 41, 45, 61, 68, 100, 104, 105, 106, 119, 184, 231, 294, 306, 307, 310, 311, 314], "chosen": [11, 30, 109, 295, 298, 307, 311], "seed": [11, 14, 16, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 41, 56, 57, 72, 98, 100, 104, 105, 106, 227, 229, 231, 232, 234, 235, 257, 259, 260, 264, 265, 270, 271, 275, 286, 295, 297, 299, 301, 304, 306, 309, 310, 313], "42": [11, 22, 27, 31, 33, 34, 35, 38, 41, 257, 271, 284, 297, 301, 304], "thread": [11, 14, 15, 23, 32, 211, 233, 308], "core": [11, 83, 211, 289, 293], "note": [11, 14, 36, 37, 39, 42, 43, 53, 55, 58, 60, 61, 63, 71, 74, 75, 76, 77, 78, 79, 80, 82, 84, 93, 94, 100, 102, 104, 105, 106, 111, 114, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 190, 192, 194, 195, 214, 227, 228, 233, 241, 282, 290, 291, 295, 298, 303, 306, 307, 309, 313], "ignor": [11, 14, 20, 53, 55, 58, 59, 60, 61, 62, 64, 88, 89, 91, 92, 94, 100, 104, 105, 106, 115, 158, 193, 194, 195, 200, 216, 274, 295, 309, 310], "pass": [11, 14, 15, 20, 43, 45, 47, 51, 53, 55, 58, 59, 60, 61, 62, 63, 83, 90, 93, 99, 102, 103, 158, 173, 190, 192, 193, 194, 195, 197, 282, 294, 295, 307, 309, 311], "algorithm": [11, 13, 14, 15, 17, 18, 53, 55, 93, 94, 96, 97, 108, 133, 147, 148, 151, 152, 153, 158, 160, 175, 187, 195, 231, 233, 238, 239, 241, 243, 290, 291, 295, 302, 306, 307, 309], "bar": [11, 29, 42, 55, 63, 83, 93, 100, 104, 105, 106, 109, 110, 147, 189, 198, 199, 212, 219, 231, 254, 258, 295, 298, 310, 311, 312, 313, 314], "tqdm": [11, 42, 63, 89, 93, 100, 104, 105, 106, 109, 110, 198, 219, 284, 295, 298, 299, 301, 311, 314], "interfac": [11, 74, 75, 76, 77, 78, 79, 95, 109, 110, 125, 199, 290, 294, 295, 296, 297, 302, 305, 306, 307, 308, 309, 313, 314], "check": [11, 61, 93, 100, 104, 105, 106, 108, 109, 110, 114, 133, 134, 135, 136, 142, 151, 173, 176, 177, 180, 199, 213, 215, 249, 298, 302, 307], "supports_progress_interfac": [11, 109, 110, 198, 250], "david": [11, 16, 295], "arthur": [11, 16, 295], "sergei": [11, 16, 295], "vassilvitskii": [11, 16, 295], "advantag": [11, 16, 295, 309, 313], "care": [11, 16, 61, 295], "technic": [11, 16, 61, 295], "stanford": [11, 16, 295], "2006": [11, 16, 114, 164, 295, 310], "kmeansmodel": [11, 14, 250], "minibatchkmean": [11, 12, 250, 295], "current": [11, 14, 15, 18, 20, 33, 42, 46, 48, 50, 52, 53, 54, 55, 58, 60, 61, 63, 72, 83, 84, 89, 91, 92, 93, 94, 95, 100, 102, 104, 105, 106, 107, 117, 170, 187, 189, 213, 227, 231, 249, 290, 293, 302, 305, 310, 313], "yet": [11, 14, 15, 89, 93, 94, 97, 101, 108, 290], "latest": [11, 14, 15, 49, 83, 193, 290], "callback_init_cent": [11, 14], "callback_loop": [11, 14], "perform": [11, 14, 15, 16, 18, 19, 20, 32, 42, 43, 55, 58, 60, 61, 63, 64, 71, 72, 80, 90, 93, 94, 100, 101, 102, 103, 104, 105, 106, 114, 139, 174, 176, 180, 181, 182, 183, 195, 217, 219, 231, 233, 290, 291, 294, 295, 297, 298, 299, 302, 305, 308, 310, 311, 313], "supersed": [11, 14, 206], "onc": [11, 16, 61, 93, 100, 104, 105, 106, 112, 231, 252, 253, 262, 267, 268, 282, 295, 307], "non": [11, 14, 15, 16, 42, 53, 55, 61, 63, 78, 83, 89, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 130, 131, 132, 134, 136, 141, 142, 159, 161, 180, 211, 214, 233, 293, 309, 313], "neg": [11, 15, 16, 63, 78, 83, 88, 100, 104, 105, 106, 107, 115, 132, 134, 136, 166, 195, 211, 214, 227, 229, 233, 234, 235, 299], "fit_transform": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 63, 83, 274, 301], "fit_opt": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 63, 83], "transform_opt": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 63, 83], "simultan": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 63, 83, 211], "access": [11, 13, 14, 17, 20, 28, 33, 43, 45, 47, 51, 53, 55, 58, 60, 61, 63, 83, 100, 102, 104, 105, 106, 290, 302, 305, 306, 309, 310, 312, 313], "keyword": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 61, 63, 83, 90, 99, 102, 103, 107, 188, 189, 191, 194, 195, 198, 208, 233], "output": [11, 14, 20, 30, 42, 43, 45, 47, 51, 53, 55, 58, 60, 61, 63, 83, 91, 92, 93, 94, 95, 96, 97, 98, 99, 174, 192, 221, 233, 243, 250, 298, 299, 300, 301, 302, 305, 308, 313], "kw": [11, 14, 20, 21, 42, 46, 48, 50, 53, 54, 55, 58, 60, 83, 90, 101, 102, 107, 108, 109, 198, 218, 229, 233], "respect": [11, 12, 14, 26, 29, 36, 37, 42, 53, 55, 61, 71, 82, 85, 100, 104, 105, 106, 107, 109, 111, 133, 135, 140, 157, 160, 186, 187, 190, 227, 231, 233, 284, 288, 290, 295, 298, 303, 304, 305, 307, 309, 312, 313], "scikit": [11, 14, 20, 53, 55, 63, 89, 94, 99, 101, 107, 194, 307], "compat": [11, 14, 20, 44, 53, 55, 58, 61, 63, 64, 89, 94, 101, 107, 108, 227, 229, 234, 235, 294, 307], "clustermodel": [11, 12, 14, 15, 250, 284], "implicitli": [11, 14, 42, 102, 107], "choic": [11, 14, 42, 53, 71, 107, 109, 219, 294, 295, 309, 312, 313], "fix": [11, 14, 16, 32, 53, 84, 94, 100, 101, 104, 105, 106, 107, 137, 160, 180, 182, 227, 229, 233, 234, 235, 275, 295, 302, 303, 309, 313], "reproduc": [11, 14, 16, 30, 51, 100, 102, 104, 105, 106, 227, 229, 232, 234, 235, 275, 294, 295, 304, 313], "conjunct": [11, 14, 53, 55, 80, 186], "need": [11, 14, 43, 45, 61, 109, 110, 111, 194, 214, 227, 229, 234, 235, 275, 294, 295, 307, 308, 309, 311, 312, 313], "becaus": [11, 14, 89, 100, 101, 102, 104, 105, 106, 107, 108, 109, 147, 160, 195, 222, 223, 224, 225, 226, 233, 290, 291, 306, 311, 313], "parallel": [11, 14, 30, 72, 110, 211, 227, 229, 232, 234, 235, 310], "execut": [11, 14, 63, 109, 272, 287, 290, 294], "caus": [11, 14, 88, 92, 96, 97, 288], "determinist": [11, 14, 32, 227, 229, 233, 234, 235, 308], "behaviour": [11, 14], "again": [11, 14, 89, 233, 295, 303, 308, 309, 311], "strategi": [11, 14, 109, 275, 295, 311], "guess": [11, 14, 16, 93, 94, 96, 97, 99, 250, 302, 303, 306], "getter": [11, 14, 15, 18, 20, 42, 53, 55, 58, 60, 63, 74, 79, 83, 102, 107, 110, 111, 186, 207, 217, 227, 228], "setter": [11, 14, 15, 18, 20, 42, 53, 55, 58, 60, 63, 83, 102, 107, 186, 207, 227], "overrid": [11, 14, 18, 20, 83, 94], "max": [11, 14, 83, 88, 111, 112, 158, 163, 164, 165, 170, 186, 222, 223, 224, 225, 226, 253, 254, 266, 268, 269, 280, 283, 284, 285, 286, 295, 297, 298, 299, 300, 301, 302, 304, 306, 308, 309, 310, 313, 314], "_clustering_bind": [11, 13, 14, 17], "subclass": [11, 14, 61, 294], "label": [11, 14, 82, 93, 100, 104, 105, 106, 114, 119, 120, 132, 171, 186, 188, 190, 192, 231, 254, 258, 259, 260, 269, 275, 279, 281, 282, 285, 286, 295, 296, 298, 299, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "actual": [11, 14, 42, 53, 55, 81, 83, 90, 93, 100, 104, 105, 106, 108, 114, 295, 306, 310, 312, 313], "criterion": [11, 12, 14, 94, 101, 109], "between": [11, 14, 15, 18, 22, 27, 29, 31, 33, 34, 35, 38, 39, 41, 42, 49, 61, 71, 82, 83, 84, 89, 91, 93, 94, 96, 100, 102, 104, 105, 106, 108, 110, 119, 133, 137, 162, 163, 164, 165, 166, 167, 169, 170, 171, 186, 193, 194, 227, 228, 229, 231, 234, 235, 244, 275, 293, 295, 296, 302, 303, 306, 308, 309, 310, 311, 312, 313], "consid": [11, 14, 15, 43, 53, 55, 61, 83, 84, 93, 100, 104, 105, 106, 107, 108, 110, 216, 222, 223, 224, 225, 226, 291, 293, 294, 296, 297, 303, 306, 309, 310, 312, 313], "inform": [12, 61, 104, 105, 110, 194, 244, 284, 288, 294, 295, 297, 302, 304, 309, 312, 313], "procedur": [12, 20, 65, 83, 89, 93, 96, 97, 147, 291, 302, 312, 313], "pleas": [12, 32, 42, 53, 55, 60, 61, 89, 125, 190, 192, 290, 294, 309, 313, 314], "document": [12, 61, 175, 286, 294, 308, 309, 311, 313], "coincid": [12, 89, 91, 93, 94, 296], "criterium": [12, 101, 311], "construct": [12, 53, 61, 84, 93, 106, 109, 110, 114, 119, 137, 145, 161, 162, 164, 167, 169, 186, 307, 308, 309, 310, 311], "pure": [12, 135], "met": [12, 15], "kmean": [12, 14, 16, 250, 274, 275, 276, 277, 278, 279, 295, 297, 298, 299, 301, 303, 304, 306, 311, 314], "score": [12, 19, 42, 48, 58, 60, 63, 64, 69, 70, 71, 72, 73, 83, 94, 100, 104, 105, 106, 194, 195, 250, 289, 291, 298, 301, 303, 307, 314], "dtype": [12, 18, 58, 59, 60, 61, 62, 63, 64, 88, 91, 92, 93, 96, 103, 180, 181, 182, 183, 186, 203, 205, 224, 225, 226, 230, 279, 284, 295, 298, 299, 311, 312], "doubl": [12, 27, 28, 61, 230, 250, 251, 272, 273, 287, 292], "entri": [12, 18, 61, 93, 96, 102, 107, 120, 139, 148, 173, 174, 224, 225, 226, 303, 304, 307], "squar": [12, 42, 68, 71, 100, 102, 104, 105, 106, 177, 195, 221, 295, 300, 301, 307, 308, 310, 313], "distanc": [12, 15, 32, 42, 53, 55, 71, 83, 105, 233, 275, 295, 309, 313], "train": [12, 14, 42, 57, 58, 60, 61, 63, 70, 71, 72, 93, 193, 195, 282, 295, 298, 299, 301, 302, 303, 304, 308, 313, 314], "loop": [12, 214, 252, 253, 262, 267, 268, 299], "onli": [13, 17, 18, 20, 29, 42, 53, 55, 56, 61, 63, 72, 81, 83, 84, 89, 90, 93, 94, 96, 97, 100, 101, 102, 104, 105, 106, 107, 110, 123, 125, 133, 142, 145, 147, 159, 160, 174, 186, 187, 190, 191, 192, 208, 214, 216, 224, 225, 226, 227, 229, 231, 233, 234, 235, 288, 291, 293, 294, 295, 296, 302, 303, 306, 307, 309, 310, 312, 313], "custom": [13, 17, 25, 26, 32, 61, 72, 250, 251, 272], "regist": [13, 17, 61, 295], "through": [13, 15, 17, 42, 53, 55, 58, 59, 60, 61, 62, 63, 64, 90, 103, 197, 227, 231, 295, 301, 302, 306, 308, 309, 311, 313], "instanti": [13, 17, 100, 282, 302, 305, 307, 313], "rather": [13, 17, 30, 100, 104, 105, 106, 119, 232, 306, 309, 310], "singleton": [13, 17, 84], "ad": [13, 15, 17, 61, 63, 68, 96, 157, 231, 233, 250, 295], "mai": [13, 17, 33, 43, 45, 49, 51, 61, 72, 93, 102, 107, 108, 109, 110, 147, 163, 165, 184, 190, 192, 194, 195, 206, 210, 214, 294, 295, 298, 311, 314], "link": [13, 17, 288, 294], "against": [13, 17, 42, 58, 60, 61, 93, 110, 219, 307], "librari": [13, 17, 193, 194, 249, 282, 291, 294, 307], "directori": [13, 17, 290, 295], "capi_includ": [13, 17, 295], "inc_clust": [13, 17, 295], "expos": [13, 17, 290], "your": [13, 17, 61, 100, 102, 104, 105, 106, 146, 147, 222, 223, 224, 225, 226, 250, 274, 294, 299, 303, 313], "like": [13, 17, 25, 26, 30, 53, 61, 63, 90, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 121, 146, 147, 162, 185, 195, 200, 219, 228, 233, 243, 290, 291, 295, 297, 301, 302, 305, 308, 309, 310, 311, 313], "includ": [13, 17, 42, 53, 55, 61, 85, 93, 100, 104, 105, 106, 163, 165, 219, 288, 290, 293, 294, 295, 297, 310], "register_clust": [13, 17, 295], "h": [13, 17, 22, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 43, 51, 132, 147, 154, 160, 227, 229, 233, 234, 235, 255, 256, 263, 268, 270, 276, 291, 295, 296, 297, 299, 303, 304], "pybind11_modul": [13, 17, 295], "m": [13, 17, 23, 27, 29, 32, 33, 39, 42, 43, 45, 46, 48, 50, 52, 53, 54, 55, 61, 68, 81, 89, 91, 93, 100, 104, 105, 106, 109, 110, 111, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 181, 182, 183, 203, 214, 222, 223, 224, 225, 226, 227, 228, 231, 233, 275, 291, 295, 296, 302, 304, 306, 311, 313], "doc": [13, 17, 61, 207, 290, 295, 296, 297, 302, 305, 306, 307, 308, 309, 310, 312, 313, 314], "modul": [13, 17, 58, 59, 60, 61, 62, 63, 64, 213, 236, 245, 251, 290, 308, 311, 314], "auto": [13, 17, 18, 65, 121, 130, 140, 161, 186, 190, 192, 222, 223, 224, 225, 226, 295, 308], "custommodul": [13, 17], "def_submodul": [13, 17, 295], "registerclusteringimplement": [13, 17, 295], "bind": [13, 17, 198, 245, 288, 295], "compil": [13, 17, 295], "extens": [13, 17, 233, 234, 235, 295], "renam": [13, 17], "appropri": [13, 17, 42, 64, 94, 147, 295, 299, 306, 307, 309, 314], "impl": [13, 74], "add": [13, 15, 61, 231, 290, 299, 310], "tupl": [13, 29, 53, 55, 61, 63, 66, 90, 93, 103, 109, 115, 116, 117, 118, 146, 161, 185, 186, 215, 216, 231, 291, 308], "batch_siz": [14, 295, 298, 299, 301, 308, 314], "100": [14, 22, 25, 27, 28, 31, 33, 34, 35, 38, 41, 53, 55, 61, 89, 102, 128, 129, 158, 185, 189, 196, 210, 230, 253, 256, 260, 264, 266, 268, 269, 275, 276, 282, 284, 285, 291, 295, 297, 298, 299, 301, 302, 303, 305, 307, 308, 310, 311, 313, 314], "mini": [14, 250, 298], "batch": [14, 53, 55, 58, 60, 63, 79, 250, 299], "fashion": [14, 18, 291, 295], "descript": [14, 18, 42, 60, 83, 89, 107, 108, 119, 198, 230, 312], "remain": [14, 42, 53, 55, 96, 97, 147, 174, 200, 288, 294, 305, 310], "whole": [14, 61, 84, 160, 161, 233, 291, 295], "repeatedli": 14, "thu": [14, 53, 93, 108, 291, 304, 311, 313], "line": [14, 61, 186, 231, 294, 308, 313], "usual": [14, 89, 290, 291, 295, 296, 297, 298, 311], "mix": [14, 53, 89, 100, 104, 105, 106, 190, 192, 220, 309], "overwritten": [14, 195], "dmin": [15, 275, 295], "max_cent": [15, 275, 295], "1000": [15, 22, 23, 27, 31, 33, 34, 35, 38, 41, 82, 89, 92, 94, 109, 168, 206, 260, 263, 264, 268, 277, 278, 284, 286, 295, 301, 308, 309, 310, 313, 314], "least": [15, 72, 110, 112, 195, 214, 295, 302, 307, 309, 312], "other": [15, 45, 61, 110, 160, 203, 214, 288, 289, 294, 295, 302, 303, 304, 305, 306, 309, 312, 313], "accord": [15, 21, 42, 71, 83, 93, 100, 104, 105, 106, 107, 113, 116, 117, 118, 140, 148, 149, 159, 161, 186, 187, 190, 210, 227, 229, 231, 234, 235, 280, 288, 295, 299, 301, 308, 311], "voronoi": [15, 293, 295], "partion": [15, 295], "regular": [15, 42, 47, 49, 51, 60, 63, 66, 67, 68, 69, 73, 96, 97, 100, 104, 105, 106, 195, 221, 233, 250, 275, 299, 301, 303, 304], "similar": [15, 18, 61, 123, 125, 145, 214, 294, 295, 299, 313], "hartigan": [15, 295], "leader": [15, 295], "consist": [15, 61, 93, 94, 96, 97, 109, 115, 116, 117, 118, 158, 195, 211, 233, 244, 291, 295, 307, 310, 311, 312, 313], "ha": [15, 20, 24, 32, 42, 55, 61, 79, 82, 83, 84, 91, 93, 96, 100, 102, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 123, 133, 134, 135, 136, 147, 151, 160, 161, 172, 173, 186, 187, 191, 194, 199, 228, 231, 233, 288, 294, 295, 297, 300, 301, 302, 305, 306, 307, 310, 311, 312, 313], "greater": [15, 42, 53, 55, 71, 100, 104, 105, 106, 110, 121, 123, 125, 130, 131, 140, 142, 145, 174, 295, 302, 306, 309], "becom": [15, 168, 214, 295, 309, 313], "partit": [15, 42, 71, 82, 210, 295, 313], "minimum": [15, 56, 72, 85, 87, 93, 108, 110, 195, 210, 214, 275, 295, 311, 313], "threshold": [15, 42, 84, 90, 93, 94, 96, 101, 108, 110, 195, 222, 223, 224, 225, 226, 231, 282, 306, 307, 313], "termin": 15, "jan": [15, 33, 89, 93, 96, 97, 105, 108, 149, 161, 291, 293, 295, 302], "hendrik": [15, 33, 89, 93, 96, 97, 105, 108, 149, 161, 291, 293, 295, 302], "prinz": [15, 33, 89, 93, 96, 97, 105, 108, 149, 154, 161, 250, 251, 272, 293, 295, 302], "hao": [15, 20, 21, 33, 42, 47, 53, 55, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 149, 161, 289, 291, 293, 295, 302, 305, 309, 311, 312, 313, 314], "wu": [15, 20, 21, 33, 42, 47, 53, 55, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 149, 154, 160, 161, 289, 291, 293, 295, 302, 305, 309, 311, 312, 313, 314], "marco": [15, 33, 41, 149, 161, 293, 295, 297], "sarich": [15, 33, 41, 149, 154, 161, 293, 295, 297], "bettina": [15, 33, 89, 149, 161, 293, 295, 302], "keller": [15, 33, 89, 149, 154, 161, 293, 295, 302], "martin": [15, 33, 149, 161, 293, 295, 313], "senn": [15, 33, 149, 154, 161, 293, 295], "held": [15, 18, 33, 149, 154, 161, 293, 294, 295], "john": [15, 33, 89, 94, 105, 109, 121, 130, 131, 141, 149, 161, 293, 295, 302], "chodera": [15, 33, 89, 105, 109, 121, 130, 131, 141, 149, 154, 161, 293, 295, 302], "christof": [15, 33, 41, 51, 82, 114, 119, 149, 161, 291, 293, 295, 297, 304, 310, 313], "sch": [15, 33, 41, 45, 51, 82, 114, 119, 149, 161, 291, 293, 295, 297, 304, 305, 306, 310, 313], "\u00fc": [15, 20, 21, 32, 33, 41, 45, 51, 53, 72, 82, 105, 108, 114, 119, 149, 161, 233, 291, 293, 295, 297, 304, 305, 306, 309, 310, 313], "tte": [15, 33, 41, 45, 51, 82, 114, 119, 149, 161, 291, 293, 295, 297, 304, 305, 306, 310, 313], "frank": [15, 20, 21, 33, 42, 53, 55, 58, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 114, 119, 121, 130, 131, 141, 149, 161, 288, 289, 291, 293, 295, 302, 303, 305, 308, 309, 310, 311, 312, 313, 314], "No": [15, 20, 21, 33, 42, 53, 55, 58, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 114, 119, 121, 130, 131, 141, 149, 161, 289, 291, 293, 295, 302, 305, 308, 309, 310, 311, 312, 313, 314], "\u00e9": [15, 20, 21, 33, 42, 53, 55, 58, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 114, 119, 121, 130, 131, 141, 149, 161, 289, 291, 293, 295, 302, 305, 308, 309, 310, 311, 312, 313, 314], "markov": [15, 28, 30, 33, 39, 41, 42, 53, 55, 63, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 133, 134, 135, 136, 140, 142, 145, 186, 192, 219, 228, 230, 231, 232, 250, 259, 269, 274, 276, 277, 280, 281, 283, 284, 291, 294, 295, 297, 298, 299, 300, 305, 306, 309, 310, 311, 312, 313, 314], "molecular": [15, 20, 21, 33, 41, 42, 51, 53, 55, 58, 63, 71, 72, 100, 101, 105, 109, 111, 149, 154, 160, 161, 289, 293, 295, 297, 304, 308, 309, 311, 313, 314], "kinet": [15, 20, 21, 33, 42, 53, 55, 58, 63, 71, 72, 81, 89, 93, 96, 97, 100, 104, 105, 106, 109, 111, 121, 130, 131, 141, 149, 154, 161, 289, 293, 295, 302, 306, 308, 309, 311, 313, 314], "valid": [15, 29, 33, 42, 58, 60, 63, 71, 72, 74, 79, 93, 100, 104, 105, 106, 134, 136, 149, 154, 161, 188, 217, 218, 219, 220, 231, 250, 277, 288, 293, 295, 298, 299, 308, 313, 314], "journal": [15, 20, 21, 33, 42, 43, 45, 49, 51, 53, 55, 63, 71, 72, 83, 89, 93, 96, 97, 102, 105, 107, 108, 109, 114, 133, 148, 149, 151, 152, 153, 158, 161, 231, 233, 291, 293, 295, 296, 297, 302, 303, 304, 305, 309, 310, 312, 313, 314], "chemic": [15, 20, 21, 33, 42, 51, 53, 55, 71, 72, 83, 89, 93, 96, 97, 102, 105, 108, 109, 149, 161, 291, 293, 295, 302, 304, 305, 309, 310, 312, 313], "physic": [15, 20, 21, 23, 33, 51, 53, 72, 83, 89, 93, 96, 97, 102, 105, 108, 109, 114, 149, 161, 227, 291, 293, 295, 302, 304, 305, 307, 309, 310, 312, 313], "134": [15, 33, 149, 154, 161, 284, 291, 293, 295, 309], "17": [15, 30, 33, 83, 89, 102, 105, 109, 149, 161, 260, 274, 275, 277, 284, 286, 293, 295, 298, 299, 301, 302, 305, 309, 310, 312, 313, 314], "174105": [15, 33, 149, 154, 161, 293, 295], "2011": [15, 33, 89, 105, 121, 130, 131, 141, 149, 154, 161, 291, 293, 295, 302, 309], "wilei": [15, 147, 295], "son": [15, 295], "inc": [15, 198, 284, 294, 295], "1975": [15, 295], "onto": [15, 23, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 61, 82, 93, 100, 103, 104, 105, 106, 162, 231, 241, 289, 296, 309, 310, 313, 314], "carri": [15, 19, 161, 314], "choos": [15, 26, 294, 295, 303, 310, 311], "centroid": 15, "calcul": [15, 84, 89, 93, 96, 97, 100, 104, 105, 106, 109, 110, 111, 137, 195, 302, 311], "larger": [15, 87, 147, 184, 232, 233, 291, 298, 309, 310], "equal": [15, 18, 25, 26, 42, 53, 56, 57, 64, 71, 72, 81, 91, 92, 93, 95, 100, 104, 105, 106, 109, 110, 111, 115, 116, 117, 118, 167, 177, 216, 230, 260, 265, 274, 280, 286, 295, 297, 298, 299, 309, 313], "superse": 15, "exist": [15, 18, 55, 61, 81, 96, 97, 133, 188, 201, 214, 231, 290, 296, 305, 306], "cutoff": [15, 20, 42, 47, 53, 55, 66, 68, 69, 174, 180, 181, 182, 183, 191, 309], "reach": [15, 93, 94, 100, 104, 105, 106, 110, 119, 133, 231, 233, 295, 310], "taken": [15, 42, 93, 96, 100, 104, 105, 106, 158, 186, 193, 194, 214, 294, 309, 310, 311], "account": [15, 42, 71, 96, 186, 299, 303, 309], "you": [15, 53, 55, 61, 81, 84, 89, 93, 94, 96, 97, 100, 102, 104, 105, 106, 125, 146, 147, 162, 210, 222, 223, 288, 290, 294, 295], "might": [15, 64, 80, 82, 83, 93, 96, 100, 104, 105, 106, 168, 218, 222, 223, 224, 225, 226, 233, 288, 291, 306, 310, 311, 313], "alia": [15, 61], "allow": [15, 25, 26, 28, 61, 110, 178, 294, 299, 302, 311, 313], "callback": [16, 63, 102, 109, 198, 199], "n_dim": [16, 232], "n_center": 16, "_metric": 17, "metricregistri": [17, 250], "compute_c00": [18, 19], "compute_c0t": [18, 19, 301], "compute_ctt": [18, 19], "remove_data_mean": 18, "revers": [18, 42, 53, 71, 83, 89, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 123, 125, 135, 140, 145, 157, 158, 159, 160, 161, 228, 291, 294, 299, 302, 305, 306, 309, 310, 312, 313], "bessels_correct": [18, 19], "sparse_mod": [18, 222, 223, 224, 225, 226], "ncov": [18, 20, 53, 55, 291], "diag_onli": [18, 224, 225, 226], "potenti": [18, 26, 27, 28, 33, 34, 35, 38, 40, 41, 42, 43, 46, 48, 50, 52, 53, 54, 55, 63, 71, 83, 111, 212, 218, 227, 229, 230, 233, 234, 235, 243, 250, 251, 257, 264, 265, 268, 270, 271, 272, 284, 295, 296, 297, 298, 304, 310, 311, 312, 313], "lag": [18, 19, 20, 22, 27, 31, 34, 35, 41, 42, 45, 47, 53, 55, 56, 58, 59, 60, 62, 63, 65, 66, 73, 83, 84, 86, 87, 89, 93, 94, 96, 100, 102, 104, 105, 106, 107, 108, 109, 110, 130, 131, 137, 145, 146, 149, 158, 174, 202, 203, 205, 206, 215, 216, 217, 250, 274, 277, 289, 291, 293, 298, 300, 303, 304, 309, 311, 312, 314], "mathrm": [18, 23, 25, 26, 27, 33, 34, 35, 38, 39, 40, 41, 42, 53, 55, 70, 75, 82, 84, 89, 92, 93, 95, 96, 100, 101, 102, 104, 105, 106, 109, 111, 176, 186, 210, 219, 227, 231, 255, 256, 295, 296, 297, 300, 302, 304, 305, 306, 309, 310, 313, 314], "cov": [18, 42, 71, 150, 159, 301, 313], "x_t": [18, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 42, 46, 48, 50, 52, 53, 54, 55, 100, 104, 105, 106, 119, 206, 224, 225, 226, 228, 255, 256, 289, 291, 293, 297, 301, 302, 304, 308, 309, 310, 312, 313, 314], "y_t": [18, 225, 226, 302, 303, 314], "contigu": [18, 147], "block": [18, 56, 72, 147, 206, 291, 308], "timeseri": [18, 53, 55, 91, 94, 95, 102, 107, 204, 205, 243, 285, 289, 293, 295, 309, 310, 313, 314], "propos": 18, "here": [18, 26, 53, 55, 102, 107, 108, 114, 146, 158, 164, 185, 233, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 306, 308, 309, 310, 312, 313, 314], "geq": [18, 119, 136, 178, 291, 296, 308, 310], "correl": [18, 19, 42, 49, 53, 55, 71, 83, 87, 89, 93, 94, 96, 100, 102, 104, 105, 106, 109, 110, 130, 131, 146, 147, 174, 291, 303, 309, 313], "part": [18, 42, 61, 71, 82, 111, 157, 190, 192, 227, 229, 234, 235, 279, 288, 294, 298, 303, 309, 313], "shift": [18, 19, 42, 53, 55, 56, 64, 69, 83, 107, 109, 110, 186, 206, 210, 291, 296, 309, 311, 312], "chunk": [18, 19, 20, 206], "subtract": [18, 195, 221], "free": [18, 42, 53, 109, 110, 111, 284, 294, 309, 311, 313], "symmetr": [18, 19, 28, 53, 100, 104, 105, 106, 123, 125, 145, 174, 180, 181, 182, 183, 184, 223, 225, 230, 291, 309], "defin": [18, 25, 26, 33, 42, 45, 53, 55, 61, 69, 75, 81, 82, 93, 100, 102, 104, 105, 106, 110, 113, 119, 126, 132, 145, 150, 155, 156, 157, 162, 164, 170, 174, 186, 190, 192, 195, 227, 229, 234, 235, 250, 255, 256, 290, 291, 294, 296, 297, 298, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 314], "sum_t": [18, 224, 225, 226, 309], "moment": [18, 19, 20, 102, 223, 224, 225, 226, 291, 305, 309], "matric": [18, 24, 42, 45, 53, 55, 56, 63, 65, 66, 72, 79, 83, 84, 89, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 136, 142, 146, 157, 158, 159, 160, 161, 174, 192, 216, 221, 228, 245, 275, 291, 295, 296, 300, 303, 304, 305, 307, 309, 311, 312, 313], "bessel": [18, 19], "correct": [18, 19, 83, 93, 108, 109, 110, 130, 131, 288, 293, 312], "order": [18, 43, 53, 55, 56, 61, 81, 82, 84, 85, 89, 94, 96, 100, 102, 104, 105, 106, 107, 110, 113, 123, 125, 146, 147, 161, 178, 179, 194, 222, 223, 224, 225, 226, 231, 289, 298, 300, 303, 307, 309, 310, 313, 314], "unbias": [18, 111, 161, 293, 311], "dens": [18, 72, 83, 100, 104, 105, 106, 149, 160, 161, 222, 223, 224, 225, 226, 245], "alwai": [18, 61, 84, 161, 195, 206, 214, 222, 223, 224, 225, 226, 291, 306, 312], "mode": [18, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 61, 63, 66, 67, 68, 69, 70, 72, 74, 79, 83, 84, 96, 102, 105, 107, 108, 110, 142, 222, 223, 224, 225, 226, 233, 291, 294, 296, 297, 299, 304, 309, 312, 313], "automat": [18, 81, 93, 96, 102, 113, 160, 187, 190, 192, 222, 223, 224, 225, 226], "spars": [18, 24, 82, 83, 84, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 119, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 168, 186, 187, 193, 195, 222, 223, 224, 225, 226, 228, 245, 307], "depth": [18, 20, 133, 148, 151, 152, 153, 291], "storag": [18, 20, 61, 291], "combin": [18, 81, 100, 101, 111, 130, 131, 194, 291, 293, 294, 303, 307, 311, 313], "statist": [18, 42, 49, 53, 55, 83, 84, 89, 90, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 146, 147, 158, 160, 197, 224, 225, 226, 250, 293, 302, 303, 305, 310, 312, 313], "weight": [18, 20, 21, 42, 53, 55, 58, 60, 61, 63, 71, 82, 84, 91, 92, 93, 95, 100, 101, 104, 105, 106, 108, 111, 148, 151, 152, 153, 186, 190, 192, 195, 210, 222, 223, 224, 225, 226, 231, 233, 259, 275, 276, 281, 283, 295, 309, 310, 313], "pairwis": [18, 309], "describ": [18, 20, 23, 38, 39, 53, 54, 55, 81, 82, 89, 91, 96, 97, 100, 104, 105, 106, 107, 109, 111, 114, 141, 154, 211, 216, 217, 232, 233, 289, 290, 293, 295, 297, 298, 302, 309, 310, 313], "restrict": [18, 53, 55, 71, 84, 90, 91, 92, 93, 95, 96, 100, 102, 103, 104, 105, 106, 107, 110, 160, 161, 221, 224, 225, 226, 294, 305, 312], "diagon": [18, 42, 63, 93, 129, 134, 140, 176, 186, 187, 224, 225, 226, 295], "autocorrel": [18, 53, 55, 100, 104, 105, 106, 121, 130, 147, 224, 225, 226, 309], "covariancemodel": [18, 21, 42, 48, 53, 55, 71, 250, 309], "toni": [18, 53, 309], "f": [18, 25, 26, 42, 45, 46, 48, 50, 52, 54, 55, 100, 104, 105, 106, 111, 147, 150, 154, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 227, 228, 229, 231, 234, 235, 252, 255, 256, 257, 258, 263, 264, 265, 266, 270, 271, 275, 279, 280, 281, 283, 285, 286, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314], "chan": 18, "gene": 18, "howard": 18, "golub": 18, "randal": 18, "j": [18, 24, 29, 42, 43, 58, 61, 74, 75, 76, 77, 78, 79, 89, 91, 100, 104, 105, 106, 110, 111, 119, 123, 124, 133, 134, 137, 139, 143, 149, 150, 154, 155, 157, 158, 159, 160, 162, 164, 186, 193, 195, 228, 231, 233, 284, 289, 291, 293, 296, 299, 305, 306, 307, 308, 309, 310, 311, 312], "levequ": 18, "formula": 18, "varianc": [18, 42, 53, 55, 61, 62, 71, 100, 104, 105, 106, 110, 150, 232, 308, 309, 311, 313], "compstat": 18, "1982": [18, 295], "5th": [18, 278], "symposium": 18, "toulous": 18, "30": [18, 36, 42, 51, 55, 63, 71, 72, 105, 107, 231, 265, 284, 288, 291, 298, 299, 300, 304, 305, 308, 310, 313, 314], "41": [18, 40, 147, 284], "springer": [18, 22, 49, 293, 303, 313], "final": [18, 20, 53, 55, 110, 295, 299, 300, 311], "aggreg": [18, 20, 158, 306, 307], "n_split": [18, 206], "column_select": [18, 224, 225, 226], "element": [18, 63, 81, 88, 92, 93, 100, 102, 104, 105, 106, 107, 115, 116, 118, 124, 129, 134, 136, 143, 158, 180, 182, 186, 190, 192, 195, 197, 200, 215, 226, 233, 307, 312], "same": [18, 21, 24, 42, 46, 48, 50, 52, 53, 54, 55, 56, 61, 63, 72, 84, 101, 109, 110, 111, 158, 161, 173, 186, 203, 206, 210, 233, 275, 290, 294, 295, 296, 299, 310, 312, 313], "anoth": [18, 30, 119, 147, 216, 244, 291, 305, 306, 309], "arbitrari": [18, 100, 101, 104, 105, 106, 108, 230, 313], "possess": [18, 22, 27, 29, 31, 33, 34, 35, 38, 41, 46, 198, 219, 231, 299, 309, 313], "accept": [18, 61, 71, 214, 294], "re": [18, 53, 61, 93, 94, 96, 97, 100, 104, 105, 106, 108, 141, 174, 214, 274, 305, 309, 310, 311], "factor": [18, 27, 33, 83, 84, 109, 110, 111, 186, 291, 312], "koopmanestim": 18, "split": [18, 43, 56, 57, 72, 82, 100, 104, 105, 106, 206, 291, 298, 308, 314], "column": [18, 42, 100, 104, 105, 106, 125, 140, 174, 179, 180, 193, 222, 223, 224, 225, 226, 233, 306, 307, 309], "term": [18, 63, 105, 119, 130, 133, 194, 228, 231, 233, 294, 302, 303, 307, 310, 311], "increment": [18, 71, 109, 198, 311], "except": [18, 72, 88, 91, 92, 95, 100, 104, 105, 106, 158, 190, 192, 195, 250, 290, 294, 312, 313], "cannot": [18, 81, 89, 93, 306, 308, 310, 314], "appli": [18, 19, 21, 42, 44, 46, 48, 50, 52, 53, 54, 55, 56, 61, 74, 75, 76, 77, 78, 79, 84, 94, 100, 104, 105, 106, 194, 204, 205, 206, 227, 230, 233, 243, 294, 303, 304, 306, 307, 309, 311, 313], "is_lag": 18, "big": [18, 303], "tempor": [18, 23, 43, 54, 72, 216, 297, 309], "differ": [18, 42, 53, 61, 89, 100, 102, 104, 105, 106, 109, 110, 190, 192, 207, 217, 219, 237, 280, 286, 291, 294, 295, 300, 301, 302, 305, 307, 308, 309, 311, 313], "select": [18, 30, 42, 45, 47, 49, 71, 83, 84, 90, 93, 96, 106, 107, 108, 111, 124, 147, 158, 161, 204, 205, 231, 232, 250, 297, 302, 307, 309, 310, 313, 314], "remov": [18, 19, 20, 42, 61, 65, 71, 72, 104, 107, 173, 180, 181, 182, 183, 184, 221, 222, 223, 224, 225, 226, 268, 310, 312], "covari": [19, 20, 21, 36, 37, 42, 48, 53, 55, 66, 71, 100, 102, 104, 105, 106, 150, 159, 221, 222, 223, 224, 225, 226, 232, 250, 275, 291, 295, 301, 303, 304, 309, 313], "cov_00": [19, 42, 65, 313], "cov_0t": [19, 42, 65, 313], "cov_tt": [19, 42, 65, 313], "mean_0": [19, 42, 313], "mean_t": [19, 42, 313], "data_mean_remov": [19, 71], "influenc": [19, 184, 195, 233, 309], "effect": [19, 42, 58, 60, 61, 71, 82, 83, 84, 86, 87, 89, 93, 94, 96, 102, 107, 108, 109, 110, 170, 175, 186, 187, 191, 204, 205, 233, 274, 277, 293, 294, 305, 310, 312], "vamp": [19, 42, 53, 63, 64, 69, 71, 73, 100, 104, 105, 106, 250, 273, 287, 291, 292, 298, 314], "whiten": [19, 21, 42, 53, 55, 221, 301, 313], "epsilon": [19, 20, 42, 47, 49, 51, 53, 55, 63, 66, 67, 68, 69, 70, 71, 73, 100, 104, 105, 106, 174, 180, 181, 182, 183, 233, 278, 299, 301, 303, 304, 309], "10": [19, 22, 23, 26, 28, 29, 31, 34, 35, 38, 41, 42, 45, 51, 53, 55, 58, 71, 72, 96, 100, 104, 105, 106, 108, 121, 141, 148, 151, 152, 153, 155, 156, 157, 158, 161, 174, 180, 181, 182, 183, 190, 192, 227, 230, 233, 254, 259, 260, 262, 267, 275, 277, 281, 283, 284, 285, 288, 289, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314], "qr": [19, 174, 180, 181, 182, 183, 296], "pca": [19, 53, 273, 287, 292], "rank": [19, 42, 43, 49, 53, 55, 104, 108, 172, 174, 180, 181, 182, 183, 184, 297, 309, 313], "defici": 19, "reduc": [19, 42, 55, 91, 180, 181, 182, 183, 184, 204, 205, 295, 297, 302, 311], "truncat": [19, 20, 43, 47, 48, 68, 158, 174, 180, 181, 182, 183, 296, 297, 313], "numer": [19, 32, 42, 43, 45, 53, 55, 92, 139, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 190, 192, 221, 233, 250, 282, 291, 294, 296, 307, 309, 310, 313], "spd_inv_sqrt": [19, 221, 250], "decomposit": [19, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 82, 96, 97, 100, 104, 105, 106, 140, 168, 174, 180, 181, 182, 183, 184, 250, 278, 279, 281, 285, 286, 291, 293, 296, 297, 298, 299, 301, 303, 304, 308, 309, 313, 314], "whitened_data": 19, "06": [20, 42, 47, 49, 53, 55, 63, 66, 67, 68, 69, 70, 73, 107, 192, 284, 298, 309], "inf": [20, 53, 55, 119, 130, 131, 145, 228, 303, 310], "koopman": [20, 21, 42, 45, 46, 48, 50, 52, 53, 54, 55, 63, 66, 69, 71, 100, 104, 105, 106, 108, 219, 289, 291, 297, 304, 313, 314], "plug": 20, "6": [20, 23, 35, 40, 42, 45, 47, 49, 53, 55, 63, 66, 69, 73, 100, 104, 105, 106, 107, 134, 154, 161, 192, 206, 216, 227, 230, 233, 253, 259, 262, 266, 267, 269, 270, 272, 281, 282, 283, 284, 288, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "eigenvalu": [20, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 55, 63, 66, 68, 69, 71, 72, 90, 100, 103, 104, 105, 106, 121, 122, 125, 135, 140, 141, 142, 145, 158, 174, 175, 179, 180, 181, 182, 183, 250, 291, 296, 297, 303, 304, 305, 309], "norm": [20, 26, 42, 53, 55, 100, 102, 104, 105, 106, 107, 140, 161, 174, 178, 179, 180, 181, 182, 183, 195, 256, 280, 281, 283, 295, 301, 306, 310], "infin": 20, "collaps": 20, "while": [20, 61, 89, 93, 94, 96, 110, 222, 223, 224, 225, 226, 231, 291, 295, 299, 302, 305, 310, 311, 313], "end": [20, 22, 23, 24, 30, 36, 37, 39, 41, 53, 55, 61, 96, 99, 100, 104, 105, 106, 119, 137, 155, 156, 157, 164, 168, 214, 223, 225, 226, 227, 228, 231, 232, 290, 294, 295, 298, 299, 301, 303, 307, 308, 309, 310, 312, 313], "after": [20, 42, 43, 46, 48, 50, 52, 53, 54, 55, 61, 63, 68, 83, 84, 93, 96, 100, 104, 105, 106, 109, 110, 128, 129, 183, 197, 206, 214, 295, 302, 305, 311, 312, 313], "been": [20, 84, 91, 93, 100, 104, 105, 106, 107, 119, 194, 231, 294, 295, 298, 307, 310, 313], "felik": [20, 21, 53, 72, 105, 108, 291, 293, 309, 313], "ske": [20, 21, 53, 72, 105, 108, 291, 293, 309, 313], "fabian": [20, 21, 53, 83, 89, 100, 101, 102, 109, 111, 161, 293, 305, 309, 311, 312, 313], "paul": [20, 21, 53, 83, 89, 100, 101, 102, 109, 111, 133, 137, 160, 161, 293, 305, 309, 311, 312, 313], "stefan": [20, 21, 51, 53, 291, 303, 304, 309], "klu": [20, 21, 45, 51, 53, 291, 303, 304, 309], "ter": [20, 21, 53, 309, 313], "koltai": [20, 21, 45, 53, 309, 313], "variat": [20, 21, 42, 47, 49, 53, 55, 60, 62, 63, 71, 72, 100, 104, 105, 106, 107, 147, 250, 289, 291, 303, 305, 309, 313, 314], "slow": [20, 21, 53, 58, 72, 100, 104, 105, 106, 109, 147, 190, 192, 241, 289, 291, 297, 304, 308, 309, 313], "collect": [20, 21, 22, 53, 58, 60, 63, 84, 93, 106, 107, 109, 111, 197, 257, 264, 265, 268, 271, 279, 289, 293, 305, 307, 308, 309, 312], "variabl": [20, 21, 53, 58, 109, 110, 173, 193, 194, 206, 289, 298, 303, 307, 308, 309], "short": [20, 21, 53, 108, 114, 119, 162, 164, 167, 169, 205, 273, 292, 293, 309, 310], "off": [20, 21, 42, 53, 55, 93, 100, 104, 105, 106, 114, 119, 134, 162, 164, 167, 169, 174, 186, 230, 275, 291, 295, 306, 309, 310, 313], "equilibrium": [20, 21, 42, 53, 55, 89, 93, 94, 96, 97, 100, 104, 105, 106, 107, 108, 109, 114, 119, 121, 126, 129, 130, 131, 141, 162, 164, 167, 169, 286, 291, 293, 298, 309, 310, 311, 313], "simul": [20, 21, 22, 23, 24, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 53, 55, 71, 72, 82, 93, 100, 101, 104, 105, 106, 107, 108, 110, 114, 119, 121, 130, 131, 141, 147, 158, 162, 164, 167, 168, 169, 170, 171, 194, 229, 230, 231, 233, 234, 235, 254, 262, 269, 282, 284, 285, 291, 293, 299, 300, 302, 305, 307, 309, 310, 311, 313], "146": [20, 21, 53, 108, 133, 148, 151, 152, 153, 284, 293, 305, 309], "15": [20, 21, 23, 37, 53, 100, 104, 105, 106, 158, 186, 193, 195, 227, 253, 272, 274, 275, 280, 281, 283, 284, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "154104": [20, 21, 53, 309], "2017": [20, 21, 53, 100, 101, 108, 293, 309], "koopmanweightingmodel": [20, 250], "koopman_model": [20, 71, 100, 104, 105, 106], "u": [21, 42, 55, 158, 184, 195, 228, 232, 257, 263, 264, 265, 266, 271, 295, 296, 301, 302, 308, 309, 311, 313, 314], "u_const": 21, "koopman_oper": 21, "whitening_transform": 21, "modifi": [21, 54, 61, 109, 111, 233, 294, 299], "pc": 21, "reweight": [21, 100, 104, 105, 106, 108, 109, 284, 311, 313], "constant": [21, 26, 42, 63, 68, 69, 71, 100, 104, 105, 106, 111, 155, 194, 195, 210, 222, 223, 224, 225, 226, 233, 304], "offset": [21, 84, 93, 265, 279], "const_weight_input": 21, "weights_input": 21, "001": [22, 27, 31, 34, 35, 38, 40, 94, 155, 156], "n_step": [22, 25, 26, 27, 30, 31, 33, 34, 35, 38, 40, 41, 93, 100, 102, 104, 105, 106, 227, 229, 230, 231, 232, 233, 234, 235, 252, 255, 256, 257, 259, 262, 263, 264, 265, 268, 269, 270, 271, 276, 284, 285, 286, 299, 304, 305, 306, 309, 310, 311, 313], "10000": [22, 27, 34, 35, 38, 41, 108, 257, 265, 266, 271, 275, 284, 295, 297, 298, 304, 308, 311, 314], "arnold": [22, 251, 272], "beltrami": [22, 251, 272], "childress": [22, 251, 272], "flow": [22, 251, 272, 313], "od": [22, 25, 251, 272, 282], "begin": [22, 23, 24, 30, 36, 37, 39, 41, 53, 55, 96, 100, 104, 105, 106, 119, 137, 155, 156, 157, 164, 168, 214, 223, 225, 226, 227, 228, 231, 232, 294, 302, 303, 307, 309, 310, 312, 313], "align": [22, 23, 39, 41, 53, 55, 100, 104, 105, 106, 223, 225, 226, 227, 309, 310, 313], "dot": [22, 140, 150, 193, 194, 285, 295, 301, 303, 304, 307, 313], "sin": [22, 23, 37, 38, 227, 232], "z": [22, 51, 137, 227, 266, 282, 298, 299, 301, 303, 304, 308, 314], "co": [22, 23, 37, 38, 227, 232], "b": [22, 82, 89, 91, 93, 100, 102, 104, 105, 106, 109, 110, 111, 114, 119, 120, 121, 130, 147, 154, 155, 156, 157, 160, 164, 167, 168, 169, 170, 228, 233, 254, 282, 294, 297, 299, 305, 307, 310, 311], "domain": [22, 23, 227, 233, 291, 293, 297, 299, 303, 309], "omega": [22, 23, 227], "pi": [22, 23, 38, 93, 100, 104, 105, 106, 119, 158, 164, 167, 169, 227, 232, 252, 302, 305, 306], "sqrt": [22, 27, 31, 33, 34, 36, 38, 42, 53, 102, 123, 125, 145, 251, 272, 273, 287, 292, 295, 301, 304, 308, 309, 314], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 82, 171, 186, 187, 188, 189, 190, 191, 192, 210, 219, 220, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 294, 295, 313], "code": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 59, 80, 109, 187, 188, 189, 190, 191, 192, 210, 219, 220, 234, 235, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 294, 295, 308], "png": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 187, 188, 189, 190, 191, 192, 210, 219, 220], "hire": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 187, 188, 189, 190, 191, 192, 210, 219, 220], "pdf": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 187, 188, 189, 190, 191, 192, 210, 219, 220, 260], "integr": [22, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 55, 61, 147, 194, 227, 229, 234, 235, 282, 297, 304], "step": [22, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 40, 41, 42, 53, 55, 58, 60, 63, 89, 93, 100, 102, 104, 105, 106, 108, 109, 121, 128, 129, 130, 133, 137, 145, 147, 149, 158, 160, 169, 188, 194, 217, 227, 229, 230, 231, 232, 233, 234, 235, 259, 277, 284, 291, 295, 297, 298, 299, 300, 302, 303, 304, 307, 309, 310, 312, 313, 314], "rung": [22, 25], "kutta": [22, 25], "That": [22, 27, 31, 34, 35, 41, 89, 306, 307, 310], "system": [22, 25, 26, 27, 31, 32, 33, 34, 35, 38, 40, 41, 42, 47, 54, 72, 104, 105, 114, 121, 130, 131, 141, 147, 161, 193, 194, 195, 210, 227, 229, 231, 233, 234, 235, 250, 252, 257, 263, 264, 265, 268, 270, 271, 273, 277, 287, 291, 292, 294, 296, 297, 298, 299, 300, 303, 304, 307, 309, 310, 311, 313, 314], "timeindependentsystem": [22, 27, 31, 33, 34, 35, 40, 41, 250], "dt": [22, 25, 26, 27, 28, 30, 31, 34, 35, 38, 41, 93, 100, 102, 104, 105, 106, 158, 230, 282, 307], "alreadi": [22, 27, 31, 33, 34, 35, 38, 41, 61, 66, 81, 82, 96, 97, 102, 104, 105, 110, 113, 188, 194, 197, 214, 216, 221, 227, 231, 294, 295, 296, 297, 299, 302, 305, 307, 308, 309, 310, 313, 314], "now": [22, 27, 31, 33, 34, 35, 38, 41, 107, 186, 227, 290, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 313, 314], "traj": [22, 25, 27, 31, 33, 34, 35, 38, 41, 56, 57, 72, 99, 107, 147, 255, 256, 257, 261, 263, 264, 265, 266, 267, 268, 269, 271, 274, 276, 277, 284, 297, 298, 301, 304, 308, 310, 311, 314], "assert": [22, 25, 26, 27, 30, 31, 33, 34, 35, 38, 41, 102], "condit": [22, 27, 31, 33, 34, 35, 38, 41, 55, 91, 110, 160, 194, 227, 229, 234, 235, 282, 293, 294, 298, 302, 304, 305, 306, 307, 309, 313], "Or": [22, 27, 31, 33, 34, 35, 38, 41, 72, 100, 104, 105, 106, 110, 298], "altern": [22, 27, 31, 33, 34, 35, 38, 41, 69, 107, 158, 206, 250, 302, 304], "forward": [22, 27, 31, 33, 34, 35, 38, 41, 42, 46, 48, 50, 52, 54, 55, 58, 61, 82, 93, 100, 104, 105, 106, 114, 119, 120, 121, 130, 133, 164, 191, 194, 226, 228, 280, 282, 285, 298, 299, 303, 304, 307, 308, 310, 313], "dynam": [22, 27, 31, 33, 34, 35, 38, 41, 42, 43, 44, 45, 47, 51, 53, 55, 71, 72, 93, 100, 104, 105, 106, 121, 130, 131, 141, 147, 193, 194, 195, 219, 227, 229, 234, 235, 291, 293, 295, 296, 297, 298, 303, 304, 305, 307, 309, 310, 313], "test_point": [22, 27, 31, 33, 34, 35, 38, 41, 227, 229, 234, 235], "53": [22, 27, 31, 33, 34, 35, 38, 41, 270, 284], "vladimir": 22, "On": [22, 43, 45, 291, 296, 309, 310], "topolog": 22, "steadi": 22, "ideal": 22, "fluid": [22, 32, 43, 233, 251, 272, 273, 287, 291, 292, 296, 309], "page": [22, 49, 288, 290, 303, 313], "25": [22, 32, 45, 231, 252, 267, 272, 284, 291, 295, 297, 299, 305, 309, 310, 311, 313], "28": [22, 43, 271, 272, 284, 291, 295, 296, 298, 299, 309, 310, 313], "1966": 22, "n_particl": [23, 227, 233, 253, 278, 303, 313], "bickleyjetdataset": 23, "bicklei": [23, 227, 250, 251, 272, 273, 287, 292, 303], "jet": [23, 227, 250, 251, 257, 265, 271, 272, 273, 284, 287, 292, 303, 311], "particl": [23, 27, 32, 33, 34, 35, 38, 41, 227, 233, 297, 299, 300, 304, 307, 313], "u_0": [23, 227], "4138": [23, 227], "frac": [23, 27, 33, 35, 38, 41, 42, 53, 55, 75, 100, 101, 104, 105, 106, 130, 131, 137, 145, 149, 150, 158, 169, 186, 195, 223, 225, 227, 233, 295, 296, 307, 309, 310], "dai": [23, 227], "l_0": [23, 227], "77": [23, 227, 284, 302, 310], "r_0": [23, 227], "371": [23, 227], "1446": [23, 227], "205": [23, 227, 284], "461": [23, 227], "ep": [23, 96, 97, 101, 184, 227, 298, 299, 301], "075": [23, 227], "4": [23, 31, 32, 33, 34, 35, 40, 41, 53, 58, 63, 72, 92, 100, 102, 104, 105, 106, 107, 128, 129, 136, 140, 142, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 206, 214, 216, 227, 231, 233, 253, 254, 255, 256, 262, 268, 272, 275, 278, 284, 285, 286, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "20": [23, 25, 121, 141, 154, 190, 192, 195, 227, 233, 257, 264, 267, 268, 271, 275, 276, 284, 285, 295, 297, 298, 299, 303, 304, 309, 310, 311, 313], "evolut": [23, 54, 141, 216, 252, 307], "401": [23, 227, 299], "timestep": [23, 101, 147, 193, 194, 230, 233, 299], "period": [23, 227, 299, 303, 313], "direct": [23, 61, 84, 85, 90, 93, 133, 148, 151, 152, 153, 161, 233, 275, 294, 303, 305, 306, 309, 310, 312, 313, 314], "wrap": [23, 61, 203, 234, 235, 290, 308], "surfac": [23, 185, 189, 227, 233, 273, 287, 292], "cylind": [23, 227], "pmatrix": [23, 30, 36, 37, 227, 232, 309], "cdot": [23, 27, 33, 66, 186, 216, 227, 232, 303, 313], "further": [23, 53, 55, 188, 291, 298, 309, 313], "dataspac": 23, "bin": [23, 28, 109, 110, 111, 210, 230, 254, 263, 269, 270, 275, 276, 284, 295, 298, 300, 304, 309, 311], "discontinu": 23, "introduc": [23, 32, 53, 83, 100, 104, 105, 106, 114, 291, 293, 296, 302, 305, 309, 310, 312], "2d": [23, 251, 272, 295], "treat": [23, 83, 91, 92, 95], "propag": [23, 25, 26, 42, 43, 46, 48, 50, 52, 53, 54, 55, 58, 60, 63, 93, 100, 104, 105, 106, 121, 130, 219, 233, 285, 291, 296, 297, 313], "bickleyjet": [23, 250, 299], "underli": [23, 43, 53, 84, 93, 100, 104, 105, 106, 110, 111, 232, 233, 282, 289, 290, 302, 306, 307, 309, 311, 312, 313], "last": [23, 24, 55, 100, 104, 105, 106, 119, 149, 227, 228, 290, 311], "endpoint": [23, 257, 264, 265, 271], "endpoints_dataset": [23, 278, 303], "radiu": [23, 26, 227, 256], "endpoints_3d": 23, "to_3d": [23, 227, 299], "endpoints_3d_clust": 23, "n_bin": [23, 111, 311], "alireza": [23, 227], "hadjighasem": [23, 227], "daniel": [23, 227], "karrasch": [23, 227], "hiroshi": [23, 227], "teramoto": [23, 227], "georg": [23, 53, 161, 227, 291, 309], "haller": [23, 227], "spectral": [23, 51, 81, 96, 97, 100, 104, 105, 106, 113, 139, 227, 291, 293, 296, 302, 304, 306, 309, 310, 313], "approach": [23, 42, 47, 51, 55, 63, 71, 72, 83, 100, 104, 105, 106, 107, 109, 110, 146, 147, 149, 227, 233, 291, 304, 305, 308, 312, 313, 314], "lagrangian": [23, 109, 227, 303], "vortex": [23, 227], "detect": [23, 227, 303], "review": [23, 53, 227, 291, 293, 309], "93": [23, 227, 284, 310], "063107": [23, 227], "2016": [23, 45, 53, 109, 111, 193, 195, 227, 293, 307, 309, 311], "q": [24, 42, 119, 228, 254, 281, 310], "birth": [24, 228, 251, 272], "death": [24, 228, 251, 272], "chain": [24, 30, 39, 90, 103, 128, 129, 160, 169, 197, 228, 232, 251, 272, 293, 305, 306, 312], "annihil": [24, 228], "creation": [24, 228], "probabl": [24, 29, 30, 39, 55, 63, 81, 82, 84, 89, 91, 92, 93, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 111, 114, 116, 119, 128, 132, 133, 135, 139, 142, 147, 154, 158, 160, 161, 188, 190, 192, 210, 217, 228, 231, 232, 250, 275, 280, 281, 293, 295, 298, 299, 302, 305, 306, 309, 312, 313], "transit": [24, 29, 30, 36, 37, 39, 56, 61, 81, 82, 83, 84, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 154, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 186, 187, 190, 192, 219, 228, 230, 231, 232, 244, 250, 258, 284, 291, 293, 295, 297, 300, 302, 304, 305, 306, 309, 311, 314], "matrix": [24, 29, 30, 36, 37, 39, 42, 43, 48, 53, 55, 56, 63, 65, 66, 68, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 192, 193, 195, 219, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 243, 245, 291, 293, 295, 296, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314], "p_": [24, 39, 42, 89, 93, 111, 123, 125, 132, 136, 145, 154, 159, 160, 161, 164, 228, 231, 291, 293, 302, 305, 306, 309, 310, 312], "ij": [24, 42, 89, 91, 96, 109, 111, 119, 123, 125, 132, 133, 134, 135, 136, 145, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 170, 228, 231, 293, 303, 304, 305, 306, 310, 312], "q_i": [24, 164, 169, 228, 310], "text": [24, 96, 100, 104, 105, 106, 128, 150, 156, 157, 159, 190, 192, 198, 228, 231, 288, 298, 300, 301, 303, 306, 309, 310, 312, 313], "r_i": [24, 53, 109, 111, 121, 125, 130, 131, 135, 228, 309], "p_i": [24, 192, 228, 233], "zero": [24, 42, 61, 84, 89, 91, 92, 93, 95, 96, 97, 102, 107, 108, 109, 110, 134, 158, 159, 172, 174, 195, 210, 216, 222, 223, 224, 225, 226, 233, 254, 256, 279, 284, 295, 300, 302, 304, 306, 310, 311, 313], "wise": [24, 158, 197, 200, 233, 307], "foral": [24, 155, 164, 293, 305, 310], "ldot": [24, 43, 45, 75, 100, 104, 105, 106, 176, 232, 233, 293, 295, 296, 297, 302, 305, 310, 313], "birthdeathchain": [24, 250], "rh": [25, 26, 255, 256], "definit": [25, 26, 63, 100, 104, 105, 106, 111, 114, 174, 180, 181, 182, 183, 184, 227, 229, 233, 234, 235, 294, 299], "ordinari": [25, 107, 174, 295, 302, 308], "differenti": [25, 26, 27, 31, 34, 35, 40, 41, 193, 194, 297, 304, 307], "equat": [25, 26, 27, 31, 34, 35, 40, 41, 42, 71, 100, 104, 105, 106, 111, 119, 193, 194, 195, 219, 248, 249, 296, 297, 304, 307], "hand": [25, 26, 93, 194, 227, 229, 234, 235, 289, 295, 309, 313], "side": [25, 26, 58, 60, 194, 227, 229, 234, 235, 294, 313], "sde": [25, 26, 38, 227, 229, 234, 235, 251, 272, 304], "record": [25, 26, 38, 61, 227, 233], "customsystem": [25, 26, 250], "some": [25, 26, 42, 43, 61, 63, 83, 93, 100, 101, 104, 105, 106, 195, 219, 227, 229, 234, 235, 244, 247, 273, 289, 290, 292, 296, 299, 301, 302, 307, 310, 311, 313], "exponenti": [25, 158, 313], "decai": [25, 298, 313], "def": [25, 26, 61, 252, 256, 267, 268, 279, 282, 284, 286, 290, 299, 301, 303, 311], "45": [25, 114, 119, 128, 258, 284, 296, 310], "With": [25, 243, 298, 299, 303, 305, 307, 310], "x0": [25, 26, 193, 194, 227, 229, 234, 235, 255, 268, 270, 276, 277, 282, 284, 296, 297, 299, 301, 303, 304, 307, 311], "50": [25, 158, 252, 255, 256, 258, 265, 268, 270, 277, 284, 285, 291, 298, 299, 300, 303, 304, 306, 309, 311, 314], "propagated_sampl": [25, 26], "sigma": [26, 27, 35, 40, 41, 42, 74, 75, 77, 79, 92, 101, 102, 256, 296, 297, 303, 304], "stochast": [26, 27, 31, 34, 35, 40, 41, 72, 91, 93, 98, 105, 106, 124, 125, 133, 136, 137, 142, 143, 147, 160, 161, 291, 293, 297, 302, 304, 305, 310, 313], "w_t": [26, 27, 34, 35, 38, 40, 41, 256, 297, 304], "prefactor": 26, "front": [26, 198], "wiener": [26, 27, 34, 35, 38, 40, 41], "euler": [26, 27, 31, 33, 34, 35, 41, 297, 304], "maruyama": [26, 27, 31, 33, 34, 35, 41, 297, 304], "Then": [26, 55, 83, 100, 104, 105, 106, 302, 309, 310], "forc": [26, 32, 35, 89, 96, 97, 111, 233, 302, 313], "harmon": [26, 284, 311], "spheric": [26, 233], "inclus": [26, 84, 214], "harmonic_sphere_forc": [26, 256], "dist_to_origin": [26, 256], "linalg": [26, 256, 296], "dist_to_spher": [26, 256], "els": [26, 101, 102, 107, 108, 109, 119, 140, 156, 157, 160, 161, 195, 227, 229, 234, 235, 256, 279, 298, 299, 300, 310, 314], "our": [26, 294, 296, 297, 298, 302, 303, 304, 308, 310, 311, 312, 314], "diag": [26, 42, 53, 75, 100, 104, 105, 106, 128, 176, 184, 256, 275, 295, 309, 313], "lambda": [26, 30, 72, 142, 232, 255, 256, 284, 296, 299, 301, 303, 304, 311], "55": [26, 186, 258, 284, 310], "300": [26, 275, 282, 299], "temperature_factor": [27, 33, 257], "damp": [27, 33, 233], "live": [27, 29, 34, 35, 38, 41, 61, 231, 295, 300, 310], "landscap": [27, 33, 34, 35, 38, 39, 40, 41, 196, 210, 247, 251, 257, 264, 270, 271, 272, 297, 300], "subject": [27, 34, 35, 38, 41, 58, 60, 294, 297], "nabla": [27, 33, 34, 35, 38, 40, 41, 297, 304], "v": [27, 33, 34, 35, 38, 40, 41, 42, 55, 150, 180, 195, 257, 264, 265, 268, 270, 271, 296, 297, 300, 303, 304, 305, 313], "kt": [27, 33, 39, 276], "x_1": [27, 34, 35, 45, 302, 303, 304, 307], "x_2": [27, 34, 35, 304, 307], "temperatur": [27, 33, 34, 38, 100, 104, 105, 106, 284, 298, 304, 311], "mcmc": [28, 160, 230], "100000": [28, 94, 158, 254, 290], "vari": [28, 300], "qualiti": [28, 288, 295], "give": [28, 84, 102, 107, 110, 111, 147, 193, 194, 294, 306, 307, 310, 311, 312, 313], "opportun": 28, "synthet": [28, 30, 91, 92, 95, 100, 104, 105, 106, 309], "doublewelldiscret": [28, 250], "grid_siz": [29, 231, 259, 281, 283, 310], "bar_loc": [29, 231, 259, 281, 283, 310], "union": [29, 42, 53, 55, 58, 60, 61, 63, 71, 72, 79, 84, 86, 89, 93, 94, 96, 100, 102, 104, 105, 106, 107, 161, 186, 192, 216], "9": [29, 53, 63, 82, 91, 100, 104, 105, 106, 107, 108, 111, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 135, 136, 137, 140, 141, 142, 145, 154, 190, 252, 253, 254, 255, 256, 258, 259, 261, 263, 266, 267, 269, 270, 272, 279, 281, 283, 284, 286, 289, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314], "home_loc": [29, 231, 259, 281, 283, 310], "drunkard": [29, 231, 251, 272, 273, 287, 292, 310], "plane": [29, 231, 295, 298], "take": [29, 42, 53, 55, 58, 61, 68, 72, 83, 84, 86, 93, 100, 102, 104, 105, 106, 109, 110, 128, 158, 186, 187, 189, 212, 231, 291, 295, 298, 302, 303, 309, 310, 311], "home": [29, 231, 274, 279, 303, 310], "absorb": [29, 231], "3x3": [29, 231], "corner": [29, 231], "ones": [29, 42, 53, 55, 61, 110, 231, 233, 295, 299, 306, 310, 311], "do": [29, 43, 84, 93, 100, 104, 105, 106, 110, 133, 158, 204, 205, 231, 294, 308, 311, 313], "lead": [29, 42, 55, 56, 64, 68, 83, 89, 96, 111, 180, 184, 186, 200, 222, 223, 224, 225, 226, 230, 231, 233, 291, 295, 296, 305, 306, 312], "nm": [29, 231], "jump": [29, 39, 82, 100, 104, 105, 106, 110, 114, 119, 158, 164, 168, 170, 171, 231, 280, 293, 296, 302, 305, 306, 308, 309, 310, 314], "identifi": [29, 231, 291, 298], "nj": [29, 231], "locat": [29, 33, 81, 93, 186, 214, 231, 310], "coordin": [29, 33, 42, 53, 146, 149, 196, 210, 231, 263, 298, 309, 310, 311, 313], "drunkardswalk": [29, 250, 310], "lazi": [30, 232, 260, 306], "97": [30, 232, 260, 278, 284, 301, 305, 306, 309], "rotat": [30, 232, 300], "higher": [30, 42, 93, 232, 233, 295, 298, 299, 306], "msm": [30, 72, 81, 82, 83, 84, 87, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 186, 187, 192, 210, 228, 231, 232, 244, 250, 254, 269, 274, 276, 277, 280, 281, 283, 284, 293, 298, 299, 301, 302, 306, 310, 311, 312, 314], "stai": [30, 96, 97, 110, 232, 299, 304, 305, 309, 310], "continu": [30, 109, 194, 244, 293], "multivari": [30, 53, 232, 309], "distribut": [30, 42, 55, 63, 81, 82, 89, 91, 92, 93, 94, 96, 97, 100, 102, 104, 105, 106, 107, 111, 113, 116, 123, 125, 126, 129, 131, 137, 140, 141, 142, 143, 145, 147, 159, 160, 161, 164, 167, 169, 210, 227, 228, 230, 232, 254, 258, 275, 280, 281, 286, 294, 295, 296, 298, 300, 302, 304, 305, 306, 308, 309, 311, 313, 314], "act": [30, 233, 297, 313], "hidden": [30, 36, 37, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 244, 250, 266, 267, 308, 314], "gaussian": [30, 74, 75, 79, 92, 93, 94, 96, 97, 99, 232, 295, 301, 302, 303, 304, 308, 313], "benchmark": [30, 298, 299, 308, 314], "demonstr": [30, 107, 255, 256, 266, 267, 268, 274, 275, 277, 280, 296, 297, 305, 310, 311], "purpos": [30, 58, 60, 81, 93, 294, 295, 306, 311, 313, 314], "equip": [30, 63, 73, 232, 302, 313], "nois": [30, 108, 232, 296, 299], "half": [30, 42, 55, 61, 71, 232, 303, 310], "open": [30, 84, 232], "interv": [30, 84, 90, 101, 102, 103, 188, 197, 200, 217, 232, 243, 252, 253, 267, 268, 299, 305, 309], "feature_trajectori": [30, 101, 286, 291, 309, 313], "ornstein": [31, 251, 272], "uhlenbeck": [31, 251, 272], "dx_t": [31, 38], "alpha": [31, 96, 150, 155, 156, 157, 195, 232, 254, 258, 267, 269, 282, 286, 296, 298, 300, 301, 305, 307, 309, 313], "beta": [31, 34, 38, 60, 150, 268, 304], "dw_t": [31, 38], "n_burn_in": [32, 89, 262, 285, 302], "5000": [32, 276, 279, 285, 295, 299, 306, 313], "initial_posit": [32, 233, 262], "pbf": [32, 233, 262, 313], "40": [32, 33, 53, 55, 129, 257, 258, 259, 265, 267, 284, 298, 299, 303, 310], "boundari": [32, 82, 119, 227, 230, 310, 313], "simplic": [32, 233, 310], "972": [32, 262, 272, 313], "interact": [32, 53, 233, 309], "equilibr": [32, 309, 313], "pbfsimul": [32, 250], "without": [32, 55, 61, 81, 93, 94, 100, 104, 105, 106, 110, 118, 220, 222, 223, 224, 225, 226, 288, 294, 305, 306, 310], "drift": [32, 233], "explicit": 32, "mile": [32, 233, 313], "macklin": [32, 233, 313], "matthia": [32, 233, 313], "ller": [32, 233, 313], "acm": [32, 233, 313], "transact": [32, 233, 295, 313], "graphic": [32, 233, 313], "tog": [32, 233, 313], "32": [32, 233, 284, 299, 306, 313], "12": [32, 53, 72, 102, 105, 109, 121, 130, 131, 134, 135, 136, 137, 141, 161, 163, 165, 233, 262, 280, 283, 284, 285, 295, 297, 298, 299, 301, 302, 303, 305, 306, 308, 309, 310, 312, 313, 314], "2013": [32, 41, 43, 53, 72, 81, 89, 93, 96, 97, 105, 113, 139, 147, 233, 291, 293, 296, 297, 302, 306, 308, 309, 313], "diffus": [33, 39], "quadrupl": [33, 34, 35, 251, 272, 304], "8": [33, 35, 40, 53, 100, 102, 104, 105, 106, 107, 109, 135, 161, 186, 233, 252, 253, 259, 262, 265, 269, 270, 272, 275, 278, 280, 281, 282, 283, 284, 285, 287, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "80": [33, 53, 158, 276, 284, 298, 299], "x_": [33, 42, 46, 48, 50, 52, 53, 54, 55, 100, 102, 104, 105, 106, 107, 109, 110, 111, 133, 149, 161, 195, 206, 228, 231, 289, 291, 293, 296, 297, 303, 308, 309, 310, 312, 313], "eta_t": 33, "sim": [33, 89, 232, 259, 281, 283, 295, 307, 310], "mathcal": [33, 55, 216, 219, 232, 291, 295, 296, 297, 302, 303, 305, 313], "minima": 33, "too": [33, 63, 68, 83, 84, 109, 110, 204, 205, 227, 234, 295, 302], "high": [33, 158, 203, 275, 291, 293, 295, 304, 310], "larg": [33, 72, 83, 89, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 168, 190, 192, 291, 295, 302, 310], "nan": [33, 173, 200, 218, 310], "energi": [33, 39, 109, 110, 111, 189, 196, 210, 227, 229, 234, 235, 247, 251, 256, 263, 272, 273, 284, 287, 292, 311], "73943019": 33, "22373758": 33, "26914935": 33, "67329635": 33, "invers": [34, 38, 42, 46, 48, 50, 52, 54, 63, 66, 68, 69, 81, 82, 93, 100, 104, 105, 106, 167, 181, 221, 231, 297, 300, 304, 310, 313], "asymmetr": [35, 251, 272], "16": [35, 61, 266, 270, 280, 282, 284, 295, 298, 299, 300, 301, 302, 305, 308, 309, 310, 311, 313, 314], "2x_1": [35, 307], "3x_1": 35, "n_sampl": [36, 37, 53, 55, 89, 102, 193, 194, 195, 218, 266, 267, 277, 284, 301, 305, 308, 311, 314], "emiss": [36, 37, 266, 267, 302, 308, 314], "mask": [36, 195, 279], "metast": [36, 41, 81, 89, 93, 96, 97, 100, 104, 105, 106, 113, 139, 281, 291, 293, 297, 302, 304, 306, 310, 313], "linearli": [36, 37, 231, 279, 301, 308, 309, 314], "separ": [36, 37, 53, 89, 90, 93, 96, 97, 103, 108, 197, 222, 223, 224, 225, 279, 288, 291, 295, 301, 302, 305, 306, 307, 308, 309, 314], "devic": [36, 37, 58, 59, 60, 61, 62, 63, 64, 298, 299, 308, 314], "sequenc": [36, 37, 53, 91, 92, 93, 117, 118, 218, 232, 300, 302, 305, 309, 310], "Its": [36, 37, 61, 102, 233, 313], "95": [36, 37, 90, 102, 103, 188, 191, 197, 200, 217, 284, 302, 309], "mu_0": [36, 37, 42, 313], "mu_1": [36, 37, 100, 104, 105, 106, 313], "015": 36, "afterward": [36, 37, 61, 313], "swissrol": [37, 251, 272], "90": [37, 284, 298, 300, 310], "7": [37, 53, 81, 82, 96, 97, 100, 102, 104, 105, 106, 107, 113, 114, 119, 125, 139, 147, 154, 158, 161, 164, 168, 170, 171, 254, 259, 278, 280, 281, 282, 283, 284, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "mu_2": 37, "mu_3": 37, "quintupl": [38, 251, 272], "slowli": [38, 53, 268, 309], "oscil": [38, 233, 268, 313], "origin": [38, 43, 53, 68, 84, 93, 114, 137, 228, 268, 281, 294, 296, 300, 302, 303, 310, 311, 313], "arctan": 38, "timedependentsystem": [38, 250], "start": [38, 56, 89, 93, 94, 96, 97, 100, 102, 104, 105, 106, 109, 119, 131, 137, 141, 147, 160, 168, 211, 228, 230, 231, 259, 285, 293, 295, 298, 300, 302, 308, 309, 310], "metropoli": [39, 251, 272], "neighbor": [39, 156, 233, 310], "1d": [39, 107, 251, 272, 273, 287, 292], "unit": [39, 42, 61, 82, 93, 100, 104, 105, 106, 108, 140, 196, 210, 214, 296, 301, 308, 310, 314], "min": [39, 45, 53, 55, 186, 266, 268, 280, 283, 284, 285, 286, 295, 298, 299, 300, 301, 308, 309, 310, 311, 313, 314], "e_": 39, "e_i": [39, 102, 107, 161], "tripl": [40, 41, 251, 272, 297], "75": [40, 186, 253, 280, 284], "24": [40, 41, 51, 58, 284, 289, 295, 297, 299, 304, 308, 310, 313], "82": [40, 233, 284], "4251": 40, "27": [40, 257, 264, 272, 284, 295, 299, 310, 313], "5344": 40, "53128": 40, "24006": 40, "0684": 40, "found": [41, 47, 61, 83, 88, 89, 107, 108, 111, 290, 295, 299, 302, 303, 304, 312], "09": [41, 100, 104, 105, 106, 190, 284, 297], "3e": [41, 58, 284, 299, 301, 306, 310], "quad": [41, 43, 293, 294, 303, 304, 305], "5e": [41, 63, 284, 298], "volum": [41, 55, 186, 293, 297, 309, 310], "american": [41, 94, 158, 293, 297, 302, 310], "mathemat": [41, 94, 119, 293, 297, 302, 310], "soc": [41, 297, 310], "instantaneous_coeffici": 42, "singular_valu": [42, 48, 313], "timelagged_coeffici": 42, "rank_0": 42, "rank_t": 42, "var_cutoff": [42, 53, 55, 309], "instantaneous_ob": [42, 46, 48, 50, 52, 54], "_monomi": [42, 47, 53, 54, 55, 309], "ident": [42, 47, 53, 54, 55, 73, 82, 89, 93, 100, 104, 105, 106, 110, 212, 219, 250, 296, 297, 302, 303, 309], "timelagged_ob": [42, 46, 48, 50, 52, 54], "tau": [42, 46, 48, 50, 52, 53, 54, 55, 56, 83, 84, 89, 93, 100, 102, 104, 105, 106, 108, 109, 110, 121, 130, 131, 137, 145, 149, 158, 206, 219, 285, 289, 291, 298, 300, 303, 304, 305, 308, 309, 312, 313], "project": [42, 43, 46, 53, 55, 61, 89, 93, 96, 97, 105, 241, 252, 267, 282, 285, 286, 289, 290, 291, 294, 296, 297, 298, 299, 301, 302, 308, 309, 313, 314], "specif": [42, 74, 75, 76, 77, 78, 79, 147, 200, 206, 214, 290, 313], "singular": [42, 45, 48, 53, 55, 69, 71, 72, 100, 104, 105, 106, 178, 184, 278, 291, 299], "sigma_i": [42, 178, 313], "chi_1": [42, 313, 314], "approx": [42, 45, 184, 193, 194, 289, 307, 313], "chi_0": [42, 299, 313, 314], "full": [42, 56, 82, 84, 93, 100, 101, 102, 104, 105, 106, 107, 113, 147, 160, 161, 162, 164, 167, 169, 190, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 295, 309, 313, 314], "kind": [42, 58, 60, 61, 63, 65, 72, 102, 219, 280, 288, 290, 294, 305, 308, 310, 312], "tica": [42, 55, 250, 273, 287, 291, 292, 313], "basis_transform_forward": 42, "basis_transform_backward": 42, "output_dimens": [42, 46, 48, 50, 52, 54, 313], "transferoperatormodel": [42, 250], "coeffici": [42, 186, 193, 194, 195, 291, 307], "c_": [42, 53, 55, 66, 89, 96, 100, 104, 105, 106, 109, 111, 149, 154, 156, 158, 159, 160, 222, 223, 225, 226, 303, 305, 309, 310, 312, 313], "00": [42, 53, 55, 66, 100, 104, 105, 106, 140, 272, 284, 287, 309, 313], "0t": [42, 53, 55, 66, 309, 313], "tt": [42, 53, 55, 66, 309, 313], "structur": [42, 63, 161, 278, 290, 291, 294, 297, 299, 303, 309], "11": [42, 53, 55, 63, 71, 72, 100, 104, 105, 106, 147, 284, 289, 295, 298, 299, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314], "cut": [42, 53, 55, 174], "togeth": [42, 55, 131, 203, 242, 294, 306, 310], "futur": [42, 46, 48, 50, 52, 54, 55, 61, 294, 313], "backward": [42, 46, 48, 50, 52, 54, 55, 61, 82, 96, 100, 104, 105, 106, 114, 119, 120, 133, 142, 164, 167, 169, 226, 228, 285, 299, 303, 310, 313], "mapped_data": [42, 46, 48, 50, 52, 54], "ck_test": [42, 53, 55, 89, 90, 93, 94, 100, 102, 103, 104, 105, 106, 107, 188, 217, 250, 274, 298], "test_model": [42, 53, 55, 71, 89, 94, 102, 107, 219, 274, 313], "include_lag0": [42, 90, 93, 100, 103, 104, 105, 106, 219], "n_observ": [42, 53, 55], "phi": [42, 53, 55, 297, 298, 303, 304], "chapman": [42, 90, 93, 100, 103, 104, 105, 106, 188, 217, 219, 249, 273, 287, 292, 298], "kolmogorov": [42, 90, 93, 100, 103, 104, 105, 106, 188, 217, 219, 249, 273, 287, 292, 298], "encapsul": [42, 45, 47, 51, 58, 60, 63, 83, 189, 230], "limit": [42, 53, 55, 83, 100, 104, 105, 106, 109, 110, 188, 294, 310, 312], "input_dimens": 42, "express": [42, 128, 228, 294, 302, 313], "n_statist": 42, "progressbar": [42, 89, 212, 219], "chapmankolmogorovtest": [42, 93, 100, 104, 105, 106, 188, 219, 250], "langl": [42, 100, 104, 105, 106, 121, 125, 130, 131, 291, 303, 313], "g_": [42, 303, 304], "f_": [42, 110, 150, 162, 164, 170, 307, 310], "rangle_": [42, 121, 130, 303, 313], "rho_": 42, "empir": [42, 100, 104, 105, 106, 254, 258, 313], "predict": [42, 100, 101, 104, 105, 106, 188, 193, 194, 195, 217, 307], "th": [42, 93, 100, 104, 105, 106, 109, 110, 111, 122, 124, 144, 159, 193, 284, 290, 307, 311, 312], "power": [42, 93, 100, 104, 105, 106, 307, 313], "champan": 42, "compar": [42, 58, 60, 102, 107, 149, 161, 219, 291, 299, 301, 302, 310, 311, 313, 314], "static": [42, 83, 89, 101, 197, 204, 205, 218, 227, 231, 295, 302], "effective_output_dimens": 42, "rank0": 42, "rankt": 42, "lag_multipl": 42, "observables_mean_fre": 42, "statistics_mean_fre": 42, "approxim": [42, 45, 47, 49, 53, 54, 55, 56, 57, 71, 72, 87, 100, 104, 105, 106, 160, 181, 182, 183, 194, 250, 282, 291, 296, 297, 299, 304, 306, 309, 313, 314], "extrapol": [42, 313], "markovian": [42, 93, 219, 247, 291, 298], "unmodifi": 42, "averag": [42, 61, 71, 83, 100, 101, 104, 105, 106, 109, 110, 302, 312, 313], "window": [42, 56, 83, 84, 109, 110, 149, 158, 305, 312], "total": [42, 82, 84, 146, 147, 158, 167, 168, 169, 171, 195, 198, 199, 228, 233, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 310, 312], "_": [42, 55, 74, 75, 76, 77, 78, 79, 92, 100, 104, 105, 106, 119, 121, 126, 130, 131, 141, 158, 186, 219, 252, 291, 295, 299, 300, 301, 303, 304, 306, 309, 310, 313], "sigma_": [42, 159, 309], "psi_": [42, 297], "phi_": 42, "q_": [42, 119, 310], "r_": [42, 257, 264, 265, 271], "mu_t": 42, "achiev": [42, 61, 295, 313], "hat": [42, 295, 296], "cross": [42, 65, 71, 72, 100, 104, 105, 106, 121, 130, 223, 303, 304, 310, 313], "typic": [42, 61, 71, 158, 304, 313], "vamp1": [42, 71, 100, 104, 105, 106], "rayleigh": [42, 71, 100, 104, 105, 106], "quotient": [42, 71, 100, 104, 105, 106], "vamp2": [42, 63, 69, 70, 71, 100, 104, 105, 106], "error": [42, 61, 71, 83, 84, 89, 100, 101, 104, 105, 106, 109, 146, 147, 150, 158, 302, 308, 310, 312, 313], "covariances_test": [42, 71], "realiz": [42, 71, 93, 100, 104, 105, 106, 146, 147, 305], "spd": [42, 180, 181, 182, 183], "mani": [42, 53, 94, 100, 104, 105, 106, 107, 194, 211, 233, 293, 302, 303, 305, 306, 308, 309], "33": [42, 61, 71, 262, 268, 272, 284, 299], "nonlinear": [42, 45, 50, 51, 55, 61, 63, 71, 72, 105, 107, 193, 195, 291, 296, 297, 299, 301, 303, 304, 305, 307, 308, 309, 313, 314], "scienc": [42, 45, 51, 55, 63, 71, 72, 100, 101, 105, 107, 109, 111, 114, 119, 121, 130, 131, 141, 193, 195, 291, 293, 297, 303, 304, 305, 307, 309, 310, 311, 313, 314], "23": [42, 53, 55, 63, 71, 72, 102, 105, 107, 109, 111, 190, 192, 195, 284, 291, 293, 295, 299, 305, 309, 310, 311, 313, 314], "66": [42, 55, 63, 71, 72, 105, 107, 284, 291, 297, 305, 313, 314], "2020": [42, 47, 55, 63, 71, 72, 105, 107, 291, 305, 313, 314], "cecilia": [42, 53, 55, 71, 100, 101, 105, 108, 291, 293, 309, 313], "clementi": [42, 53, 55, 71, 100, 101, 105, 108, 291, 293, 309, 313], "theori": [42, 43, 47, 53, 55, 71, 82, 89, 100, 104, 105, 106, 108, 114, 119, 164, 168, 169, 170, 171, 233, 250, 289, 291, 293, 295, 296, 302, 309, 313], "5002": [42, 53, 55, 71, 105, 309, 313], "5011": [42, 53, 55, 71, 105, 309, 313], "2015": [42, 45, 51, 53, 55, 71, 72, 83, 89, 102, 105, 109, 161, 291, 297, 304, 305, 309, 310, 312, 313], "timescal": [42, 53, 87, 89, 90, 93, 94, 96, 100, 103, 104, 105, 106, 130, 131, 147, 191, 218, 220, 249, 273, 287, 291, 292, 293, 298, 300, 305, 309], "impli": [42, 84, 131, 145, 147, 191, 249, 273, 287, 292, 294, 298, 309], "t_i": [42, 53, 100, 104, 105, 106, 130, 131, 145, 206, 228, 309], "log": [42, 61, 62, 109, 111, 130, 131, 145, 154, 158, 210, 275, 277, 295, 298, 308, 309], "lambda_i": [42, 53, 100, 104, 105, 106, 121, 130, 131, 145, 158, 305, 309], "By": [42, 53, 87, 88, 91, 92, 93, 95, 100, 104, 105, 106, 108, 109, 115, 118, 191, 193, 194, 210, 307, 308, 309, 313], "under": [42, 53, 55, 58, 60, 61, 63, 83, 89, 93, 100, 104, 105, 106, 107, 158, 160, 184, 219, 227, 229, 234, 235, 290, 291, 294, 295, 297, 298, 300, 302, 305, 313], "principl": [42, 233, 291, 296, 309, 313, 314], "howev": [42, 61, 83, 100, 104, 105, 106, 290, 295, 302, 303, 306, 309, 313], "percentag": [42, 53, 309, 313], "interpret": [42, 90, 107, 186, 213, 214, 216, 231, 291, 303, 309, 310, 312, 313], "rais": [42, 61, 72, 93, 102, 106, 110, 158, 190, 192, 204, 205, 216, 227, 229, 234, 235], "valueerror": [42, 110, 216], "real": [42, 100, 104, 105, 106, 135, 278, 279, 289, 296, 297, 299, 301, 303, 304], "imaginari": [42, 274, 279], "transformed_data": [42, 48, 50, 52, 54], "cumulative_kinetic_vari": 42, "cumul": [42, 53, 55], "strictli": [42, 53, 55, 61], "feature_component_correl": [42, 309], "x_i": [42, 43, 45, 74, 75, 76, 77, 78, 79, 102, 107, 110, 111, 161, 216, 295, 296, 297, 302, 303, 304, 309, 311], "theta_j": [42, 309], "linear": [42, 43, 53, 55, 61, 133, 148, 151, 152, 153, 186, 193, 194, 195, 231, 296, 298, 299, 301, 306, 307, 308, 309, 313, 314], "them": [42, 48, 50, 52, 53, 54, 55, 59, 61, 62, 68, 90, 96, 97, 102, 106, 146, 147, 192, 293, 297, 309, 312], "written": [42, 55, 121, 130, 293, 302, 303, 309, 313], "corr": [42, 121, 309], "theta": [42, 193, 194, 307, 309], "sum_l": [42, 309], "x_l": [42, 309], "mu_l": [42, 309], "li": [42, 309, 311], "eigenvector": [42, 43, 45, 49, 50, 51, 52, 53, 81, 93, 100, 104, 105, 106, 113, 121, 124, 130, 135, 139, 140, 141, 142, 158, 174, 175, 179, 180, 278, 296, 300, 303, 305, 306], "problem": [42, 45, 53, 55, 89, 119, 174, 250, 290, 294, 303, 304, 309, 310, 311, 313], "There": [42, 43, 89, 214, 303, 304, 310, 313], "row": [42, 81, 89, 91, 93, 98, 100, 104, 105, 106, 107, 115, 116, 117, 118, 134, 136, 140, 159, 173, 182, 193, 217, 222, 223, 224, 225, 226, 231, 233, 293, 299, 302, 303, 307, 309], "koopman_matrix": [42, 46, 48, 50, 52, 54, 250], "operator_invers": [42, 46, 48, 50, 52, 54], "pseudo": [42, 46, 48, 50, 52, 54, 158, 297], "instead": [42, 46, 47, 48, 50, 52, 53, 54, 55, 61, 68, 72, 100, 101, 102, 104, 105, 106, 107, 108, 109, 195, 228, 231, 291, 308, 309], "km": [42, 55], "singular_vectors_left": [42, 286, 309, 313], "repres": [42, 63, 84, 85, 93, 100, 104, 105, 106, 121, 130, 131, 141, 288, 293, 307, 310], "singular_vectors_right": [42, 313], "certain": [42, 61, 84, 93, 233, 291, 294, 310], "preced": [42, 53, 55], "whitening_rank_0": 42, "whitening_rank_t": 42, "exact": [43, 44, 230, 282, 296, 307], "driver": 43, "scipi": [43, 82, 114, 119, 121, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 175, 187, 194, 245, 257, 260, 264, 265, 266, 271, 282, 301, 303, 308, 314], "support": [43, 45, 80, 101, 199, 233, 295, 299, 303, 313], "standard": [43, 89, 91, 92, 94, 101, 102, 140, 146, 147, 197, 233, 293, 296, 301, 302, 303, 304, 305, 313], "follow": [43, 53, 55, 61, 72, 82, 89, 96, 100, 102, 104, 105, 106, 109, 110, 119, 126, 128, 158, 160, 186, 194, 210, 214, 228, 233, 289, 290, 293, 294, 295, 296, 297, 299, 301, 304, 306, 307, 309, 310, 311, 313], "formul": [43, 114, 164, 288, 293, 303, 310], "available_mod": [43, 44], "svd": [43, 47, 48, 100, 104, 105, 106, 296, 313], "packag": [43, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 279, 290, 291, 293, 294, 295, 303, 305, 307], "z_0": 43, "z_t": 43, "z_": [43, 296], "z_1": [43, 296], "y_i": [43, 45, 216, 295, 296, 297, 303, 304], "assumpt": [43, 53, 147, 158, 219, 291, 296, 306], "relationship": [43, 304], "peter": [43, 291, 296, 305, 309, 310], "schmid": [43, 291, 296, 309], "experiment": [43, 100, 101, 104, 105, 106, 291, 293, 296, 309], "mechan": [43, 61, 291, 294, 296, 309], "656": [43, 291, 296, 309], "2010": [43, 158, 291, 295, 296, 303, 309], "jonathan": [43, 291, 296], "tu": [43, 291, 296], "clarenc": [43, 45, 51, 291, 296, 297, 304, 309], "w": [43, 45, 51, 53, 123, 140, 147, 164, 174, 180, 181, 182, 183, 195, 224, 225, 226, 228, 231, 233, 291, 296, 297, 299, 304, 306, 309], "rowlei": [43, 45, 51, 291, 296, 297, 304, 309], "dirk": [43, 291, 296], "luchtenburg": [43, 291, 296], "steven": [43, 193, 195, 291, 296, 307], "l": [43, 61, 93, 100, 102, 104, 105, 106, 110, 119, 121, 130, 131, 140, 141, 147, 150, 154, 158, 159, 162, 164, 167, 169, 174, 181, 182, 183, 193, 195, 197, 217, 268, 291, 296, 302, 305, 307, 310, 311], "brunton": [43, 193, 195, 291, 296, 307], "nathan": [43, 193, 195, 291, 296, 307], "kutz": [43, 193, 195, 291, 296, 307], "applic": [43, 81, 91, 92, 94, 95, 96, 97, 105, 113, 139, 233, 250, 278, 279, 291, 293, 294, 296, 302, 306], "arxiv": [43, 47, 89, 291, 296, 302, 308], "preprint": [43, 47, 83, 89, 291, 296, 302, 308, 312], "1312": [43, 291, 296, 308], "0041": [43, 291, 296], "dmdmodel": [43, 250], "to_dataset": [43, 45, 49, 51, 53, 55, 250], "available_driv": 43, "dmd": [44, 250, 291, 297, 309], "captur": [44, 53, 307, 309, 313], "output_trajectori": 44, "n_eig": [45, 49, 51, 175, 278, 279, 297, 299, 301, 303, 304], "extend": [45, 51, 102, 288, 291, 297, 301, 304, 309, 313], "perron": [45, 139, 304, 306], "frobeniu": [45, 304], "x_m": [45, 304], "y_1": 45, "y_m": 45, "word": [45, 110], "psi_x": [45, 297], "psi_i": [45, 297, 313], "solv": [45, 53, 119, 174, 193, 296, 303, 304, 307, 309, 313], "_f": [45, 296], "pre": [45, 61, 295, 314], "domin": [45, 53, 55, 82, 168, 174, 184, 241, 245, 285, 286, 289, 297, 303, 304, 309, 310, 313], "available_oper": 45, "matthew": [45, 51, 291, 297, 304, 309], "o": [45, 51, 61, 252, 267, 275, 291, 295, 297, 301, 302, 304, 305, 306, 309, 313], "william": [45, 51, 291, 297, 304, 309], "ioanni": [45, 51, 291, 297, 304, 309], "kevrekidi": [45, 51, 291, 297, 304, 309], "driven": [45, 51, 291, 297, 304, 307, 309, 313], "oopman": [45, 51, 291, 297, 304, 309], "1307": [45, 291, 297, 309], "1346": [45, 291, 297, 309], "erron": 45, "robeniu": 45, "51": [45, 284], "79": [45, 284], "doi": [45, 51, 58, 289, 303, 304, 308], "3934": 45, "jcd": 45, "2016003": 45, "edmdmodel": [45, 250], "edmdkoopmanmodel": 45, "edmd": [46, 250, 291, 309], "varphi": [46, 296, 304], "kernel": [47, 48, 49, 50, 51, 52, 67, 74, 75, 77, 78, 79, 80, 195, 233, 250, 266, 273, 287, 291, 292, 308, 314], "_base": [47, 67], "observable_transform": [47, 48, 53, 55, 298, 299, 301, 309, 314], "embed": [47, 48, 106, 304], "introduct": [47, 133, 137, 250, 293, 302], "predefin": [47, 49, 313], "raw": [47, 53, 55, 65, 204, 309], "kvadmodel": [47, 250], "wenchong": 47, "tian": 47, "low": [47, 49, 158, 181, 182, 183, 245, 275, 295, 304], "2008": [47, 109, 160], "02962": 47, "singular_vector": 48, "kvad": [48, 242, 250], "version": [49, 61, 72, 89, 114, 195, 206, 216, 291, 294, 295, 299, 303, 304], "analysi": [49, 51, 53, 81, 82, 84, 89, 96, 97, 100, 104, 105, 106, 107, 108, 109, 113, 123, 125, 133, 134, 135, 136, 140, 142, 145, 147, 158, 244, 250, 284, 291, 293, 295, 302, 303, 304, 306, 309, 310, 311, 313], "cca": [49, 250, 273, 287, 291, 292], "kernelccamodel": [49, 250], "franci": [49, 291, 303], "bach": [49, 291, 303], "michael": [49, 109, 291, 303], "jordan": [49, 291, 303], "independ": [49, 53, 94, 146, 147, 160, 222, 223, 224, 225, 226, 235, 291, 303, 309], "machin": [49, 291, 303], "research": [49, 288, 291, 303], "jul": [49, 291, 303], "48": [49, 284, 291, 303, 310], "2002": [49, 291, 303], "harold": [49, 303, 313], "hotel": [49, 303, 313], "breakthrough": [49, 303, 313], "162": [49, 284, 303, 313], "190": [49, 284, 303, 313], "1992": [49, 303, 313], "kernelcca": [50, 242, 250, 278, 279, 299, 301, 303], "247": [51, 291, 304], "265": [51, 291, 304], "ingmar": [51, 304], "schuster": [51, 53, 291, 304, 309], "krikamol": [51, 304], "muandet": [51, 304], "eigendecomposit": [51, 304], "transfer": [51, 54, 219, 304, 314], "ilbert": [51, 304], "283": [51, 304], "315": [51, 252, 272, 304, 306], "2019": [51, 294, 303, 304, 313], "1007": [51, 304], "s00332": [51, 304], "019": [51, 304], "09574": [51, 304], "andrea": [51, 63, 289, 304, 314], "bittrach": [51, 304], "conform": [51, 55, 105, 110, 304, 305], "149": [51, 284, 304], "244109": [51, 304], "2018": [51, 58, 63, 289, 293, 304, 308, 313, 314], "kerneledmdmodel": [51, 250], "kedmd": [52, 301], "eigenfunct": [52, 53, 278, 279, 291, 297, 300, 303, 304, 309, 313], "kerneledmd": [52, 250, 301, 304], "kinetic_map": [53, 55, 309, 313], "contrast": 53, "maxim": [53, 109, 158, 174, 206, 289, 302, 303, 309, 313], "therefor": [53, 55, 84, 93, 100, 104, 105, 106, 147, 228, 288, 295, 305, 313, 314], "excel": 53, "thermostat": 53, "fact": [53, 100, 104, 105, 106, 157, 288, 309], "slowest": [53, 71, 100, 104, 105, 106, 147, 298, 309, 313], "relev": [53, 55, 100, 104, 105, 106, 142, 147, 296, 298, 310], "exactli": [53, 55, 56, 61, 100, 104, 105, 106, 107, 214, 291, 310], "said": [53, 55, 309, 310, 312], "c0": [53, 174, 254, 258, 269, 301], "keep": [53, 55, 184, 195], "kept": [53, 55, 104, 105, 291, 309, 313], "n_compon": [53, 55, 275, 286, 295, 309], "n_uncorrelated_featur": [53, 55], "specifi": [53, 55, 61, 72, 82, 84, 90, 93, 96, 101, 102, 103, 107, 108, 120, 122, 123, 129, 138, 143, 144, 148, 151, 152, 153, 161, 184, 187, 190, 227, 229, 234, 235, 245, 294, 305, 308, 309, 310, 314], "until": [53, 55, 100, 104, 105, 106, 295, 310], "exce": [53, 55, 231, 291], "fraction": [53, 55, 82, 84, 106, 168, 310], "subspac": [53, 55], "unless": [53, 55, 61, 89, 288, 310, 313], "exclus": [53, 55, 84, 191, 310], "commute_map": [53, 309], "c_0": [53, 309], "mu": [53, 55, 82, 100, 104, 105, 106, 111, 119, 121, 123, 125, 126, 129, 130, 135, 137, 140, 142, 145, 160, 161, 221, 295, 300, 309, 311], "relax": [53, 90, 93, 100, 103, 104, 105, 106, 121, 130, 131, 147, 291, 298, 302, 305, 309, 313], "ln": [53, 93, 100, 104, 105, 106, 305, 309], "reduct": [53, 55, 183, 250, 295, 309, 313], "good": [53, 109, 230, 258, 293, 294, 298, 302, 309], "autocovari": 53, "due": [53, 100, 104, 105, 106, 110, 210, 291, 295, 299, 302, 309, 310, 314], "finit": [53, 54, 55, 96, 133, 210, 291, 293, 303, 307, 313], "symmetri": [53, 161, 305], "explicitli": [53, 100, 104, 105, 106, 309, 312], "enforc": [53, 61, 89, 94, 149, 309], "signal": [53, 100, 104, 105, 106, 108, 291, 309], "shown": [53, 55, 83, 109, 110, 214, 281, 295, 312, 313], "invok": [53, 61, 63, 294], "model_onedim": 53, "projected_data": 53, "assert_equ": [53, 83], "model_var": 53, "brief": 53, "explain": [53, 294, 308, 309, 313], "why": 53, "outperform": 53, "extract": [53, 89, 94, 96, 100, 104, 105, 106, 307], "reaction": [53, 82, 114, 119, 164, 167, 168, 169, 228, 250], "look": [53, 61, 84, 131, 141, 147, 190, 192, 290, 291, 295, 297, 298, 300, 308, 311], "covariancekoopmanmodel": [53, 55, 71, 72, 100, 104, 105, 106, 250], "guillermo": [53, 309], "rez": [53, 309], "hern": [53, 309], "\u00e1": [53, 309], "ndez": [53, 309], "giorgino": [53, 309], "gianni": [53, 309], "de": [53, 83, 288, 294, 309, 312], "fabritii": [53, 309], "identif": [53, 193, 195, 273, 287, 291, 292, 306, 307, 309], "139": [53, 89, 93, 96, 97, 105, 284, 302, 309], "07b604_1": [53, 309], "ralf": [53, 309], "banisch": [53, 309], "commut": [53, 309], "5620": [53, 309], "5630": [53, 309], "lutz": [53, 291, 309], "molgedei": [53, 291, 309], "heinz": [53, 291, 309], "mixtur": [53, 99, 275, 291, 295, 309], "delai": [53, 291, 309], "letter": [53, 291, 309], "72": [53, 272, 284, 291, 309], "3634": [53, 291, 309], "1994": [53, 291, 309], "christian": [53, 89, 302, 309], "schwant": [53, 309], "vijai": [53, 72, 105, 161, 293, 309, 313], "pand": [53, 72, 105, 161, 293, 309, 313], "improv": [53, 291, 309], "reveal": [53, 291, 295, 296, 297, 299, 308, 309, 313, 314], "nativ": [53, 309], "fold": [53, 72, 114, 119, 162, 164, 167, 169, 309, 310], "ntl9": [53, 309], "2000": [53, 302, 306, 309, 310], "2009": [53, 82, 114, 119, 158, 161, 162, 164, 167, 168, 169, 170, 171, 293, 309, 310], "chapman_kolmogorov_valid": [53, 55, 89, 94, 102, 107], "mlag": [53, 55, 89, 94, 102, 107], "classmethod": [53, 55], "covariance_estim": [53, 55, 309, 313], "properli": [53, 55, 294, 309], "memori": [53, 55, 61, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 295, 299], "usag": [53, 55, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "from_data": [53, 55, 93, 96, 97, 250], "run": [53, 55, 61, 93, 100, 104, 105, 106, 233, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 294, 311], "decreas": [53, 55, 84, 110, 123, 125, 168, 190, 192], "load": [53, 55, 109, 291, 298, 299, 304], "individu": [53, 55, 61, 72, 84, 105, 121, 130, 131, 141, 148, 188, 227, 234, 288, 298], "timeshifted_split": [53, 55, 250, 291], "chunksiz": [53, 55, 206, 291], "joint_model": [53, 55], "fit_from_covari": [53, 55], "fit_from_timeseri": [53, 55], "dispatch": [53, 55, 74, 75, 76, 77, 78, 79, 84, 218, 290], "insid": [53, 55, 101, 109, 191, 233, 290, 297], "unscal": [53, 309, 313], "As": [53, 294, 295, 302, 306, 309, 310, 312, 313], "timescale_i": 53, "thereof": [54, 93, 107, 305], "upon": [55, 106, 190, 192, 313], "induc": [55, 295, 312, 313], "wrt": [55, 195], "convent": [55, 140, 214], "densiti": [55, 92, 100, 104, 105, 106, 233, 254, 258, 269, 270, 291, 304, 311, 313], "visit": [55, 81, 84, 88, 93, 119, 231, 269, 306, 311, 312, 313], "infinitesim": 55, "phase": 55, "earlier": 55, "action": [55, 294, 313], "dy": [55, 313], "mid": [55, 93, 101, 228, 291, 293, 300, 302, 305, 307, 310, 312, 313], "situat": [55, 141, 302], "irrevers": 55, "stationari": [55, 81, 82, 89, 90, 93, 94, 96, 97, 100, 102, 103, 104, 105, 106, 107, 113, 114, 123, 125, 126, 129, 135, 137, 140, 142, 143, 145, 147, 158, 160, 161, 164, 167, 169, 190, 192, 210, 228, 230, 254, 258, 280, 291, 300, 305, 306, 313], "superposit": 55, "ansatz": [55, 291, 301, 313], "chi": [55, 93, 299, 301, 313, 314], "freedom": [55, 157], "exclud": [55, 90, 93, 103, 107, 294, 310], "next": [55, 87, 119, 231, 289, 291, 307, 310], "best": [55, 195, 296, 299, 307, 313, 314], "prime": [55, 303], "blocksiz": [56, 72, 301], "slide": [56, 72, 83, 84, 107, 108, 109, 110, 149, 158, 299, 300, 301, 305, 310, 312], "random_st": [56, 57, 72, 206, 232, 268, 275, 295, 301], "uncorrel": [56, 83, 84, 87, 89, 93, 94, 96, 107, 109, 110, 160, 312], "fragment": [56, 72, 310], "Will": [56, 72, 89], "longer": [56, 84, 89, 93, 94, 96, 100, 104, 105, 106, 147, 292, 298, 312], "These": [56, 63, 84, 109, 290, 291, 293, 304, 305, 307, 311, 312, 313, 314], "overlap": [56, 72, 110, 291], "conserv": [56, 147, 163, 165, 310], "count": [56, 83, 84, 85, 88, 89, 90, 91, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 128, 129, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 250, 277, 293, 299, 301, 305, 310, 311], "dtraj": [56, 72, 83, 84, 86, 87, 88, 89, 90, 93, 94, 96, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 115, 117, 118, 146, 149, 230, 232, 254, 258, 263, 266, 267, 274, 276, 277, 279, 284, 298, 299, 300, 301, 308, 311, 314], "randomli": [56, 72, 98, 146, 147, 295], "randomst": [56, 57, 72, 206, 268, 275, 295, 296, 297, 299], "decod": [58, 59, 60, 62, 308], "optim": [58, 60, 61, 63, 64, 81, 100, 109, 113, 139, 158, 161, 190, 192, 193, 195, 233, 282, 295, 299, 301, 302, 303, 305, 307, 308, 313, 314], "adam": [58, 60, 63, 299, 303], "learning_r": [58, 60, 63, 298, 301, 308, 314], "0003": 58, "cpu": [58, 61, 64, 298, 299, 308, 314], "autoencod": [58, 59, 60, 62, 250, 289], "torch": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 290, 298, 299, 301, 308, 314], "nn": [58, 59, 60, 61, 62, 63, 64, 298, 299, 301, 308, 314], "sgd": 58, "rmsprop": 58, "lr": [58, 140], "rate": [58, 60, 63, 82, 134, 158, 167, 228, 250, 299, 310], "karpathi": 58, "christoph": [58, 108, 109, 111, 289, 293, 308, 311], "wehmey": [58, 108, 109, 111, 289, 293, 308, 311], "chem": [58, 154, 160, 289, 308], "phy": [58, 154, 160, 164, 289, 308], "148": [58, 284, 289, 308], "241703": [58, 289, 308], "jun": [58, 289, 308], "1063": [58, 289, 303, 308], "5011399": [58, 289, 308], "evaluate_loss": [58, 60], "tensor": [58, 60, 61, 63, 64, 65, 66, 69, 70, 79, 101, 150, 159, 299, 308, 314], "loss": [58, 60, 63, 70, 299, 308], "network": [58, 59, 60, 61, 62, 63, 64, 82, 100, 104, 105, 106, 114, 164, 168, 187, 190, 192, 228, 231, 245, 247, 250, 273, 287, 289, 291, 292, 299, 308, 310, 314], "taemodel": [58, 62, 250], "data_load": [58, 60, 63], "dataload": [58, 60, 63, 298, 299, 301, 308, 314], "n_epoch": [58, 60, 63, 298, 299, 301, 308, 314], "validation_load": [58, 60, 63, 298, 308, 314], "reset": [58, 60], "loader": [58, 60, 203, 298, 299, 308, 314], "epoch": [58, 60, 63, 299], "mnone": [58, 60], "setup_optim": [58, 60, 63], "pytorch": [58, 60, 63, 79, 80, 203, 241, 242, 250, 289, 298, 308, 314], "float32": [58, 59, 60, 62, 63, 64, 91, 262, 298, 299, 301, 308, 314], "float64": [58, 60, 61, 63, 91, 111], "train_loss": [58, 60, 308], "empti": [58, 60, 63, 110, 204, 205, 260, 296, 301, 309], "validation_loss": [58, 60, 308], "latent": [59, 60, 62, 289, 308], "datatyp": [59, 61, 203, 205], "tae": [59, 60, 250, 308], "latent_cod": [59, 62], "represent": [59, 61, 62, 100, 104, 105, 106, 190, 192, 309, 313, 314], "0005": [60, 63], "kld": 60, "tvaemodel": [60, 250], "reconstruct": [60, 301, 308], "activ": [61, 81, 89, 93, 100, 104, 105, 106], "elu": [61, 298, 299], "mlp": [61, 64, 301, 308, 314], "add_modul": 61, "child": 61, "fn": 61, "recurs": 61, "submodul": 61, "children": 61, "init": [61, 89, 93, 96, 97, 98, 99, 267, 290, 302, 304], "no_grad": [61, 299], "init_weight": 61, "fill_": 61, "net": [61, 82, 162, 163, 164, 165, 166, 273, 280, 287, 292, 310], "sequenti": [61, 195, 296, 298, 299, 307, 308, 314], "in_featur": [61, 298, 308, 314], "out_featur": [61, 298, 308, 314], "bia": [61, 108, 109, 110, 111, 194, 284, 293, 298, 308, 311, 314], "bfloat16": 61, "cast": [61, 64, 279], "buffer": 61, "place": [61, 190, 192, 227, 275, 282, 290, 293, 294, 295, 310, 311, 313], "member": [61, 82, 90, 101, 103, 197], "buf": 61, "20l": 61, "1l": 61, "5l": 61, "immedi": [61, 216], "move": [61, 147, 284, 310, 311, 314], "cuda": [61, 298, 299, 308, 314], "gpu": [61, 299], "eval": [61, 179, 279, 299], "behavior": [61, 63, 101, 102, 106, 107, 108, 109, 227, 306, 307], "thei": [61, 68, 82, 84, 91, 94, 100, 104, 105, 106, 175, 206, 216, 231, 236, 244, 289, 291, 297, 298, 302, 305, 306, 307, 308, 310, 311], "affect": 61, "dropout": [61, 299], "batchnorm": 61, "etc": [61, 83, 109, 110, 310, 312], "equival": [61, 91, 92, 95, 214, 291, 303, 309], "local": [61, 94, 233, 294, 295, 302, 311], "disabl": [61, 295], "grad": 61, "comparison": [61, 250, 273, 287, 292], "confus": 61, "extra_repr": 61, "extra": 61, "To": [61, 99, 168, 214, 290, 295, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313], "own": [61, 299], "both": [61, 93, 100, 104, 105, 106, 109, 110, 111, 291, 294, 296, 301, 305, 310], "multi": [61, 308, 311], "overridden": [61, 74, 75, 76, 77, 78, 79, 207], "although": [61, 295], "recip": 61, "within": [61, 64, 81, 84, 93, 109, 110, 115, 116, 117, 118, 206, 231, 296, 299, 306, 309, 312], "sinc": [61, 69, 72, 94, 96, 129, 233, 286, 291, 296, 298, 299, 303, 305, 308, 309, 313], "hook": 61, "silent": 61, "get_buff": 61, "target": [61, 82, 100, 104, 105, 106, 132, 137, 138, 186, 195, 308], "throw": 61, "docstr": 61, "get_submodul": 61, "explan": 61, "correctli": [61, 279], "fulli": [61, 81, 113, 158], "qualifi": 61, "referenc": [61, 185], "attributeerror": 61, "invalid": [61, 100, 104, 105, 106, 207, 301], "path": [61, 82, 93, 96, 100, 104, 105, 106, 114, 119, 164, 168, 169, 170, 171, 231, 250, 293, 299, 312], "resolv": [61, 83, 84, 86, 87, 90, 96, 247, 295, 298], "someth": [61, 227, 229, 234, 235, 305], "get_extra_st": 61, "state_dict": 61, "set_extra_st": 61, "build": [61, 102, 290, 291, 295, 300, 308], "pickleabl": 61, "ensur": [61, 89, 91, 93, 100, 104, 105, 106, 160, 294, 311], "serial": 61, "guarante": [61, 214, 291], "break": 61, "pickl": 61, "get_paramet": 61, "sai": [61, 305, 307], "net_b": 61, "net_c": 61, "conv": 61, "conv2d": 61, "kernel_s": 61, "stride": [61, 83, 86, 87, 89, 93, 94, 96, 109, 110, 206, 233, 262, 303, 312, 313], "200": [61, 279, 284, 297, 299, 301, 302], "diagram": [61, 288], "show": [61, 110, 191, 254, 257, 258, 261, 262, 268, 269, 270, 276, 278, 279, 281, 282, 283, 284, 286, 295, 298, 299, 310, 311, 312, 313], "would": [61, 96, 97, 110, 195, 214, 288, 290, 291, 294, 295, 302, 307, 308, 309, 313], "runtim": [61, 303], "queri": 61, "named_modul": 61, "abov": [61, 100, 102, 104, 105, 106, 195, 219, 223, 225, 294, 299, 302, 306, 307, 309, 310, 313], "ipu": 61, "load_state_dict": [61, 299], "strict": 61, "descend": [61, 85, 100, 104, 105, 106, 174, 179, 180], "kei": [61, 290, 299, 307], "persist": 61, "missing_kei": 61, "miss": [61, 310, 312], "unexpected_kei": 61, "unexpect": 61, "namedtupl": 61, "field": 61, "runtimeerror": [61, 93], "duplic": [61, 288], "idx": 61, "enumer": [61, 85, 186, 275, 281, 284, 293, 298, 300, 310, 311, 312], "named_buff": 61, "prefix": 61, "prepend": [61, 214], "running_var": 61, "named_children": 61, "conv4": 61, "conv5": 61, "memo": 61, "remove_dupl": 61, "named_paramet": 61, "register_backward_hook": 61, "removablehandl": 61, "deprec": [61, 72, 208], "favor": 61, "register_full_backward_hook": 61, "handl": [61, 79, 110, 211, 231, 259, 268, 279, 281, 299, 310, 313], "register_buff": 61, "running_mean": 61, "save": [61, 90, 93, 100, 104, 105, 106, 126, 222, 223, 224, 225, 226], "alongsid": [61, 295], "num_featur": 61, "register_forward_hook": 61, "signatur": 61, "won": 61, "inplac": [61, 227], "register_forward_pre_hook": 61, "gradient": [61, 80, 193, 194, 227, 229, 233, 234, 235], "grad_input": 61, "grad_output": 61, "reason": [61, 100, 104, 105, 106, 305, 307], "receiv": [61, 110, 294], "view": [61, 133, 147, 148, 152, 153, 188, 214, 274, 288], "similarli": [61, 121, 130, 295, 297, 305, 313], "caller": 61, "register_load_state_dict_post_hook": 61, "post": [61, 231, 288, 294], "incompatible_kei": 61, "modif": [61, 294], "thrown": 61, "clearn": 61, "avoid": [61, 96, 97], "register_modul": 61, "register_paramet": 61, "requires_grad_": 61, "requires_grad": 61, "autograd": 61, "help": [61, 293, 309], "freez": 61, "finetun": 61, "gan": 61, "share_memori": 61, "share_memory_": 61, "destin": 61, "keep_var": 61, "dictionari": [61, 290], "releas": 61, "design": [61, 290], "ordereddict": 61, "compos": [61, 201, 202, 204], "detach": 61, "non_block": 61, "memory_format": 61, "channels_last": 61, "complex": [61, 89, 93, 96, 97, 102, 105, 279, 302, 309, 310], "unchang": 61, "convert": [61, 84, 90, 92, 95, 103, 149, 186, 203, 205, 214, 216, 220, 314], "asynchron": 61, "host": [61, 290], "pin": 61, "below": [61, 84, 90, 93, 96, 147, 195, 214, 294, 295, 305, 309, 313], "desir": [61, 97, 100, 104, 105, 106, 125, 158, 196, 210, 231, 307, 308], "whose": [61, 173, 290, 307], "format": [61, 149, 186, 190, 192, 299, 300, 301, 302, 313], "4d": 61, "1913": 61, "3420": 61, "5113": 61, "2325": 61, "gpu1": 61, "1914": 61, "5112": 61, "2324": 61, "float16": 61, "cdoubl": 61, "3741": 61, "2382": 61, "5593": 61, "4443": 61, "complex128": 61, "6122": 61, "1150": 61, "to_empti": 61, "dst_type": 61, "xpu": 61, "zero_grad": [61, 299], "set_to_non": 61, "context": [61, 63, 293], "tvae": [62, 250, 308], "reparametr": 62, "lobe": [63, 64, 298, 299, 301, 314], "lobe_timelag": [63, 64], "score_method": [63, 313], "score_mod": 63, "try": [63, 192, 233, 289, 295, 302, 308, 314], "neural": [63, 289, 299, 308, 314], "crisp": [63, 93, 279, 298, 299, 306], "softmax": [63, 298], "share": [63, 64, 188, 294, 314], "semi": [63, 184], "perturb": [63, 93, 100, 104, 105, 106, 150], "small": [63, 66, 68, 69, 84, 89, 102, 107, 161, 168, 190, 192, 294, 298, 300, 301, 307], "sure": [63, 94, 96, 97, 162], "complet": [63, 82, 94, 108, 147, 153, 198, 288, 291, 298, 309, 313], "sym_invers": [63, 66, 69, 250], "strength": 63, "invert": [63, 68, 174, 180, 181, 182, 183, 303], "incom": 63, "mardt": [63, 289, 314], "luca": [63, 289, 314], "pasquali": [63, 289, 314], "natur": [63, 289, 302, 309, 314], "commun": [63, 289, 314], "vampnetmodel": [63, 250, 299], "train_score_callback": 63, "validation_score_callback": 63, "Is": [63, 111, 233, 291], "manag": [63, 308], "eg": 63, "partial": [63, 100, 104, 105, 106, 150, 214, 295], "meaning": [63, 107, 147, 294, 313], "validation_data": 63, "steer": 63, "train_scor": [63, 298, 299, 314], "validation_scor": [63, 298, 314], "vampnet": [64, 70, 250, 289], "One": [64, 83, 84, 109, 110, 161, 231, 233, 251, 255, 256, 272, 278, 295, 298, 306, 310, 311, 312, 313], "api": [64, 108, 190, 192, 207, 290, 295, 296, 297, 302, 305, 306, 307, 308, 309, 310, 312, 314], "remove_mean": [65, 222, 223, 224, 225, 226], "trunc": [66, 68, 69, 70], "c_xx": [66, 222, 223, 225], "hermetian": [66, 69], "c00": [66, 313], "c0t": [66, 313], "ctt": [66, 313], "chi_x": [67, 299], "_kernel": 67, "gaussiankernel": [67, 79, 250, 278, 279, 299, 301, 303, 304], "mat": [68, 178, 184], "return_sqrt": 68, "root": [68, 102, 221, 312], "absolut": [68, 125, 163, 165, 174, 302], "x_inv": 68, "data_lag": [69, 70, 73, 203, 205, 278, 299, 303], "contribut": 69, "decorrel": [69, 102], "splitting_mod": 72, "blocksplit": 72, "idea": [72, 250, 295, 296], "divid": [72, 83, 84, 109, 110, 195, 230, 258, 280, 283, 310, 312, 313], "pointer": [72, 301], "consecut": [72, 309], "repetit": 72, "solid": 72, "vamp_scor": [72, 73, 250, 299], "blocksplit_dtraj": 72, "len": [72, 95, 102, 117, 118, 190, 192, 216, 230, 256, 257, 259, 260, 264, 265, 271, 279, 283, 284, 285, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 308, 309, 310, 311, 314], "multiscal": [72, 82, 105, 114, 119, 147, 158, 164, 168, 170, 171, 293, 310, 313], "635": [72, 105, 147, 313], "655": [72, 105, 147, 313], "robert": [72, 105, 133, 148, 151, 152, 153, 233, 313], "mcgibbon": [72, 105, 313], "142": [72, 105, 284, 313], "03b621_1": [72, 105, 313], "cdist": [74, 79], "kappa": [74, 75, 76, 77, 78, 79], "exp": [74, 75, 77, 111, 255, 299, 303, 307], "sum_k": [74, 102, 107, 111, 161], "x_k": 74, "y_k": 74, "bandwidth": [74, 75, 77, 79, 301, 303, 304], "kxy": [74, 75, 76, 77, 78, 79], "_evalu": [74, 75, 76, 77, 78, 79], "intend": [74, 75, 76, 77, 78, 79, 288], "data_1": [74, 75, 76, 77, 78, 79], "data_2": [74, 75, 76, 77, 78, 79], "t_1": [74, 75, 76, 77, 78, 79, 100, 104, 105, 106, 307], "t_2": [74, 75, 76, 77, 78, 79, 307], "y_j": [74, 75, 76, 77, 78, 79, 303, 304], "gramian": [74, 75, 76, 77, 78, 79], "gram": [74, 75, 76, 77, 78, 79, 303, 304], "valid_impl": [74, 79], "binomi": [74, 79], "sigma_1": [75, 313], "sigma_d": 75, "laplacian": 77, "_2": [77, 102, 107, 161, 303], "inhomogen": [78, 299, 313], "polynomi": [78, 193, 194, 301, 303, 307], "even": [80, 96, 110, 184, 293, 296, 313], "still": [80, 83, 100, 104, 105, 106, 107, 163, 165, 190, 192, 294, 295, 310], "usabl": 80, "penalti": 80, "transition_matrix_coars": 81, "pi_coars": 81, "membership": [81, 93, 97, 100, 104, 105, 106, 113, 139, 281, 299, 302, 306, 310], "metastable_distribut": [81, 93, 100, 104, 105, 106, 306], "pcca": [81, 96, 97, 100, 104, 105, 106, 139, 190, 243, 250, 273, 287, 292, 293, 302, 310], "connect": [81, 84, 85, 90, 93, 96, 102, 107, 108, 110, 113, 133, 142, 148, 151, 152, 153, 231, 250, 294, 305, 306, 310, 311, 312], "disconnect": [81, 93, 107, 113], "perfect": [81, 113], "coars": [81, 82, 93, 96, 97, 100, 104, 105, 106, 162, 190, 192, 250, 293, 295, 300, 302], "markovstatemodel": [81, 82, 90, 93, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 186, 192, 228, 230, 231, 250, 269, 280, 284, 293, 302, 305, 310, 311], "grain": [81, 82, 93, 96, 97, 100, 104, 105, 106, 162, 187, 190, 192, 250, 293, 302, 307], "susanna": [81, 96, 97, 105, 113, 139, 293, 302, 306], "\u00f6": [81, 96, 97, 105, 113, 121, 130, 131, 139, 141, 293, 302, 306], "blitz": [81, 96, 97, 105, 113, 139, 293, 302, 306], "marcu": [81, 96, 97, 105, 113, 139, 293, 302, 306], "weber": [81, 96, 97, 105, 113, 139, 293, 302, 306], "fuzzi": [81, 93, 96, 97, 105, 113, 139, 293, 298, 302, 306], "classif": [81, 96, 97, 105, 113, 139, 293, 301, 302, 306], "advanc": [81, 96, 97, 105, 113, 139, 250, 293, 302, 306], "147": [81, 96, 97, 105, 113, 139, 284, 293, 302, 306], "179": [81, 96, 97, 105, 113, 139, 284, 293, 302, 306], "recommend": [81, 83, 89, 93, 100, 104, 105, 106, 107, 109, 110, 121, 123, 125, 130, 131, 140, 142, 145, 312], "visual": [81, 93, 186, 190, 192, 283, 295, 296, 297, 298, 302, 303, 304, 305, 306, 308, 309, 310, 313, 314], "quantiti": [81, 82, 90, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 197, 293, 302, 305, 306, 310], "emploi": [81, 93, 293, 306, 307], "coarse_grained_stationary_prob": [81, 306], "coarse_grained_transition_matrix": [81, 306], "n_metast": 81, "belong": [81, 93, 100, 104, 105, 106, 110, 289, 302, 305, 309, 312], "bayesian": [81, 83, 89, 90, 93, 94, 96, 102, 103, 105, 109, 110, 218, 219, 243, 250, 277, 298, 312], "p_out": 81, "microst": [81, 119, 137, 139, 145, 148, 149, 230, 302, 306, 310], "source_st": [82, 100, 104, 105, 106, 114, 280], "target_st": [82, 100, 104, 105, 106, 114, 280], "net_flux": [82, 190, 280, 283, 310], "stationary_distribut": [82, 100, 104, 105, 106, 113, 114, 228, 254, 258, 305], "qminu": [82, 114, 164, 167, 169], "qplu": [82, 114, 164], "gross_flux": [82, 186, 280, 283, 310], "reactiv": [82, 100, 104, 105, 106, 114, 186, 190, 250, 283], "flux": [82, 100, 104, 105, 106, 114, 186, 190, 192, 228, 231, 250, 273, 280, 287, 292, 293], "tpt": [82, 100, 104, 105, 106, 114, 164, 169, 186, 243, 310], "sink": [82, 171], "intermedi": [82, 231, 291, 310], "node": [82, 152, 186, 187, 190, 192, 312], "committor": [82, 100, 104, 105, 106, 114, 120, 164, 169, 190, 228, 250, 280], "edg": [82, 93, 148, 151, 152, 153, 186, 187, 231, 280, 310, 312], "unnecessari": [82, 100, 104, 105, 106], "back": [82, 84, 105, 186, 284, 289, 290, 293, 297, 299, 301, 302, 309, 310, 311, 312], "gross": [82, 164, 170, 186, 273, 280, 287, 292, 310], "pathwai": [82, 100, 104, 105, 106, 110, 114, 119, 162, 164, 167, 169, 250], "passag": [82, 100, 104, 105, 106, 137, 138, 167, 250, 293, 310], "tool": [82, 84, 108, 114, 123, 125, 133, 134, 135, 136, 140, 142, 145, 203, 244, 250, 293, 294, 295, 303, 313], "educt": 82, "product": [82, 93, 100, 104, 105, 106, 110, 160, 166, 167, 169, 184, 228, 303, 307], "reactive_flux": [82, 100, 104, 105, 106, 186, 250, 280, 283, 310], "philipp": [82, 114, 119, 293, 310], "metzner": [82, 114, 119, 164, 168, 170, 171, 293, 310], "eric": [82, 114, 119, 158, 293, 310], "vanden": [82, 114, 119, 158, 162, 164, 167, 168, 169, 170, 171, 293, 310], "eijnden": [82, 114, 119, 158, 162, 164, 167, 168, 169, 170, 171, 293, 310], "1192": [82, 114, 119, 164, 168, 170, 171, 293, 310], "1219": [82, 114, 119, 164, 168, 170, 171, 293, 310], "coarse_grain": [82, 310], "user_set": 82, "shall": [82, 294], "distinguish": [82, 133, 294, 303, 309], "remaind": [82, 310, 313], "reflect": [82, 252, 253, 262, 267, 268, 286, 291, 300, 314], "backward_committor": [82, 164, 310], "necessari": [82, 168, 214, 294, 309], "preserv": [82, 100, 104, 105, 106, 214, 233], "major_flux": 82, "main": [82, 250, 305], "compris": 82, "request": [82, 84, 94, 102, 302, 313], "maxit": [82, 94, 101, 102, 107, 109, 158, 161, 168, 284, 310, 311], "decompos": [82, 107, 168, 296], "assembl": [82, 168], "capac": [82, 168, 310], "forward_committor": [82, 164, 280, 310], "rightarrow": [82, 83, 108, 310, 312], "intermediate_st": 82, "mfpt": [82, 100, 102, 104, 105, 106, 138, 305, 310], "n_state": [82, 83, 84, 86, 87, 92, 93, 100, 101, 104, 105, 106, 108, 186, 231, 254, 258, 299, 300, 301, 306, 310, 312], "reactant": [82, 167, 169, 171, 228], "total_flux": [82, 169, 310], "count_mod": [83, 102, 107, 108, 109, 110, 274, 277, 301, 305, 312], "transitioncountmodel": [83, 93, 96, 100, 101, 102, 104, 105, 106, 107, 110, 111], "herebi": [83, 294], "decid": [83, 290, 294], "overestim": [83, 312], "likelihood": [83, 84, 89, 92, 93, 94, 96, 102, 105, 107, 109, 110, 111, 154, 158, 161, 191, 218, 250, 293, 302, 311, 312], "plai": [83, 312], "role": [83, 84, 312], "wrong": [83, 102, 109, 110, 305, 312], "uncertainti": [83, 84, 89, 100, 101, 102, 104, 105, 106, 109, 110, 160, 161, 302, 305, 312], "geometr": [83, 109, 110, 312], "subsampl": [83, 93, 109, 110, 312], "s_1": [83, 109, 110, 310, 312], "s_": [83, 109, 110, 150, 302, 310, 312], "s_2": [83, 109, 110, 310, 312], "t_": [83, 109, 110, 119, 133, 135, 137, 150, 154, 160, 305, 310, 312], "consequ": [83, 313], "encount": [83, 230, 293, 310, 312], "portion": [83, 294], "sens": [83, 90, 290, 307, 313], "benjamin": [83, 89, 102, 105, 109, 161, 305, 312], "trendelkamp": [83, 89, 102, 109, 160, 161, 305, 312], "schroer": [83, 89, 102, 109, 160, 161, 305, 312], "143": [83, 89, 102, 109, 161, 284, 305, 312], "11b601_1": [83, 89, 102, 109, 161, 305, 312], "ineffici": [83, 147, 312], "http": [83, 190, 192, 207, 214, 294, 312], "public": [83, 233, 288, 294, 312], "mi": [83, 312], "fu": [83, 288, 312], "berlin": [83, 288, 312], "1699": [83, 312], "__init__": [83, 89, 101, 104, 290, 299], "deal": [83, 245, 291, 293, 294, 299, 310, 313], "lot": [83, 89, 126], "count_matrix": [83, 84, 85, 305, 312], "sparsiti": [83, 158, 161], "counting_mod": 84, "state_histogram": [84, 312], "state_symbol": [84, 106, 107, 310, 312], "count_matrix_ful": 84, "state_histogram_ful": 84, "submodel": [84, 90, 91, 92, 93, 95, 100, 103, 104, 105, 106, 107, 110, 250, 310, 311], "subselect": [84, 93, 96, 243, 312], "made": [84, 91, 92, 93, 95, 96, 102, 104, 107, 294, 309], "analyz": [84, 245, 293, 309, 313, 314], "connected_set": [84, 152, 312], "prune": 84, "mincount_connect": 84, "simpli": [84, 290, 307, 313], "subset": [84, 93, 100, 104, 105, 106, 107, 115, 118, 201, 202, 204, 309, 312], "fine": [84, 187, 300, 301, 307], "far": 84, "effective_count_matrix": 84, "histogram": [84, 88, 102, 104, 110, 210, 269, 270, 300, 304, 311, 312], "discretestatesmanag": [84, 91], "symbol": [84, 91, 93, 106, 107, 307, 311, 312], "iota": [84, 93, 231], "rang": [84, 92, 93, 214, 218, 219, 231, 252, 283, 285, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 310, 311, 313, 314], "transitioncountestim": [84, 102, 107, 110, 274, 277, 298, 299, 300, 301, 305, 310, 312], "connectivity_threshold": [84, 85, 90, 93, 96, 107, 108, 312], "probability_constraint": 84, "sort_by_popul": 84, "regardless": 84, "increas": [84, 94, 110, 168, 190, 192, 291, 310], "n_states_ful": [84, 310], "commonli": [84, 100, 104, 105, 106, 291], "undirect": [84, 85, 93, 102, 148, 151, 152, 153, 312], "graph": [84, 85, 90, 93, 133, 148, 151, 152, 153, 187, 252, 310, 312], "constraint": [84, 94, 102, 107, 160, 233, 305, 312], "decreasingli": 84, "submodel_largest": [84, 90, 93, 96, 274, 300, 301, 310, 312], "count_matrix_histogram": 84, "magnitud": [84, 123, 175, 179, 195, 233, 313], "is_connect": 84, "states_to_symbol": [84, 310], "largest": [84, 88, 89, 90, 93, 94, 96, 102, 105, 107, 110, 112, 147, 148, 152, 153, 175, 180, 182, 184, 310, 311, 312], "elimin": 84, "fall": [84, 105, 110], "disregard": [84, 90, 96, 195], "_state": [84, 90, 96, 102], "_full": [84, 90, 96], "popul": [84, 90, 93, 96, 230, 254, 295, 298, 312], "symbols_to_st": [84, 310, 312], "present": [84, 100, 104, 105, 106, 119, 146, 147, 233, 288, 289, 293, 294, 296, 304, 310, 312, 313], "discard": [84, 89, 279, 302, 306, 312], "happen": [84, 168], "transform_discrete_trajectories_to_submodel": [84, 301, 312], "curat": [84, 93], "unconsid": [84, 93], "attent": [84, 294], "could": [84, 92, 100, 104, 105, 106, 116, 118, 187, 298, 303, 309, 310, 311, 314], "across": [84, 227, 234, 313], "irrespect": [84, 161], "is_full_model": 84, "selected_count_fract": 84, "selected_state_fract": 84, "state_symbols_with_blank": 84, "plu": [84, 286, 296, 310], "total_count": 84, "visited_set": 84, "boolean": [85, 100, 104, 105, 106, 118, 164, 182, 190, 195], "seek": [85, 193, 291, 298, 307], "compute_effective_strid": [86, 250], "lag_observ": 86, "stridden": 86, "nonrevers": [87, 89, 160, 161, 291], "neglect": [87, 89, 94, 96], "ignore_neg": 88, "occurr": [88, 110, 115, 116, 117, 118], "hmm": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 192, 250, 294, 302], "initial_hmm": [89, 302], "hiddenmarkovmodel": [89, 90, 94, 96, 97, 98, 99, 100, 104, 105, 106, 250, 302], "n_transition_matrix_sampling_step": 89, "initial_distribution_prior": 89, "transition_matrix_prior": 89, "store_hidden": [89, 90], "prior": [89, 90, 91, 94, 96, 102, 103, 155, 156, 157, 160, 206, 233, 250, 291, 293, 301, 302, 305, 310], "accordingli": [89, 92, 94, 96], "p0": [89, 93, 100, 104, 105, 106, 128, 131, 141], "dirichlet": [89, 91, 92, 147, 159, 160], "conjug": [89, 91], "prod_i": 89, "_i": [89, 119, 174, 295, 297, 309, 310], "a_i": [89, 100, 104, 105, 106, 126, 127], "n_i": [89, 100, 104, 105, 106, 116, 146, 147], "initial_model": [89, 94, 302], "mle": [89, 91, 158, 161, 293], "sooner": 89, "later": [89, 192, 294, 309, 312], "soon": [89, 309], "drawn": [89, 93, 100, 104, 105, 106, 185, 186, 190, 192, 206, 231, 295, 301, 302, 305], "sampler": [89, 160, 299], "recov": [89, 111, 250, 298, 302], "never": [89, 291], "serv": [89, 296], "regim": [89, 313], "neglig": [89, 180, 184], "posterior": [89, 90, 102, 103, 159, 160, 302, 305], "b_": [89, 96, 155, 156, 157], "broadcast": [89, 214], "b_ij": [89, 157], "occur": [89, 91, 92, 95, 109, 110, 111, 112, 115, 116, 117, 118, 288, 310, 312], "bayesianhmmposterior": [89, 250, 302], "hidden_state_trajectories_sampl": [89, 90], "balanc": [89, 94, 160, 161, 291, 305, 306, 309, 310, 313], "confid": [89, 90, 93, 101, 102, 103, 188, 191, 197, 200, 217, 220, 243, 302, 305], "global": [89, 94, 96, 97, 290, 299, 311], "nuria": [89, 93, 96, 97, 105, 302], "plattner": [89, 93, 96, 97, 105, 302], "molecul": [89, 93, 96, 97, 100, 104, 105, 106, 298, 302], "18": [89, 93, 96, 97, 105, 252, 275, 277, 281, 283, 284, 287, 295, 298, 299, 301, 302, 305, 306, 309, 310, 311, 313, 314], "11b609_1": [89, 93, 96, 97, 105, 302], "phillip": [89, 302], "elm": [89, 302], "kaiser": [89, 302], "aaron": [89, 302], "ewal": [89, 302], "wice": [89, 302], "susan": [89, 302], "marquse": [89, 302], "carlo": [89, 302, 305], "bustamant": [89, 302], "nina": [89, 302], "singhal": [89, 302], "hinrich": [89, 302], "spectroscopi": [89, 100, 104, 105, 106, 302], "character": [89, 119, 296, 302], "measur": [89, 101, 193, 194, 210, 239, 282, 302, 307], "1108": [89, 302], "1430": [89, 302], "n_hidden_st": [89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 302], "prior_submodel": 89, "bhmm": [89, 294], "n_thin": [89, 302], "burn": 89, "gibb": [89, 102, 160, 302, 305], "bayesianhmm": [90, 93, 250, 302], "err_est": [90, 93, 100, 103, 104, 105, 106, 217, 219], "evaluate_sampl": [90, 103], "delimit": [90, 103, 197], "deeper": [90, 103], "hierarchi": [90, 103], "gather_stat": [90, 102, 103, 302, 305], "store_sampl": [90, 102, 103, 197, 305], "about": [90, 100, 103, 104, 105, 106, 110, 194, 197, 293, 297, 301, 304, 305, 313], "quantitystatist": [90, 103, 250], "ob": [90, 91, 92, 93, 95, 131, 141, 279, 295], "discreteoutputmodel": [90, 93, 95, 96, 97, 244, 250], "observe_nonempti": [90, 93], "submodel_popul": [90, 93], "output_prob": [91, 93], "ignore_outli": [91, 92, 95], "discrete_states_manag": 91, "classic": [91, 308], "literatur": [91, 293], "b_i": 91, "n_": [91, 92, 93, 95, 186, 295, 310], "a_": [91, 307, 312], "outlier": [91, 92, 95], "t_k": [91, 92, 95], "outputmodel": [91, 92, 93, 244, 250], "generate_observation_trajectori": [91, 92, 95], "hidden_state_trajectori": [91, 92, 93, 95], "o_t": [91, 92, 95], "_t": [91, 95, 174, 313], "s_t": [91, 92, 95, 305], "map_observations_to_submodel": [91, 93], "sub": [91, 93, 291], "mapped_observ": 91, "observations_per_st": [91, 92, 95], "n_k": [91, 92, 311], "output_model": [91, 92, 93], "asarrai": [91, 284], "to_state_probability_trajectori": [91, 92, 95], "entir": [91, 159, 310], "p_o": 91, "meant": [91, 92, 95, 160, 190, 192], "worst": [91, 92, 95], "unhandl": [91, 92, 95], "crash": [91, 92, 95, 96, 97], "n_observable_st": [91, 92, 95], "contin": [91, 92, 95, 114], "instabl": [92, 233, 306], "ntrajectori": 92, "nob": 92, "randn": 92, "my": 92, "randint": 92, "state_index": [92, 93], "p_t": [92, 95], "state_prob": [92, 93, 95, 298], "n_hidden": [92, 95], "deviat": [92, 102, 146, 147, 197, 301, 302, 305], "transition_model": [93, 302], "initial_distribut": 93, "initial_count": 93, "observation_symbol": 93, "observation_symbols_ful": 93, "macro": [93, 294, 302, 306], "micro": [93, 100, 104, 105, 106, 281, 302, 306, 310], "baum": [93, 94, 302], "welch": [93, 94, 302], "gamma": 93, "sort": [93, 100, 104, 105, 106, 148, 174, 179, 180], "metastable_from_data": [93, 97, 99, 250, 302], "metastable_from_msm": [93, 96, 99, 250, 302], "maximumlikelihoodhmm": [93, 250, 302], "collect_observations_in_st": 93, "retriev": [93, 102], "collected_observ": 93, "nsampl": [93, 102, 116, 118], "compute_observation_likelihood": [93, 302], "compute_viterbi_path": 93, "viterbi": 93, "done": [93, 100, 104, 105, 106, 109, 110, 174, 233, 302], "beforehand": 93, "correlation_ob": 93, "maxtim": [93, 100, 104, 105, 106], "ncv": [93, 100, 104, 105, 106, 121, 123, 125, 130, 131, 140, 142, 145], "experi": [93, 100, 101, 104, 105, 106, 121, 130, 131, 141, 298], "expectation_ob": 93, "fingerprint_correlation_ob": 93, "fingerprint": [93, 100, 104, 105, 106, 121, 130, 131, 141, 250], "fingerprint_correl": [93, 100, 104, 105, 106, 131], "fingerprint_relaxation_ob": 93, "fingerprint_relax": [93, 100, 104, 105, 106, 130], "nonempty_ob": 93, "p_k": [93, 100, 104, 105, 106, 233], "p_0": [93, 100, 104, 105, 106], "pk": [93, 100, 104, 105, 106], "relaxation_ob": 93, "sample_by_observation_prob": 93, "effici": [93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 133, 148, 151, 152, 153, 161, 178, 202, 304], "htraj": 93, "otraj": 93, "states_largest": 93, "strong": [93, 312], "weak": [93, 146, 147, 312], "states_popul": 93, "don": [93, 222, 223, 224, 225, 226, 295], "submodel_disconnect": 93, "bare": 93, "strongli": [93, 110, 210, 312], "weakli": [93, 312], "connectivii": 93, "sub_hmm": 93, "transform_discrete_trajectories_to_observed_symbol": 93, "transition_matrix_ob": 93, "parametr": [93, 208, 299], "kolmogorow": 93, "neq": [93, 134, 137, 149, 159, 164, 310], "p_c": 93, "_c": 93, "pi_c": 93, "count_model": [93, 100, 104, 105, 106, 110, 111, 300, 301, 305, 310], "eigenvectors_left_ob": 93, "eigenvectors_right_ob": 93, "constructor": [93, 100, 104, 105, 106, 198], "lifetim": 93, "ii": 93, "come": [93, 102, 147, 228, 295, 308, 309, 310], "metastable_assign": [93, 100, 104, 105, 106], "pout": 93, "metastable_membership": [93, 100, 104, 105, 106], "metastable_set": [93, 100, 104, 105, 106], "n_observation_st": [93, 98, 302], "algo": 93, "stationary_distribution_ob": 93, "transition_count": [93, 110], "accuraci": [94, 158, 300], "maxit_revers": 94, "heurist": [94, 96, 97, 99, 102, 302], "routin": [94, 109, 125, 193, 245, 301, 307], "prone": [94, 302], "stuck": [94, 96, 97, 295, 302], "optima": [94, 295, 302], "what": [94, 109, 110, 158, 219, 290, 291, 308, 310, 311, 312, 313], "em": 94, "successfulli": 94, "warn": [94, 158, 161, 208, 222, 223, 274, 295, 303, 311], "1000000": [94, 102, 107, 161, 269], "leonard": [94, 302], "alonzo": [94, 302], "eagon": [94, 302], "inequ": [94, 302], "probabilist": [94, 302], "ecolog": [94, 302], "bulletin": [94, 302], "societi": [94, 233, 293, 302], "73": [94, 260, 284, 299, 302], "360": [94, 302], "363": [94, 302], "1967": [94, 302], "fixed_initial_distribut": 94, "fixed_stationary_distribut": 94, "basic": [95, 296, 308, 309], "suppos": [95, 100, 104, 105, 106, 290, 307], "gaussianoutputmodel": [95, 99, 244, 250], "separate_symbol": [96, 97], "unconnect": 96, "region": [96, 119, 258, 297, 298, 309], "populu": 96, "suffix": 96, "everyth": [96, 212, 295], "rl": [96, 119, 155, 156, 157, 164], "ji": [96, 109, 135, 156, 158, 160, 161, 164, 170, 305, 306, 310], "artif": 96, "reversib": [96, 97], "nonzero": [96, 97, 283, 307, 310], "renorm": [96, 97], "suboptim": [96, 97], "hmm_init": [96, 97, 99], "draw": [98, 102, 108, 160, 186, 189, 192, 231, 295, 299], "init_hmm": 98, "transition_matrix_kwarg": 99, "transition_matrix": [99, 100, 102, 104, 105, 106, 114, 228, 230, 269, 284, 299, 300, 302, 305, 306, 311, 314], "n_eigenvalu": [100, 104, 105, 106], "amm_optimizer_st": 100, "augment": [100, 101, 293], "simon": [100, 101, 293], "olsson": [100, 101, 293], "proceed": [100, 101, 105, 109, 111, 114, 119, 121, 130, 131, 141, 193, 195, 293, 295, 302, 307, 310, 311], "nation": [100, 101, 105, 109, 111, 114, 119, 121, 130, 131, 141, 193, 195, 293, 307, 310, 311], "academi": [100, 101, 105, 109, 111, 114, 119, 121, 130, 131, 141, 193, 195, 293, 307, 310, 311], "114": [100, 101, 284, 293], "31": [100, 101, 284, 293, 299, 313], "8265": [100, 101, 293], "8270": [100, 101, 293], "n_metastable_set": [100, 102, 103, 104, 105, 106, 107, 274, 306], "known": [100, 104, 105, 106, 147, 303, 305, 310], "themselv": [100, 104, 105, 106, 290], "plot_ck_test": [100, 104, 105, 106, 217, 219, 250, 274, 287, 298], "committor_backward": [100, 104, 105, 106, 228], "committor_forward": [100, 104, 105, 106, 228], "p_fold": [100, 104, 105, 106], "compute_state_indic": [100, 104, 105, 106], "inact": [100, 104, 105, 106], "state_indic": [100, 104, 105, 106], "compute_trajectory_weight": [100, 104, 105, 106, 210, 276], "reweigh": [100, 104, 105, 106], "t_n": [100, 104, 105, 106, 307], "w_": [100, 104, 105, 106, 131, 141], "interest": [100, 102, 104, 105, 106, 146, 147, 200, 293, 295, 299, 310], "rangl": [100, 104, 105, 106, 121, 125, 130, 131, 291], "rangle_t": [100, 104, 105, 106], "fluoresc": [100, 104, 105, 106], "neutron": [100, 104, 105, 106], "scatter": [100, 104, 105, 106, 233, 252, 259, 260, 267, 268, 275, 278, 279, 286, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 309, 310, 313, 314], "want": [100, 102, 104, 105, 106, 162, 210, 300, 311], "accur": [100, 104, 105, 106, 233], "acf_a": [100, 104, 105, 106], "ccf_": [100, 104, 105, 106], "acf": [100, 104, 105, 106], "stand": [100, 104, 105, 106, 307], "ccf": [100, 104, 105, 106], "long": [100, 104, 105, 106, 204, 205, 293, 304, 309], "infinit": [100, 104, 105, 106, 310, 313], "agre": [100, 104, 105, 106], "ceil": [100, 104, 105, 106], "almost": [100, 104, 105, 106, 180, 222, 223, 224, 225, 226, 295, 296, 306], "lanczo": [100, 104, 105, 106, 121, 123, 125, 130, 131, 140, 142, 145, 175], "plot": [100, 104, 105, 106, 108, 185, 186, 187, 188, 189, 190, 191, 192, 196, 209, 210, 217, 218, 219, 220, 231, 233, 250, 252, 255, 256, 261, 263, 266, 269, 270, 273, 274, 275, 276, 277, 279, 282, 285, 286, 287, 292, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "matplotlib": [100, 104, 105, 106, 185, 186, 187, 189, 190, 191, 192, 231, 233, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "99": [100, 104, 105, 106, 284, 310], "pylab": [100, 104, 105, 106], "plt": [100, 104, 105, 106, 187, 189, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "ts": [100, 104, 105, 106, 130, 131, 145], "eigenvectors_left": [100, 104, 105, 106, 300], "l_ij": [100, 104, 105, 106], "eigenvectors_right": [100, 104, 105, 106, 301], "r_ij": [100, 104, 105, 106], "val": [100, 104, 105, 106, 126], "fo": [100, 104, 105, 106, 126], "sum_i": [100, 104, 105, 106, 121, 126, 130, 131, 141, 146, 169, 178, 233, 295, 310, 313], "pi_i": [100, 104, 105, 106, 161, 164, 169, 305, 306, 310], "amplitud": [100, 104, 105, 106, 130, 131, 227], "nhidden": [100, 104, 105, 106], "return_estim": [100, 104, 105, 106], "pccamodel": [100, 104, 105, 106, 250], "pcca_obj": [100, 104, 105, 106], "reactiveflux": [100, 104, 105, 106, 114, 190, 250, 283, 310], "variou": [100, 104, 105, 106, 245, 249, 301, 307], "tptobj": [100, 104, 105, 106], "ph": [100, 104, 105, 106], "pressur": [100, 104, 105, 106, 233], "rapid": [100, 104, 105, 106], "ensembl": [100, 102, 104, 105, 106, 110, 114, 119, 160, 161, 162, 164, 167, 169, 310, 311], "prepar": [100, 104, 105, 106], "toward": [100, 104, 105, 106, 114, 164, 186, 310, 313], "e_a": [100, 104, 105, 106], "special": [100, 104, 105, 106, 202, 250, 291, 310, 313], "submatrix": [100, 104, 105, 106, 153], "to_koopman_model": [100, 104, 105, 106], "analyt": [100, 104, 105, 106], "update_stationary_distribut": [100, 104, 105, 106], "update_transition_matrix": [100, 104, 105, 106], "cach": [100, 101, 104, 105, 106, 207], "deriv": [100, 101, 102, 104, 105, 106, 107, 108, 109, 193, 194, 282, 303, 304, 307, 310, 313], "empirical_koopman_model": [100, 104, 105, 106], "i1": [100, 104, 105, 106], "1i": [100, 104, 105, 106], "ni": [100, 104, 105, 106], "has_count_model": [100, 104, 105, 106], "is_real": [100, 104, 105, 106], "mu_n": [100, 104, 105, 106], "optimizer_st": 100, "transition_matrix_toler": [100, 104, 105, 106, 107, 114], "expectations_by_st": 101, "experimental_measur": 101, "experimental_measurement_weight": 101, "support_ci": 101, "max_cach": 101, "3000": [101, 263, 299, 303], "conveni": [101, 149, 247, 295, 312, 314], "estimator_from_feature_trajectori": 101, "outsid": [101, 303, 310], "o_": 101, "pred": 101, "lagrang": [101, 111], "multipli": [101, 109, 110, 111], "megabyt": 101, "amm": 101, "parameter": [101, 231, 232, 302, 308, 309, 314], "augmentedmsm": 101, "recent": [101, 102, 107, 109], "convergence_criterion_lagrang": 101, "newton": [101, 158, 233], "algebra": [101, 102, 107, 108, 109, 306], "python": [101, 102, 107, 108, 109, 114, 158, 206, 214, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295], "suggest": [101, 102, 107, 108, 109, 147, 233], "4000": [101, 102, 107, 108, 109], "much": [101, 102, 107, 108, 109, 147, 306, 309, 313], "support_confid": 101, "stationary_distribution_constraint": [102, 107, 305], "maxerr": [102, 107, 109, 161, 284], "08": [102, 105, 107, 109, 161, 284, 301], "nstep": [102, 160, 304], "unknown": [102, 110, 135, 147, 296, 302, 311], "intersect": 102, "exit": [102, 107, 109, 119, 161, 228], "ik": [102, 107, 158, 161], "track": [102, 107, 161], "qualit": [102, 286], "quantit": 102, "involv": [102, 313], "mm": 102, "70000001": 102, "16463699": 102, "135363": 102, "38169055": 102, "61830945": 102, "12023989": 102, "23690297": 102, "64285714": 102, "furthermor": [102, 288, 291, 293, 302, 305, 310, 312], "abl": [102, 255, 256, 288, 296, 312], "bayesianmsmposterior": [102, 250], "summari": [102, 313], "71108663": 102, "15947371": 102, "12943966": 102, "41076105": 102, "58923895": 102, "13079372": 102, "23005443": 102, "63915185": 102, "likewis": 102, "std": [102, 197, 295, 301], "13707029": 102, "09479627": 102, "09200214": 102, "15247454": 102, "07701315": 102, "09385258": 102, "1119089": 102, "And": [102, 107, 130, 131, 297, 298, 300, 302, 305, 308, 310, 312, 313], "control": [102, 110, 187, 231, 233, 291, 307], "percentil": 102, "conf": [102, 188, 200, 217], "stat": [102, 147, 164, 260, 266, 301, 302, 308, 314], "44083423": 102, "03926518": 102, "0242113": 102, "14102544": 102, "30729828": 102, "02440188": 102, "07629456": 102, "43682481": 102, "93571706": 102, "37522581": 102, "40180041": 102, "69307665": 102, "8649215": 102, "31029752": 102, "44035732": 102, "85994006": 102, "9049811296": 102, "9763615793248155": 102, "6540958274695701": 102, "26": [102, 147, 265, 272, 284, 295, 299, 303, 310, 313], "295326015231058": 102, "909895469938899": 102, "sampledmsm": 102, "previous": [102, 107, 119, 295, 302, 310], "maximumlikelihoodmsm": [102, 104, 105, 106, 250, 276, 299, 300, 301, 305, 306, 310, 314], "ignore_counting_mod": 102, "isn": 102, "famili": [102, 233, 289, 296, 302], "caution": [102, 306], "fit_from_count": [102, 107], "fit_from_discrete_timeseri": [102, 107], "discrete_timeseri": [102, 107], "heavili": [102, 309], "bias": [102, 110, 210, 291, 293, 309, 311], "fit_from_msm": 102, "append": [102, 214, 252, 268, 274, 277, 284, 299, 300, 310, 311], "constrain": [102, 107, 158, 307], "bayesianmsm": [103, 104, 105, 107, 250, 274, 277, 298, 305], "twostep_count_matric": 104, "oom_compon": 104, "oom_eigenvalu": 104, "oom_evalu": 104, "oom_information_state_vector": 104, "oomreweightedmsm": [104, 105], "decis": [104, 108, 147, 309], "oom": [104, 108], "oom_rank": 104, "oom_timescal": 104, "c2t": 104, "neig": 105, "ren": [105, 121, 130, 131, 141], "doos": [105, 121, 130, 131, 141], "isabella": [105, 121, 130, 131, 141], "daidon": [105, 121, 130, 131, 141], "marc": [105, 121, 130, 131, 141], "llmann": [105, 121, 130, 131, 141], "marku": [105, 121, 130, 131, 141, 294], "sauer": [105, 121, 130, 131, 141], "jeremi": [105, 121, 130, 131, 141], "smith": [105, 121, 130, 131, 141], "probe": [105, 121, 130, 131, 141], "biomolecular": [105, 121, 130, 131, 141], "108": [105, 121, 130, 131, 141, 284], "4822": [105, 121, 130, 131, 141], "4827": [105, 121, 130, 131, 141], "lindner": 105, "zheng": 105, "yi": 105, "11b602_1": 105, "transition_matric": [106, 111], "behav": [106, 107, 219, 298, 306], "triplet": 106, "switch": [106, 107], "model_index": 106, "mimic": 106, "indexerror": 106, "current_model": 106, "count_fract": [106, 310], "n_connected_msm": [106, 107], "state_fract": [106, 310], "allow_disconnect": [107, 299], "use_lcc": 107, "markovstatemodelcollect": [107, 109, 111, 250], "transient": 107, "level": [107, 189, 196, 203, 245, 256, 257, 264, 265, 268, 271, 284, 290, 293, 297, 299, 301, 302, 303, 304, 311, 314], "dummi": 107, "msm1": 107, "msm2": 107, "ultim": 107, "time_unit": 108, "nb": 108, "rank_mod": 108, "bootstrap_count": 108, "tol_rank": 108, "pretti": 108, "ax": [108, 185, 186, 187, 188, 189, 190, 191, 192, 196, 231, 252, 253, 254, 257, 258, 259, 260, 264, 265, 266, 267, 268, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314], "whitespac": 108, "permit": [108, 288, 294], "fs": 108, "femtosecond": 108, "ps": 108, "picosecond": 108, "ns": 108, "nanosecond": 108, "microsecond": 108, "ms": 108, "millisecond": 108, "bootstrap_traj": 108, "094104": [108, 293], "koopmanreweightedmsm": 108, "sklearn": [108, 193, 275, 282, 286, 295, 307, 309], "mbar": [109, 284, 311], "init_maxit": 109, "init_maxerr": 109, "track_log_likelihood": 109, "callback_interv": [109, 311], "paper": [109, 195], "biased_conf_energi": [109, 111, 284, 311], "f_i": [109, 111, 150, 307, 313], "thermodynam": [109, 110, 111, 284, 293, 311], "lagrangian_mult_log": [109, 111], "v_i": [109, 111, 125, 313], "logarithm": [109, 111, 158, 295], "modified_state_counts_log": [109, 111], "unsuccessfulli": 109, "significantli": [109, 309, 313], "speed": [109, 227, 299], "sum_j": [109, 119, 132, 136, 310], "c_ij": 109, "c_ji": 109, "1ee": 109, "down": [109, 307], "tramdataset": [109, 111, 250, 311], "trammodel": [109, 110, 250], "multiensembl": [109, 111, 293, 311], "113": [109, 111, 193, 195, 284, 293, 307, 311], "e3221": [109, 111, 293, 311], "e3230": [109, 111, 293, 311], "shirt": 109, "129": [109, 284, 295], "124105": 109, "suppli": [109, 158, 294], "bias_matric": [109, 110, 111, 284, 311], "ttraj": [109, 110], "inner": [109, 303], "n_therm_stat": [109, 110, 111], "replica": [109, 110, 293, 311], "exchang": [109, 110, 293, 311], "lie": [109, 110], "highest": [109, 110], "n_markov_st": [109, 110], "organ": [110, 290], "tram": [110, 111, 250, 273, 287, 292, 293], "infer": [110, 111, 158, 309], "swap": 110, "check_against_model": 110, "those": [110, 160, 161, 224, 225, 226, 288, 305], "encompass": 110, "restrict_to_largest_connected_set": [110, 311], "post_hoc_r": 110, "connectivity_factor": 110, "recomput": 110, "bar_vari": [110, 311], "summed_count_matrix": 110, "joint": 110, "delta": [110, 158, 233, 302], "kl": [110, 150, 158, 159], "Not": [110, 294], "weaken": [110, 296], "hypothet": 110, "restrict_to_submodel": 110, "connectivity_opt": 110, "state_count": 110, "easier": [110, 237, 291, 308], "pad": [110, 280, 283, 310], "got": 110, "drop": 110, "tram_input": 110, "traminput": 110, "restructur": 110, "doesn": 110, "matter": 110, "bias_list": 110, "fell": 110, "therm_state_energi": 111, "markov_state_energi": 111, "pmf": [111, 250], "hold": [111, 135, 160, 218, 244, 290, 302, 310, 311], "compute_pmf": [111, 311], "bin_indic": 111, "therm_stat": 111, "binned_sampl": 111, "compute_log_likelihood": 111, "log_likelihood": 111, "compute_observ": 111, "observable_valu": 111, "compute_sample_weights_log": 111, "sample_weights_log": 111, "k_": [111, 119, 134, 158, 169, 310], "f_k": [111, 150], "msm_collect": 111, "only_us": 112, "group": [113, 288], "central": [114, 164], "comittor": [114, 119, 164, 167, 169, 228], "outlin": [114, 160], "weinan": [114, 310], "123": [114, 164, 284, 299, 310], "503": [114, 164, 310], "lothar": [114, 119, 310], "reich": [114, 119, 162, 164, 167, 169, 310], "thoma": [114, 119, 310], "weikl": [114, 119, 162, 164, 167, 169, 310], "106": [114, 119, 162, 164, 167, 169, 284, 310], "19011": [114, 119, 162, 164, 167, 169, 310], "19016": [114, 119, 162, 164, 167, 169, 310], "hit": [119, 132, 137, 228, 310], "disjoint": 119, "fromal": 119, "l_": [119, 158, 310], "setminu": 119, "cup": [119, 310], "came": 119, "sup": 119, "notin": [119, 132, 137], "formal": [119, 310], "d_": [119, 129, 295], "adjoint": 119, "89": [119, 284, 310], "u_plu": 119, "u_minu": 119, "45454545": [119, 131], "sensit": [120, 122, 124, 127, 138, 143, 144, 150, 250], "return_tim": [121, 227, 234], "sum_x": [121, 130, 131, 141], "eigenvlau": [121, 130], "l_i": [121, 125, 130, 131, 135, 174], "40909091": 121, "34081364": 121, "28585667": 121, "23424263": 121, "mu_j": [123, 125, 135, 145, 160], "precomput": [123, 125, 145, 195], "eigvec": 125, "rdl_decomposit": 125, "lapack": [125, 245], "arpack": [125, 245], "orthonorm": [125, 313], "77350269e": 125, "07106781e": 125, "90147543e": 125, "02": [125, 140, 161, 186, 272, 280, 284, 301], "recalcul": 126, "m_a": 126, "909090909": 126, "ec": [128, 129], "44616147": 128, "0495735": 128, "50413223": 128, "04960006": 128, "36": [128, 265, 284], "44640052": 128, "90909091": 129, "54545455": 129, "spectrum": [130, 131, 174, 184, 309], "gamma_i": [130, 131], "lvert": [130, 131, 145], "rvert": [130, 131, 145], "amp": [130, 131], "49122158": [130, 131, 145], "43429448": [130, 131, 145], "20661157": 130, "22727273": 130, "02066116": 130, "w_0": [131, 141], "04545455": 131, "solut": [132, 174, 282, 296, 298, 303, 307], "h_i": 132, "precis": [133, 161, 194, 302], "go": [133, 188, 231, 290, 302, 309, 310], "irreduc": [133, 305], "adjenc": 133, "tarjan": [133, 148, 151, 152, 153], "hoel": [133, 137], "sidnei": [133, 137], "port": [133, 137], "charl": [133, 137], "stone": [133, 137], "waveland": [133, 137], "press": [133, 137], "1986": [133, 137], "search": [133, 148, 151, 152, 153, 305], "siam": [133, 147, 148, 151, 152, 153], "160": [133, 148, 151, 152, 153, 284, 314], "1972": [133, 148, 151, 152, 153], "tol": [134, 135, 136, 158], "follw": 135, "wit": 136, "elementari": [137, 145], "m_t": 137, "_x": [137, 296, 303], "t_y": 137, "cc": [137, 148], "_z": 137, "mu_x": 137, "mu_z": 137, "22": [137, 194, 284, 295, 299, 302, 310, 313], "meta": 139, "stabl": [139, 190, 192, 313], "id": [140, 158, 296], "probabilitydistribut": 140, "distributionof": 140, "repeat": [140, 268, 295, 299, 309, 310], "00000000e": 140, "04880885e": 140, "16227766e": 140, "54545455e": 140, "09090909e": 140, "8407": 141, "71979377": 141, "60624287": 141, "fallback": 142, "check_input": 142, "unsuccess": 142, "degener": 142, "44444444": 142, "11111111": 142, "corrlength": 146, "resampl": [146, 147], "often": [146, 147, 293, 295, 302, 307, 312, 313], "bootstrap": [146, 147, 250], "bootstrap_trajectori": 146, "correlation_length": 147, "segment": [147, 257, 264, 265, 271], "longest": 147, "rough": [147, 302], "shorter": 147, "put": [147, 299, 305], "corrlat": 147, "t_corr": 147, "floor": [147, 311], "subtrajectori": 147, "slightli": [147, 186, 299], "critic": [147, 295], "better": [147, 291, 295, 310, 314], "theoret": 147, "computation": [147, 295, 302, 310], "demand": 147, "kuensch": 147, "jackknif": 147, "ann": 147, "1217": 147, "1989": [147, 302], "efron": 147, "1979": 147, "anderson": 147, "york": 147, "1971": 147, "noe": [147, 154, 160, 162, 164, 167, 169, 288], "nuesk": 147, "pp": 147, "vertic": [148, 153, 313], "lcc": [148, 152, 153], "adjac": [148, 151, 152, 153, 186, 187, 310, 312], "cc_direct": 148, "cc_undirect": 148, "sparse_return": 149, "nstate": [149, 190, 192], "coo_matrix": 149, "coun": 149, "slidingwindow": 149, "skip": 149, "seper": 149, "lfloor": [149, 312], "rfloor": [149, 312], "chi_": 149, "sperat": 149, "c_slide": 149, "csr": 149, "toarrai": 149, "c_lag": 149, "scalar": [150, 193, 194, 214], "rvert_": 150, "t_0": 150, "suitabl": [150, 294, 295], "ijk": 150, "jk": 150, "largest_connected_submatrix": 151, "lcc_direct": 152, "lcc_undirect": 152, "c_cc": 153, "largest_connected_set": 153, "larest": 153, "c_cc_direct": 153, "c_cc_undirect": 153, "orscipi": 154, "logl": 154, "58": [154, 284], "21": [154, 284, 295, 299, 302, 309, 310, 313], "38": [154, 284, 310], "2808034725": 154, "68": [154, 272, 284, 303], "2144096814": 154, "schuett": [154, 162, 164, 167, 168, 169, 170, 171], "triangl": 157, "essenti": 157, "triangular": 157, "elsewher": 157, "t_agg": 158, "10000000": 158, "k0": 158, "on_error": 158, "cve": 158, "truncated_log": 158, "logm": 158, "2dt": 158, "crommelin": 158, "u_": 158, "lj": 158, "lambda_": 158, "delta_": 158, "algorihtm": 158, "kalbfleisch": 158, "lawless": 158, "occupi": 158, "0e7": 158, "quasi": [158, 227, 279, 299], "factr": 158, "fmin_l_bfgs_b": 158, "1e12": 158, "1e7": 158, "moder": 158, "extrem": 158, "happend": 158, "0138": 158, "6993": 158, "davi": 158, "embedd": 158, "electron": [158, 288], "1474": 158, "1486": 158, "daan": 158, "convex": 158, "1751": 158, "1778": 158, "jd": 158, "jerald": 158, "franklin": 158, "panel": [158, 301], "392": 158, "863": 158, "871": 158, "1985": 158, "propto": [159, 160, 210], "whenev": [159, 313], "t0": [160, 227, 234, 299], "obei": [160, 207, 306, 307, 313], "mc": 160, "sweep": 160, "py": [160, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 295, 303, 311], "class": [160, 236, 250, 290, 294, 295, 299], "transitionmatrixsampl": 160, "fulfil": [160, 163, 165, 233], "128": [160, 284, 299, 301], "244103": 160, "submit": 160, "rev_pisym": 161, "return_statdist": 161, "warn_not_converg": 161, "countmatrix": [161, 250], "occup": 161, "fast": [161, 309], "pi_j": [161, 305, 306], "asympot": 161, "return_conv": 161, "histori": 161, "pi_chang": 161, "return_statist": 161, "gregori": [161, 293], "bowman": [161, 293], "kyle": 161, "beauchamp": 161, "boxer": 161, "challeng": 161, "autom": 161, "protein": [161, 291, 309, 310], "131": [161, 284], "124101": 161, "t_nrev": 161, "array_str": 161, "833": 161, "083": 161, "t_rev": 161, "104": [161, 284], "063": 161, "351": 161, "649": 161, "049": 161, "151": [161, 284, 305], "29": [161, 259, 272, 284, 294, 295, 299, 310, 313], "t_mu": 161, "948": 161, "006": 161, "046": [161, 267, 272], "429": 161, "571": 161, "111": [161, 267, 282, 284], "869": 161, "fc_": 162, "ot": 162, "necessarili": [162, 295], "anymor": 162, "netflux": [162, 164, 168, 170, 228], "to_netflux": 162, "ch": [162, 164, 167, 169, 305, 306], "proc": [162, 164, 167, 169], "natl": [162, 164, 167, 169], "acad": [162, 164, 167, 169], "sci": [162, 164, 167, 169], "usa": [162, 164, 167, 169], "rtol": [163, 165], "atol": [163, 165], "outflux": [163, 165], "influx": [163, 165], "dirti": [163, 165], "therebi": [163, 165], "violat": [163, 165], "reli": [164, 169], "q_j": [164, 310], "523": 164, "prod": 166, "consumpt": [166, 291, 295], "totflux": [167, 169], "tab": 167, "netork": 168, "rapidli": 168, "prohibitev": 168, "expens": [168, 302], "prevent": [168, 288, 299], "advis": 168, "monitor": 168, "kab": [169, 228], "flux_matrix": 169, "event": [169, 291, 293, 294, 298, 310], "ab": [169, 222, 223, 224, 225, 226, 279, 295, 297, 299, 301, 302, 304, 310, 314], "turnov": 171, "consum": 171, "with_traceback": 172, "tb": 172, "__traceback__": 172, "arr": [173, 177], "_np": 173, "ct": 174, "canonical_sign": [174, 180, 182], "return_rank": [174, 183], "robust": [174, 180, 181, 182, 183, 306], "hermitian": [174, 178], "_0": 174, "conduct": 174, "schur": [174, 180, 181, 182, 183], "retain": 174, "lm": 175, "eigenpair": 175, "a_1": 176, "a_n": 176, "is_diagon": 176, "ndim": [177, 214], "schatten": 178, "_r": 178, "evec": 179, "lexicograph": 179, "check_sym": 180, "sign": [180, 182, 306, 313], "truli": [181, 182, 183], "moor": 181, "penros": 181, "umathrm": 184, "deem": [184, 294], "contour": [185, 189, 233, 276, 297, 311], "colorbar": [185, 189, 256, 257, 264, 265, 266, 271, 280, 281, 283, 284, 298, 301, 302, 304, 306, 308, 309, 310, 311, 313, 314], "plot_energy2d": [185, 196, 210, 250, 276], "unpack": 185, "energy2d": [185, 189, 196, 250, 276], "cbar": [185, 189, 196, 276, 310], "quadcontourset": 185, "adjacency_matrix": [186, 187], "po": [186, 190, 192, 214, 260, 306, 310, 312], "cmap": [186, 190, 231, 256, 257, 264, 265, 268, 271, 276, 279, 280, 281, 283, 284, 297, 299, 300, 301, 302, 306, 308, 310, 311, 313, 314], "state_s": [186, 190, 192], "state_scal": [186, 190, 192], "state_color": [186, 190, 192, 280], "ff5500": [186, 190, 192], "state_label": [186, 190, 192], "edge_scal": [186, 190, 192], "edge_curvatur": [186, 190, 192, 280], "edge_label": [186, 190, 192, 306, 310], "edge_label_format": [186, 190, 192], "edge_label_loc": 186, "arc": 186, "color": [186, 188, 189, 190, 191, 192, 217, 231, 254, 256, 258, 260, 268, 269, 279, 280, 281, 282, 283, 295, 297, 299, 300, 301, 302, 305, 306, 308, 310, 311, 314], "colormap": [186, 231], "_scale": 186, "d_x": 186, "d_y": 186, "_size": 186, "circl": 186, "twice": [186, 219], "depict": [186, 247, 295, 310], "arrow": [186, 190, 192], "width": [186, 190, 192, 280, 310], "rcparam": 186, "linewidth": [186, 285, 299, 301, 307], "curvatur": [186, 190, 192], "straight": [186, 231], "arrow_label": 186, "curv": [186, 190, 192], "midpoint": 186, "96": [186, 280, 284], "networkx": [186, 187, 192, 280, 306, 310, 312], "spring": 186, "layout": [186, 187, 192, 294], "nx": [186, 280, 306, 310, 312], "spring_layout": [186, 187], "from_numpy_arrai": [186, 280], "textkwarg": [186, 190, 192], "disc": [186, 190, 192], "thick": 186, "xmin": 186, "xmax": [186, 301, 314], "ymin": [186, 254, 301, 314], "ymax": [186, 254, 301, 314], "height": [186, 188, 217, 310], "edge_base_scal": 186, "n_node": 186, "node_s": [186, 310], "rescal": [186, 300], "style": [186, 233, 290], "rgb": [186, 190, 192], "scale_st": 187, "gca": [187, 189, 190, 260], "aspect": [188, 217, 293, 307], "cktestgrid": 188, "legend": [188, 217, 231, 254, 258, 259, 260, 269, 274, 279, 282, 285, 286, 296, 298, 299, 301, 305, 306, 307, 308, 309, 310, 313, 314], "xlabel": [188, 217, 261, 282, 295, 298, 299, 300, 301, 305, 306, 307, 313, 314], "ylabel": [188, 217, 282, 295, 298, 300, 301, 305, 306, 307, 313, 314], "y01": [188, 217], "sharei": [188, 217, 263, 281, 300, 310], "plot_kwarg": [188, 217], "figur": [188, 189, 192, 233, 252, 260, 267, 278, 282, 286, 293, 295, 297, 299, 301, 302, 303, 304, 306], "ck": [188, 274], "overlai": [188, 274], "energylandscape2d": [189, 210, 250], "contourf_kw": [189, 196, 276], "cbar_kw": [189, 196], "cbar_ax": [189, 196], "contourf": [189, 233, 256, 257, 260, 264, 265, 266, 268, 271, 284, 297, 299, 301, 303, 304, 308, 311, 313, 314], "energy2dplot": [189, 250], "flux_scal": 190, "minflux": [190, 192], "2e": [190, 192, 284, 310], "attribute_to_plot": [190, 280], "show_committor": 190, "coolwarm": [190, 256, 257, 264, 265, 271, 280, 297, 308, 310, 314], "ugli": [190, 192], "area": [190, 191, 192, 233, 295, 298, 313], "hex": [190, 192], "grayscal": [190, 192], "red": [190, 192, 268, 299, 301, 302, 310], "34": [190, 192, 284, 299, 303], "35": [190, 192, 284, 301, 310], "displai": [190, 192, 198, 294, 299, 303, 313], "org": [190, 192, 294], "text_api": [190, 192], "html": [190, 192, 299, 303, 313], "info": [190, 192], "arrow_label_s": [190, 192], "impliedtimescal": [191, 220, 250], "n_it": [191, 220, 277], "show_ml": 191, "show_sampl": 191, "show_sample_mean": 191, "show_sample_confid": 191, "show_cutoff": 191, "sample_confid": 191, "exis": 191, "from_model": [191, 218], "mutual": [191, 310], "resolut": 191, "grei": [191, 300], "fill": [191, 231, 310], "shade": 191, "rc": 191, "config": 191, "prop_cycl": 191, "orang": 192, "p_ij": 192, "theta_1": [193, 307], "theta_2": [193, 307], "theta_k": 193, "xi": [193, 194, 282, 307], "satisfi": [193, 310], "candid": [193, 307], "n_input_features_": 193, "n_output_features_": 193, "coef_": 193, "intercept_": 193, "regressor": [193, 195], "linear_model": 193, "stlsq": [193, 250, 282, 307], "x1": [193, 282], "n_input_featur": [193, 194], "joshua": [193, 195, 307], "proctor": [193, 195, 307], "discov": [193, 195, 248, 282, 307], "govern": [193, 195, 248, 293, 294, 307, 311], "3932": [193, 195, 307], "3937": [193, 195, 307], "sindymodel": [193, 250, 282, 307], "sindi": [194, 195, 250, 273, 287, 291, 292, 294], "intercept": [194, 195], "correpond": 194, "n_output_featur": 194, "round": [194, 265, 298, 303, 313], "lh": [194, 282], "human": 194, "readabl": 194, "r2_score": [194, 195], "scoring_kw": 194, "odeint": [194, 282], "integrator_kw": 194, "n_featur": [194, 195], "ridge_kw": 195, "fit_intercept": 195, "copy_x": 195, "attempt": [195, 307], "xw": 195, "2_2": 195, "l2": [195, 279], "ridg": 195, "regress": [195, 307, 313], "n_target": 195, "subobject": 195, "sample_weight": 195, "residu": 195, "y_true": 195, "y_pred": 195, "arbitrarili": [195, 200], "wors": 195, "n_samples_fit": 195, "n_output": 195, "multioutput": 195, "uniform_averag": 195, "multioutputregressor": 195, "x_meshgrid": 196, "y_meshgrid": 196, "kbt": [196, 210, 276], "n_bins_x": 196, "n_bins_i": 196, "k_bt": [196, 210], "gather": [197, 305, 311], "sought": [197, 313], "set_descript": [198, 199], "close": [198, 199, 289, 299, 304, 305, 306, 307, 309, 313], "progresscallback": [199, 250], "remove_nan": 200, "concat": [201, 202, 204], "concatdataset": [202, 250], "fanci": 202, "slice": 202, "astyp": [203, 205, 262, 298, 299, 301, 308, 311, 314], "converted_d": [203, 205], "from_trajectori": [204, 205], "from_numpi": [204, 298, 299], "assertionerror": [204, 205, 227, 229, 234, 235], "shuffl": [206, 295, 298, 301, 308, 314], "timeshift": [206, 291], "whatev": [206, 294], "decor": [207, 208, 209], "fget": 207, "fset": 207, "fdel": 207, "inspir": 207, "github": [207, 214, 290, 294], "com": [207, 214, 294], "pydanni": 207, "stackoverflow": 207, "17330273": 207, "delet": [207, 288], "descriptor": 207, "argument_nam": 208, "replaced_bi": 208, "msg": 208, "mark": [208, 209], "messag": [208, 288], "factori": 208, "requires_networkx": 209, "instal": [209, 213, 241, 289, 294, 295, 298, 314], "shift_energi": [210, 276], "boltzmann": 210, "encourag": 210, "kj": 210, "mol": 210, "298": 210, "479": 210, "energy_landscap": 210, "platform": [212, 213, 290], "noth": [212, 290], "progress_bar": 212, "modnam": 213, "ari": 214, "insert": 214, "atleast_1d": 214, "atleast_2d": 214, "atleast_3d": 214, "pull": 214, "7804": 214, "atleast_": 214, "comprehens": [214, 293], "rule": 214, "roughli": [214, 295, 306, 313], "subok": 214, "ndmin": 214, "easi": 214, "functool": 214, "ducktyp": 215, "presenc": 215, "is_dataset": 215, "is_timelagged_dataset": [216, 250], "arang": [216, 254, 256, 257, 258, 262, 264, 265, 268, 271, 277, 282, 285, 295, 298, 299, 300, 301, 304, 306, 309, 310, 313], "data_instantan": 216, "data_timelag": 216, "predictions_sampl": 217, "estimates_sampl": 217, "has_error": 217, "its_stat": 218, "plot_implied_timescal": [218, 220, 250, 277, 287, 298], "n_lagtim": 218, "n_process": 218, "lagtime_index": 218, "process_index": 218, "samples_for_process": 218, "timescales_sampl": 218, "max_n_sampl": 218, "timescales_for_process": 218, "has_sampl": 218, "max_n_process": 218, "tau_1": 219, "tau_2": 219, "verifi": 219, "rho": [219, 303], "overset": 219, "tild": [219, 296], "mainli": [219, 290, 295, 314], "smallest": 219, "its_data": [220, 277], "sqrt_inv_cov": 221, "modify_data": [222, 223, 224, 225, 226], "sparse_tol": [222, 223, 224, 225, 226], "xx": [222, 223, 225, 226, 297, 303, 304], "exploit": [222, 223, 224, 225, 226], "moments_xx": [222, 250], "faster": [222, 223, 224, 225, 226, 298], "surpris": [222, 223, 224, 225, 226], "effort": [222, 223, 224, 225, 226, 294], "xy": [223, 225, 226, 256, 257, 264, 265, 268, 271, 299, 301, 303, 304, 314], "moments_xxxi": [223, 250], "c_xy": [223, 225], "unnorm": [224, 225, 226], "s_x": [225, 226], "s_y": [225, 226], "yx": [226, 303, 304], "yy": [226, 297, 303, 304], "sx": 226, "sy": 226, "cxx": 226, "cxy": 226, "cyx": 226, "cyi": 226, "full_period": 227, "rk45": 227, "built": 227, "evolv": [227, 229, 234, 235, 297, 298, 299, 307], "handle_n_job": [227, 229, 234, 235, 250], "apply_periodic_boundary_condit": 227, "3d": [227, 252, 267, 282], "xyz": 227, "l0": 227, "characterist": 227, "u0": 227, "veloc": [227, 233], "travel": 227, "wave": 227, "varepsilon": [227, 233, 303, 304], "right_hand_sid": [227, 229, 234, 235], "has_potential_funct": [227, 229, 234, 235], "periodic_bc": 227, "r0": 227, "earth": 227, "time_depend": [227, 229, 234, 235], "vectorized_f": [227, 229, 234, 235], "w_x": 228, "p_x": 228, "t_a": 228, "t_b": 228, "u_x": 228, "arriv": [228, 306], "totalflux": 228, "tiotal": 228, "anhil": 228, "prop": [229, 234, 235, 300, 301], "custom_sd": [229, 250, 256], "custom_od": [229, 250, 255], "n_initial_condit": [229, 234, 235], "n_evalu": [229, 234, 235], "squeez": [229, 234, 235, 261, 263, 265, 301], "dtraj_n": [230, 258], "100k": 230, "dtraj_n2": 230, "simulate_trajectori": 230, "n_trajectori": 230, "fewer": [230, 233, 294, 302, 309], "analytic_msm": [230, 258], "dtraj_n2bad": 230, "bad": [230, 302], "dtraj_n2good": 230, "dtraj_n6good": 230, "barrier": [231, 310], "stencil": 231, "hoc": 231, "add_barri": [231, 259, 281, 283, 310], "x_n": [231, 302, 303, 307], "bresenham": 231, "jack": 231, "digit": [231, 263], "plotter": 231, "ibm": 231, "1965": 231, "coordinate_to_st": [231, 310], "coord": [231, 256, 264, 265, 297], "is_valid_coordin": 231, "is_valid": 231, "plot_2d_map": [231, 259, 281, 283, 310], "barrier_mod": [231, 281, 310], "face": 231, "hollow": [231, 281, 310], "border": [231, 310, 313], "plot_network": [231, 280, 283, 287, 310], "connection_threshold": [231, 283, 310], "edge_color": 231, "plot_path": [231, 259, 310], "color_lerp": [231, 310], "plot_kw": 231, "walk": [231, 251, 272, 273, 287, 292, 310], "interpol": [231, 257, 264, 265, 271, 281, 309, 310], "spline": 231, "scatterplot": 231, "lerp": 231, "linecollect": [231, 257, 264, 265, 271], "state_to_coordin": [231, 310], "return_st": [231, 310], "random_walk": 231, "setup": [231, 295, 309], "map_discrete_to_observ": [232, 286, 309], "ftraj": [232, 262, 309], "covariance_matrix": [232, 260], "rng": 232, "domain_s": 233, "interaction_dist": 233, "n_solver_iter": 233, "graviti": 233, "016": 233, "rest_dens": 233, "tensile_instability_dist": 233, "tensile_instability_k": 233, "rest": [233, 309, 313], "rho_0": 233, "smooth": 233, "hydrodynam": 233, "cell": [233, 310], "solver": [233, 250], "slower": 233, "defaul": 233, "respons": [233, 288], "tension": 233, "p_1": 233, "p_n": 233, "v_1": 233, "v_n": 233, "sph": 233, "rho_i": 233, "m_i": 233, "p_j": 233, "equiv": 233, "convolut": 233, "c_i": [233, 310], "c_k": 233, "vanish": 233, "dampen": 233, "few": [233, 303, 305, 310], "clump": 233, "remedi": 233, "tensil": 233, "gingold": 233, "joseph": 233, "monaghan": 233, "star": 233, "monthli": 233, "notic": [233, 310], "royal": 233, "astronom": 233, "181": [233, 284], "375": 233, "389": 233, "1977": 233, "leon": 233, "luci": 233, "fission": 233, "hypothesi": 233, "1013": 233, "1024": 233, "make_anim": [233, 253, 262, 303, 313], "anim": [233, 252, 267, 268, 299, 313], "asid": 233, "n_grid_x": [233, 285, 313], "transform_to_dens": [233, 285, 313], "n_grid_i": [233, 285, 313], "figsiz": [233, 252, 253, 259, 262, 266, 270, 275, 279, 280, 281, 282, 283, 284, 285, 286, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314], "n_traj": 233, "ncol": [233, 254, 270, 278, 286, 297, 299, 300, 301, 302, 303, 304, 313], "nrow": [233, 270, 278, 286, 297, 299, 300, 302, 303, 304, 313], "titl": [233, 260, 282, 283, 286, 295, 297, 298, 301, 303, 304, 306, 310, 313], "funcanim": [233, 252, 267, 268, 299], "simulate_oscillatory_forc": [233, 262, 285, 313], "n_oscil": [233, 285, 313], "alternatingli": [233, 313], "negat": 233, "kde": [233, 313], "knowledg": [233, 301, 310, 311], "lost": 233, "develop": [236, 250, 274, 279, 293, 295, 303, 306], "readi": [242, 305, 307], "fork": 245, "msmtool": [245, 294], "diagnost": 247, "throughout": [249, 310], "notebook": [250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 298, 299, 301, 303, 304, 311, 314], "alanin": 250, "dipeptid": 250, "wedg": 250, "backtransform": [250, 299], "coher": [250, 273, 287, 291, 292, 297, 303, 313], "kvadnet": 250, "regularspac": [250, 275, 295], "kmeans_plusplu": 250, "koopmanweightingestim": [250, 309], "whiteningtransform": 250, "covar": [250, 313], "moments_block": 250, "vamp_score_data": [250, 303], "vamp_score_cv": [250, 301], "cvsplit_traj": 250, "blocksplit_traj": 250, "tvaeencod": [250, 308], "vampnet_loss": 250, "kvad_scor": [250, 299], "number_of_st": 250, "count_stat": 250, "compute_connected_set": 250, "compute_dtrajs_effect": 250, "indices_by_distribut": 250, "compute_index_st": 250, "indices_by_sequ": 250, "indices_by_st": 250, "random_guess": [250, 302], "monomi": [250, 297, 301, 307], "generalizedgaussiankernel": 250, "laplaciankernel": 250, "polynomialkernel": 250, "torchgaussiankernel": [250, 299], "is_torch_kernel": 250, "double_well_discret": [250, 258], "quadruple_wel": [250, 264, 304], "quadruple_well_asymmetr": [250, 265], "triple_well_2d": [250, 271, 276, 297], "triple_well_1d": [250, 270], "double_well_2d": [250, 257, 277], "time_dependent_quintuple_wel": [250, 268], "abc_flow": [250, 252], "ornstein_uhlenbeck": [250, 261], "prinz_potenti": [250, 263, 300], "ellipsoid": [250, 251, 272, 274, 286, 295, 306, 309, 313], "sqrt_model": [250, 266, 279, 301, 308, 314], "swissroll_model": [250, 267], "position_based_fluid": [250, 262, 285, 313], "drunkards_walk": [250, 259, 281, 283, 310], "bickley_jet": [250, 253, 278, 299, 303], "birth_death_chain": [250, 254], "tmatrix_metropolis1d": [250, 269, 284, 311], "plot_adjac": 250, "plot_markov_model": [250, 280], "plot_flux": [250, 280], "drop_nan_row": 250, "is_diagonal_matrix": 250, "is_square_matrix": 250, "schatten_norm": 250, "eig": 250, "eig_corr": 250, "sort_eig": 250, "spd_eig": 250, "spd_truncated_svd": 250, "spd_inv": 250, "spd_inv_split": 250, "zerorankerror": 250, "implied_timescal": [250, 277, 298], "confidence_interv": 250, "atleast_nd": 250, "cached_properti": 250, "plotting_funct": 250, "deprecated_argu": 250, "module_avail": [250, 290], "handle_progress_bar": 250, "imprint": 250, "softwar": 250, "licens": 250, "click": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "download": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "pyplot": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "num": [252, 255, 257, 264, 265, 269, 270, 271, 279, 284, 297, 301, 311], "set_data": 252, "set_3d_properti": 252, "add_subplot": [252, 267, 278, 282, 286, 297, 299, 301, 302, 303, 304], "set_titl": [252, 257, 264, 265, 266, 270, 271, 275, 277, 278, 279, 280, 281, 283, 286, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 313, 314], "abc": 252, "flowfield": 252, "linestyl": [252, 254, 282, 285, 286, 301, 313], "marker": [252, 259, 260, 267, 269, 275, 286, 295, 296, 300, 301, 306, 309, 310, 314], "set_xlim": [252, 268, 297, 299, 300], "set_ylim": [252, 268, 297, 299, 300, 301], "set_zlim": 252, "blit": [252, 267, 268, 299], "script": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "minut": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "mb": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "plot_abc_flow": [252, 272], "jupyt": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "ipynb": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "galleri": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "sphinx": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "sphinx_gallery_thumbnail_numb": 253, "250": [253, 259, 261, 310], "fig": [253, 254, 257, 259, 260, 264, 265, 267, 268, 271, 277, 278, 281, 282, 283, 284, 297, 299, 303, 304, 306, 307, 310, 311], "subplot": [253, 254, 257, 258, 259, 263, 264, 265, 266, 268, 270, 271, 275, 277, 279, 280, 281, 283, 284, 285, 295, 297, 298, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 313, 314], "agg_backend": [253, 262], "max_fram": 253, "220": [253, 272], "plot_bickley_jet": [253, 272], "bd": 254, "set_xtick": [254, 300], "vline": [254, 285, 313], "zorder": [254, 259, 268, 299, 301, 310], "black": [254, 256, 258, 297, 301, 306, 314], "dash": [254, 282, 286], "hist": [254, 258, 269, 270, 300, 311], "c1": [254, 258, 269, 301, 311], "set_xlabel": [254, 263, 266, 270, 277, 279, 286, 298, 301, 302, 308, 309, 313, 314], "set_ylabel": [254, 263, 266, 270, 277, 279, 286, 298, 301, 302, 308, 309, 314], "bbox_to_anchor": 254, "fancybox": 254, "shadow": 254, "381": [254, 272], "plot_birth_death_chain": [254, 272], "n_eval": 255, "final_tim": 255, "xs": [255, 263, 269, 270, 284, 295, 300, 301, 309, 311], "329": [255, 272], "plot_custom_od": [255, 272], "harmonic_sphere_energi": 256, "ix": [256, 298, 299, 303, 306], "argwher": [256, 302], "dstack": [256, 257, 262, 264, 265, 266, 268, 271, 297, 299, 301, 303, 308, 314], "meshgrid": [256, 257, 260, 262, 264, 265, 266, 268, 271, 286, 297, 299, 301, 303, 304, 308, 309, 314], "reshap": [256, 257, 260, 262, 263, 264, 265, 266, 268, 270, 271, 281, 284, 297, 299, 301, 303, 308, 310, 311, 313, 314], "potential_landscap": 256, "cb": [256, 257, 264, 265, 271, 281, 298, 301, 302, 310, 313, 314], "774": [256, 272], "plot_custom_sd": [256, 272], "splprep": [257, 264, 265, 271], "xint": [257, 264, 265, 271], "yint": [257, 264, 265, 271], "splev": [257, 264, 265, 271], "50000": [257, 264, 265, 271, 275, 305], "stack": [257, 264, 265, 268, 271, 297, 299, 307], "coll": [257, 264, 265, 271], "set_arrai": [257, 264, 265, 271], "set_linewidth": [257, 264, 265, 271], "add_collect": [257, 264, 265, 271], "821": [257, 272], "plot_double_well_2d": [257, 272], "showcas": [258, 295], "dwd": 258, "60": [258, 284, 298], "suptitl": [258, 295, 313], "ndiscret": 258, "edgecolor": [258, 301], "498": [258, 272], "plot_double_well_discret": [258, 272], "74": [259, 284, 299, 310], "cyan": [259, 260, 310], "150": [259, 279, 282, 284, 300, 303, 310, 313, 314], "758": [259, 272], "plot_drunkards_walk": [259, 272], "multivariate_norm": 260, "data_sourc": 260, "rv1": 260, "state_0_mean": 260, "rv2": 260, "state_1_mean": 260, "autoscal": 260, "set_aspect": [260, 265, 280, 286, 297, 298, 299, 309], "568": [260, 272], "plot_ellipsoid": [260, 272], "412": [261, 272], "plot_ornstein_uhlenbeck": [261, 272], "engin": [262, 294], "init_pos_x": 262, "init_pos_i": 262, "400": [262, 285, 313], "plot_pbf": [262, 272], "ax1": [263, 266, 270, 275, 279, 284, 295, 297, 299, 301, 302, 308, 309, 311, 314], "ax2": [263, 266, 270, 275, 279, 295, 297, 299, 301, 302, 308, 309, 314], "550": [263, 272], "plot_prinz": [263, 272], "46": [264, 284], "bwr": [264, 299, 313], "711": [264, 272], "plot_quadruple_wel": [264, 272], "70": [265, 284, 298], "annot": [265, 302, 306], "2f": [265, 299, 301], "xycoord": 265, "xytext": [265, 306], "textcoord": 265, "bbox": [265, 300, 301], "boxstyl": [265, 300, 301], "arrowprop": 265, "arrowstyl": [265, 306, 310], "842": [265, 272], "plot_quadruple_well_asymmetr": [265, 272], "kde_input": [266, 301, 308, 314], "gaussian_kd": [266, 301, 308, 314], "bw_method": [266, 301, 308, 314], "cm": [266, 268, 279, 280, 281, 283, 299, 300, 301, 306, 308, 310, 314], "heatmap": [266, 295, 301, 308, 309, 314], "197": [266, 272, 284], "plot_sqrt_model": [266, 272], "view_init": 267, "elev": 267, "azim": 267, "init_func": 267, "120": [267, 284], "plot_swissroll_model": [267, 272], "viridi": 268, "vmin": [268, 280, 281, 283, 284, 299, 301, 306, 310], "vmax": [268, 280, 281, 283, 284, 299, 301, 306, 310], "scatter_handl": 268, "set_offset": [268, 299], "tp": 268, "227": [268, 272], "69": [268, 284], "plot_time_quintuple_wel": [268, 272], "996": [269, 272], "plot_tmatrix_1d": [269, 272], "ys": [270, 295, 300], "20000": [270, 300], "768": [270, 272], "plot_triple_well_1d": [270, 272], "790": [271, 272], "plot_triple_well_2d": [271, 272], "52": [272, 284], "174": [272, 284], "file": [272, 287, 290, 294, 295], "rossler": [273, 287, 292], "vs": [273, 279, 287, 292, 298, 303], "mho": [274, 279, 303], "chapman_kolmogorov": 274, "173": [274, 284], "complexwarn": [274, 279], "cktest": 274, "traj2": 274, "dtraj2": 274, "models2": 274, "13": [274, 275, 276, 284, 295, 298, 299, 301, 302, 305, 306, 308, 309, 310, 311, 313, 314], "counts_estim": [274, 305], "test_model2": 274, "068": 274, "gaussianmixtur": [275, 295], "rnd": [275, 295], "gmm": [275, 295], "covariance_typ": [275, 295], "weights_": [275, 295], "means_": [275, 295], "covariances_": [275, 295], "hexbin": [275, 295, 298, 309], "354": 275, "plot_clustering_comparison": [275, 287], "traj_concat": 276, "nipy_spectr": 276, "set_label": [276, 298], "884": 276, "plot_energy_surfac": [276, 287], "ITS": 277, "set_yscal": [277, 298], "103": [277, 284], "ev_real": [278, 303], "gs": [278, 286, 297, 299, 301, 302, 303, 304], "add_gridspec": [278, 286, 297, 299, 301, 302, 303, 304], "1st": [278, 297, 304], "2nd": [278, 297, 304], "3rd": [278, 297, 304], "4th": [278, 297, 304], "911": 278, "plot_kcca_bicklei": [278, 287], "nox": 279, "make_doc": 279, "lib": [279, 303], "python3": [279, 303], "site": [279, 288, 303], "asanyarrai": 279, "mpl": [279, 280, 281, 283, 306, 310], "1500": 279, "dtraj_test": 279, "obs_test": 279, "est": 279, "n_mismatch": 279, "assignments_perm": 279, "n_mismatch_perm": 279, "ax3": [279, 301, 302, 309], "ax4": [279, 301], "14": [279, 282, 284, 286, 295, 298, 299, 301, 302, 305, 306, 308, 309, 310, 313, 314], "3f": [279, 302, 310, 313], "ground": [279, 296, 301, 302, 305, 307], "truth": [279, 296, 301, 302, 305, 307], "plot_scatt": 279, "obs_ref": 279, "green": 279, "blue": [279, 281, 306, 310], "scatter1": 279, "get_cmap": [279, 280, 310], "scatter2": 279, "h1": 279, "l1": 279, "legend_el": [279, 301], "h2": 279, "add_artist": [279, 301], "460": 279, "172": [279, 284], "plot_kcca_project": [279, 287], "mpl_toolkit": [280, 283, 310], "axes_grid1": [280, 283, 310], "make_axes_locat": [280, 283, 310], "flatten": [280, 281, 284, 298, 300, 302, 310, 311], "planar_layout": 280, "cax": [280, 283, 310], "append_ax": [280, 283, 310], "scalarmapp": [280, 281, 283, 306, 310], "get_yaxi": 280, "set_vis": [280, 300], "delax": [280, 310], "127": [280, 284, 287], "19": [280, 284, 295, 298, 299, 309, 310, 313, 314], "sharex": [281, 300, 310], "imshow": [281, 300, 310, 313], "nearest": [281, 295, 310], "shrink": [281, 306, 310], "969": 281, "plot_pcca_drunkard": [281, 287], "chaotic": 282, "ve": 282, "novel": [282, 307], "practic": [282, 307, 313], "000": [282, 287], "x2": 282, "preprocess": [282, 307], "polynomialfeatur": [282, 307], "t_train": 282, "x0_train": 282, "x_train": 282, "x_dot_train": 282, "firebrick": 282, "zlabel": 282, "t_test": [282, 307], "x0_test": 282, "x_test": [282, 307], "x_sim": 282, "royalblu": 282, "plot_sindy_rossler_attractor": [282, 287], "home_st": [283, 310], "bar_stat": [283, 310], "copper_r": [283, 310], "thresh": [283, 310], "lognorm": [283, 310], "057": 283, "plot_tpt_gross_net_flux": [283, 287], "umbrella": [284, 293, 311], "tutori": [284, 285, 302], "7e": 284, "51it": 284, "59": [284, 306], "17it": 284, "71": 284, "40it": 284, "6e": [284, 301], "85": [284, 310], "12it": 284, "35it": 284, "92": [284, 310], "53it": 284, "03": [284, 309], "94": 284, "97it": 284, "10it": 284, "98": [284, 310], "90it": 284, "04": [284, 310], "0e": [284, 306], "4e": 284, "107": 284, "70it": 284, "07": 284, "112": 284, "32it": 284, "37": 284, "39": [284, 298, 301, 303, 306, 307, 309, 313], "44it": 284, "9e": 284, "135": 284, "09it": 284, "47it": 284, "67it": 284, "96it": 284, "91it": 284, "136": 284, "39it": 284, "29it": 284, "14it": 284, "74it": 284, "83it": 284, "137": [284, 295], "15it": 284, "66it": 284, "132": 284, "59it": 284, "43": 284, "44": 284, "47": [284, 299, 310], "49": [284, 288], "54": 284, "56": 284, "19it": 284, "57": [284, 310], "61": 284, "62": [284, 303, 310], "63": [284, 310], "64": [284, 308, 310], "65": [284, 310], "67": [284, 310], "04it": 284, "8e": 284, "76": [284, 299, 311], "78": 284, "81": 284, "83": [284, 310], "84": [284, 310], "18it": 284, "86": [284, 299], "87": 284, "88": [284, 299, 310], "91": [284, 300, 310], "31it": 284, "101": 284, "102": 284, "105": 284, "109": 284, "110": 284, "88it": 284, "115": 284, "116": 284, "117": 284, "118": 284, "119": 284, "121": 284, "122": 284, "124": 284, "125": 284, "126": 284, "64it": 284, "130": [284, 310], "133": 284, "138": 284, "140": [284, 293], "27it": 284, "141": 284, "144": 284, "145": 284, "152": 284, "153": 284, "154": 284, "06it": 284, "155": 284, "156": 284, "157": 284, "158": 284, "159": 284, "161": 284, "163": 284, "164": 284, "165": 284, "166": 284, "167": 284, "168": [284, 305], "45it": 284, "169": 284, "170": [284, 301], "171": 284, "175": 284, "176": 284, "177": 284, "178": 284, "180": [284, 299], "182": 284, "21it": 284, "183": 284, "184": 284, "185": 284, "186": 284, "187": 284, "188": 284, "189": 284, "191": 284, "192": 284, "193": 284, "194": 284, "195": 284, "196": 284, "198": 284, "199": 284, "201": 284, "202": 284, "203": 284, "204": 284, "206": 284, "207": 284, "bias_cent": [284, 311], "plot_contour_with_colourbar": 284, "im": [284, 311, 313], "get_bias_funct": 284, "bias_funct": [284, 311], "sample_trajectori": 284, "int32": [284, 298, 311, 312], "biased_energi": [284, 311], "__name__": 284, "__main__": 284, "seen": [284, 308, 313], "btraj": 284, "hamiltonian": 284, "253": 284, "plot_tram": [284, 287], "pbf_simul": [285, 313], "kde_trajectori": [285, 313], "projection_left": [285, 313], "projection_right": [285, 313], "lw": [285, 297, 310], "markers": [285, 307], "672": 285, "plot_vamp_pbf_project": [285, 287], "plot_dominant_compon": 286, "dxy": [286, 309], "quiver": [286, 309], "vamp_project": 286, "dxy_vamp": 286, "tica_project": 286, "dxy_tica": 286, "pca_project": 286, "dxy_pca": 286, "components_": [286, 309], "constrained_layout": [286, 301, 302, 309], "ax_project": 286, "ax_tica": 286, "ax_vamp": 286, "ax_pca": 286, "740": 286, "plot_vamp_vs_tica_vs_pca": [286, 287], "tdg": 288, "mediendienstestaatsvertrag": 288, "institut": 288, "freie": 288, "universit\u00e4t": 288, "arnimalle": 288, "14195": 288, "prof": 288, "dr": 288, "no\u00e9": [288, 303], "contact": 288, "838": 288, "75354": 288, "disclaim": 288, "content": [288, 293, 313], "webteam": 288, "reserv": [288, 294], "topic": 288, "liabil": [288, 294], "claim": [288, 294], "regard": [288, 300, 303], "damag": [288, 294], "incomplet": 288, "incorrect": 288, "reject": 288, "oblig": 288, "partli": 288, "announc": 288, "referr": 288, "hi": 288, "knowlegd": 288, "illeg": 288, "visitor": 288, "author": [288, 294], "liabl": [288, 294], "who": 288, "publish": [288, 294], "discuss": [288, 293], "board": 288, "guestbook": 288, "mailinglist": 288, "copyright": [288, 294], "materi": [288, 294], "sound": 288, "agreement": [288, 298], "legal": 288, "internet": 288, "section": [288, 294, 313], "uninfluenc": 288, "servic": 288, "www": 288, "techniqu": [289, 291, 304, 309], "aid": 289, "particularli": [289, 293], "aspir": 290, "contributor": 290, "familiar": [290, 295, 296, 297, 302, 305, 307, 308, 309, 313, 314], "plan": 290, "meanmodel": 290, "_mean": 290, "inherit": 290, "meanestim": 290, "super": 290, "_model": 290, "mean_model": 290, "projector": 290, "parent": 290, "your_modul": 290, "del": 290, "hard": [290, 310], "pypi": 290, "conda": 290, "doctest": 290, "toplevel": 290, "test_mean_estim": 290, "pytest": 290, "suffic": [290, 291, 302], "numpydoc": 290, "complic": 290, "footcit": 290, "authorofthecomplicatedalgo1988": 290, "footbibliographi": 290, "meth": 290, "citat": 290, "bibtex": 290, "bib": 290, "websit": 290, "readm": 290, "instruct": 290, "compact": [291, 309], "rare": [291, 298, 309], "suffici": [291, 305], "dual": 291, "transpos": 291, "metastabil": 291, "tcca": [291, 313], "vac": 291, "grow": 291, "quadrat": [291, 311], "suit": 291, "aris": [291, 294], "great": [291, 293], "stream": [291, 295], "toi": [291, 313], "easili": [291, 303], "databas": 291, "tree": 291, "stabil": 291, "yusuk": [291, 309], "naritomi": [291, 309], "sotaro": [291, 309], "fuchigami": [291, 309], "fluctuat": [291, 309], "motion": [291, 309, 313], "02b617": [291, 309], "sebastian": 291, "peitz": 291, "niemann": 291, "physica": 291, "phenomena": 291, "406": 291, "132416": 291, "At": 293, "omit": 293, "crucial": [293, 302], "husic": [293, 303, 313], "chronolog": 293, "understand": 293, "flavor": [293, 308], "analys": [293, 310], "overview": 293, "et": 293, "al": 293, "chapter": 293, "book": 293, "valuabl": 293, "resourc": 293, "cardin": 293, "tessel": 293, "goal": [293, 301, 302], "varieti": 293, "brook": [293, 303, 313], "art": 293, "2386": 293, "2396": 293, "797": 293, "busi": 293, "media": 293, "gnu": 294, "lesser": 294, "june": 294, "2007": 294, "foundat": 294, "fsf": 294, "everyon": 294, "verbatim": 294, "incorpor": 294, "supplement": 294, "permiss": 294, "herein": 294, "gpl": 294, "isol": 294, "program": 294, "convei": 294, "facil": 294, "faith": 294, "header": [294, 299], "accessor": 294, "inlin": 294, "templat": [294, 295], "ten": [294, 296], "promin": 294, "accompani": 294, "debug": 294, "among": 294, "recombin": 294, "relink": 294, "manner": 294, "extent": 294, "4d0": 294, "4d1": 294, "uncombin": 294, "revis": 294, "Such": [294, 295], "spirit": 294, "address": 294, "concern": 294, "ever": 294, "proxi": 294, "statement": 294, "perman": 294, "forth": 294, "expressli": 294, "grant": 294, "implic": 294, "estoppel": 294, "accident": 294, "fail": 294, "bring": 294, "issu": 294, "email": 294, "AND": 294, "translat": 294, "pysindi": [294, 307], "dynamicslab": 294, "pyemma": 294, "markovmodel": 294, "mit": 294, "sparsereg": 294, "brian": 294, "silva": 294, "kathleen": 294, "champion": 294, "charg": 294, "person": 294, "merg": 294, "sublicens": 294, "sell": 294, "whom": 294, "furnish": 294, "substanti": 294, "THE": 294, "IS": 294, "AS": 294, "warranti": 294, "OF": 294, "OR": 294, "BUT": 294, "NOT": 294, "TO": 294, "merchant": 294, "FOR": 294, "noninfring": 294, "IN": 294, "NO": 294, "holder": 294, "BE": 294, "contract": 294, "tort": 294, "WITH": 294, "classifi": 295, "simplefilt": 295, "visibl": [295, 309], "500000": 295, "i_1": 295, "i_k": 295, "evid": 295, "highli": [295, 296, 306], "disadvantag": 295, "enough": [295, 306, 311], "clustering_new": 295, "loglog": [295, 298, 314], "costli": 295, "coverag": 295, "shortest": 295, "analog": [295, 308], "mostli": 295, "constantli": 295, "fed": 295, "quicker": 295, "327": 295, "finish": 295, "nice": [295, 302, 306, 314], "hyperparamet": 295, "difficult": 295, "assess": 295, "export": 295, "chebyshev": 295, "infti": [295, 307], "_1": 295, "struct": 295, "maximummetr": 295, "typenam": 295, "const": 295, "size_t": 295, "compute_squar": 295, "helper": [295, 310], "maxnormmodul": 295, "maxnorm": 295, "pybind11": 295, "cpp": 295, "setuptool": 295, "custom_metr": 295, "find_packag": 295, "ext_modul": 295, "languag": 295, "include_dir": 295, "get_includ": 295, "extra_compile_arg": 295, "fopenmp": 295, "openmp": 295, "extra_link_arg": 295, "lgomp": 295, "success": [295, 303], "clustering_custom_metr": 295, "stuart": 295, "lloyd": 295, "quantiz": 295, "pcm": 295, "ieee": [295, 302], "scullei": 295, "web": 295, "19th": 295, "confer": 295, "world": 295, "wide": 295, "1177": 295, "1178": 295, "peopl": [296, 297], "behind": [296, 307], "variant": [296, 303], "studi": [296, 298, 300, 310], "z_m": 296, "z_i": 296, "az_k": 296, "arrang": 296, "y_": 296, "yv": 296, "uw": 296, "remark": 296, "notion": [296, 310, 313], "standard_dmd": 296, "exact_dmd": 296, "_xa": 296, "uu": 296, "orthogon": 296, "imag": [296, 310], "especi": 296, "ax_t": 296, "standard_model": 296, "exact_model": 296, "00003048": 296, "00015445": 296, "traj_standard": 296, "traj_exact": 296, "perfectli": 296, "psi_1": [297, 313], "psi_2": 297, "psi_k": [297, 313], "underdetermin": 297, "dagger": 297, "25000": 297, "deg": 297, "edmd_estim": 297, "edmd_model": 297, "four": [297, 304, 310, 313], "peptid": 298, "exhibit": 298, "room": 298, "dihedr": 298, "angl": 298, "kinteic": 298, "atom": 298, "mdshare": 298, "is_avail": [298, 299, 314], "backend": [298, 299, 308, 314], "cudnn": [298, 299, 308, 314], "set_num_thread": [298, 299, 308, 314], "ala_coords_fil": 298, "3x250n": 298, "heavi": 298, "npz": 298, "working_directori": 298, "fh": 298, "arr_": 298, "dihedral_fil": 298, "backbon": 298, "hb": [298, 309], "mincnt": 298, "n_val": [298, 308, 314], "train_data": [298, 308, 314], "val_data": [298, 308, 314], "random_split": [298, 308, 314], "batchnorm1d": [298, 299], "momentum": 298, "affin": 298, "track_running_stat": 298, "loader_train": [298, 299, 301, 308, 314], "loader_v": [298, 299, 308, 314], "maxi": 298, "zip": [298, 300, 310], "8025465225218795e": 298, "6695964336395264": 298, "1106631013244623e": 298, "7277129888534546": 298, "470411451824475e": 298, "8271698355674744": 298, "245184012077516e": 298, "9025066494941711": 298, "952666444703937e": 298, "8756899833679199": 298, "31223042041529e": 298, "9684250354766846": 298, "argmax": 298, "vamp_estim": [298, 313], "flat": [298, 309], "grai": 298, "vamp_model": 298, "major": 298, "bmsm": [298, 305], "draw_initial_posit": 299, "vstack": 299, "forward_transform": 299, "back_transform": [299, 301], "xinit_train": 299, "traj_train": 299, "xinit_test": 299, "15000": 299, "traj_test": 299, "ipython": [299, 303, 313], "to_html5_video": [299, 303, 313], "browser": [299, 303, 313], "video": [299, 303, 313], "tag": [299, 303, 313], "ds_train": 299, "ds_test": 299, "bw": [299, 301], "57863921": 299, "00563756": 299, "kcca": [299, 301, 303], "plot_singular_funct": 299, "col": [299, 303], "n_iter": 299, "cluster_kcca": 299, "memberships_transform_kcca": 299, "traj_test_backward": 299, "coherence_scor": 299, "membership_transform": 299, "did": [299, 311, 313], "mismatch": [299, 301], "return_count": 299, "plot_mismatch": 299, "ref": 299, "ix_good": 299, "setdiff1d": 299, "assume_uniqu": 299, "score_kcca": 299, "mismatches_kcca": 299, "256": [299, 311], "512": [299, 314], "noisi": 299, "bickleyjet3dtorchd": 299, "ds": 299, "ds_train_3d": 299, "ds_test_3d": 299, "batchsampl": 299, "randomsampl": 299, "sequentialsampl": 299, "collate_fn": 299, "train_sampl": 299, "2048": 299, "drop_last": 299, "val_sampl": 299, "ourselv": 299, "checkpoint": 299, "schedul": 299, "pathlib": 299, "checkpointmanag": 299, "lr_schedul": 299, "reducelronplateau": 299, "checkpoints_dir": 299, "output_dir": 299, "opt": 299, "patienc": 299, "8000": 299, "val_scor": 299, "xval": 299, "yval": 299, "semilogx": [299, 300], "ckpt": 299, "vamp_vampnet": [299, 301], "cluster_vampnet": 299, "memberships_transform_vampnet": 299, "score_vampnet": 299, "mismatches_vampnet": 299, "chirnd": 299, "fan_in": 299, "bias_var": 299, "out_dim": 299, "n_basi": 299, "w2": 299, "b2": 299, "cluster_vamp": 299, "memberships_transform_vamp": 299, "score_vamp": 299, "mismatches_vamp": 299, "cluster_kvad": 299, "memberships_transform_kvad": 299, "score_kvad": 299, "mismatches_kvad": 299, "kvadnets_lob": 299, "epoch_train_scor": 299, "batch_0": 299, "batch_t": 299, "epoch_val_scor": 299, "chi_kvadnet": 299, "cluster_kvadnet": 299, "memberships_transform_kvadnet": 299, "score_kvadnet": 299, "mismatches_kvadnet": 299, "vamp2_scor": 299, "tabul": 299, "88749": 299, "0796252": 299, "8802": 299, "8305": 299, "0762447": 299, "8598": 299, "07734": 299, "0749358": 299, "7622": 299, "75647": 299, "0677209": 299, "738": 299, "6162": 299, "0667439": 299, "7298": 299, "prinz_system": 300, "set_ytick": [300, 301], "nontrivi": 300, "n_eigenfunct": 300, "set1": 300, "finest_cl": 300, "finest_msm": 300, "eig_n": 300, "y0_": 300, "y0": [300, 307], "interp": [300, 309], "lbl": 300, "ev": 300, "facecolor": [300, 301], "white": [300, 301, 310], "verticalalign": [300, 301], "horizontalalign": [300, 301], "fontsiz": [300, 301], "spine": 300, "99e2": 300, "va": 300, "homogen": [301, 313], "binari": 301, "777": 301, "squareroot": 301, "brbg": 301, "legend1": 301, "plot_method": 301, "score_std": 301, "feat": [301, 314], "feat_cc": 301, "vmag": 301, "scatter_s": 301, "xxyi": 301, "array_split": 301, "z00": 301, "clip": [301, 303], "height_ratio": 301, "ax_contour": 301, "levels_fin": 301, "tick": [301, 310], "set_yticklabel": [301, 310], "ix_0": 301, "ix_1": 301, "plasma": 301, "pm": [301, 302], "transax": 301, "n_proj": 301, "count_nonzero": 301, "rescaled_proj": 301, "1f": 301, "acc": 301, "vamp_edmd": 301, "lt": [301, 308, 309], "axessubplot": 301, "gt": [301, 308, 309], "vamp_back": 301, "whitened_traj": 301, "kedmd_transf": 301, "vamp_kedmd": 301, "vamp_kcca": 301, "slsqp": [301, 303], "551e": 301, "000e": 301, "kcca_transform": 301, "multilay": [301, 308, 314], "preceptron": [301, 308], "architectur": [301, 308], "relu": [301, 308, 314], "dtr": 301, "evr": 301, "vamp_msm": 301, "wherea": [302, 306, 307], "oppos": 302, "harder": 302, "belief": 302, "ground_truth": 302, "prefer": 302, "hidden_trajectori": 302, "observation_trajectori": 302, "macrost": [302, 306], "i_hidden": 302, "i_ob": 302, "hidden_ix": 302, "subselected_ob": 302, "obs_ix": 302, "matshow": 302, "xaxi": 302, "set_ticks_posit": 302, "bottom": [302, 303], "tight_layout": [302, 310, 313], "hmm_est_real": 302, "034": 302, "init_hmm_random": 302, "hmm_est_random": 302, "258": 302, "1652": 302, "9913478370843": 302, "1660": 302, "3598109385": 302, "easiest": 302, "ml": [302, 305], "282": [302, 303], "10th": 302, "slash": 302, "errorbar": 302, "xerr": 302, "fmt": 302, "lawrenc": 302, "rabin": 302, "speech": 302, "recognit": 302, "257": 302, "286": 302, "illustr": [303, 304, 306], "multidimension": 303, "trick": 303, "popular": 303, "sup_": 303, "substack": 303, "_y": 303, "simplifi": 303, "auxiliari": 303, "x_j": [303, 304], "guid": [303, 304], "bickley_data": 303, "adapt": 303, "nine": 303, "kcca_estim": 303, "kcca_model": 303, "vortic": 303, "sake": [303, 304], "opt_data": 303, "opt_data_lag": 303, "bw_opt": 303, "eps_opt": 303, "miniconda3": 303, "env": 303, "runtimewarn": 303, "kcca_opt": 303, "matt": 303, "mollenhau": 303, "chao": 303, "5100267": 303, "gari": 303, "froyland": 303, "naratip": 303, "santitissadeekorn": 303, "monahan": 303, "transport": 303, "interdisciplinari": 303, "043116": 303, "3502450": 303, "hilbert": 304, "highlight": [304, 309], "moreov": 304, "implent": 304, "vice": [304, 309, 310, 313], "versa": [304, 309, 310, 313], "hist2d": 304, "2500": 304, "rand": 304, "kedmd_estim": 304, "kedmd_model": 304, "invari": [304, 306], "s_0": 305, "lambda_0": 305, "priori": 305, "p11": 305, "p22": 305, "p33": 305, "true_msm": 305, "97174192": 305, "02825808": 305, "01436794": 305, "97057023": 305, "01506183": 305, "02829029": 305, "97170971": 305, "24913759": 305, "48999019": 305, "26087221": 305, "know": [305, 310], "msm_statdist": 305, "97150033": 305, "02849967": 305, "01424983": 305, "97116296": 305, "0145872": 305, "0291744": 305, "9708256": 305, "statdist": 305, "anyth": 305, "counts_effect": 305, "bmsm_posterior": 305, "evaluat": 305, "stats_p": 305, "stats_timescal": 305, "stats_c": 305, "attach": [305, 310], "stats_mfpt": 305, "fill_between": 305, "alexand": [305, 310], "fischer": [305, 306], "wilhelm": 305, "huisinga": [305, 306], "deuflhard": [305, 306], "hybrid": 305, "mont": 305, "1999": 305, "successor": 306, "crispli": 306, "rainbow": 306, "weaker": 306, "connected": 306, "rigor": 306, "digraph": [306, 310, 312], "add_nod": [306, 310], "add_edg": [306, 310], "get_edge_attribut": [306, 310], "fruchterman_reingold_layout": 306, "draw_networkx_nod": [306, 310], "draw_networkx_label": [306, 310, 312], "get_node_attribut": [306, 310], "draw_networkx_edg": [306, 310], "connectionstyl": [306, 310], "arc3": [306, 310], "rad": [306, 310], "96181851": 306, "03818149": 306, "0283872": 306, "9716128": 306, "disentangl": [306, 308, 314], "42643471": 306, "57356529": 306, "argsort": 306, "xtick": 306, "nearli": 306, "uncoupl": 306, "constitut": 307, "bmatrix": 307, "3x_1x_2": 307, "7x_2": 307, "expans": 307, "ix_2": 307, "vdot": 307, "t_m": 307, "qquad": 307, "theta_": 307, "ell": 307, "theta_i": 307, "theta_3": 307, "x_3": 307, "understood": 307, "xi_1": 307, "xi_2": 307, "xi_n": 307, "xi_i": 307, "2x": 307, "decoupl": 307, "x_0e": 307, "2t": 307, "y_0e": 307, "x_0": 307, "y_0": 307, "tfrac": 307, "workflow": 307, "inspect": 307, "seem": 307, "999": 307, "y_test": 307, "ro": 307, "compress": 308, "life": 308, "downstream": 308, "bit": 308, "thing": [308, 309], "layer": 308, "output_nonlinear": 308, "sigmoid": 308, "initial_batchnorm": 308, "tae_model": 308, "overfit": 308, "semilog": 308, "proj": 308, "line2d": 308, "0x7f5ad72d93d0": 308, "perceptron": [308, 314], "_sequenti": [308, 314], "_to_mu": 308, "_to_logvar": 308, "tvae_model": 308, "diederik": 308, "kingma": 308, "bay": 308, "6114": 308, "ica": 309, "pracitic": 309, "ask": [309, 310], "gap": [309, 313], "signific": 309, "140108282841360": 309, "0x7f6d35359130": 309, "spent": 309, "supersampl": 309, "intens": [309, 310, 313], "frequent": 309, "brighter": 309, "n_interp": 309, "ftraj_interp": 309, "equilibirum": 309, "tica_model": 309, "cf": 309, "61266834": 309, "28280506": 309, "tic": 309, "01713845": 309, "65760997": 309, "tica_model_kinetic_map": 309, "tica_model_commute_map": 309, "koopman_estim": 309, "reweighting_model": 309, "tica_model_reweight": 309, "lev": 309, "davidovich": 309, "landau": 309, "evgenii": 309, "mikhailovich": 309, "lifshitz": 309, "quantum": 309, "relativist": 309, "elsevi": 309, "answer": 310, "trap": 310, "motiv": 310, "overcom": 310, "freeli": 310, "soft": 310, "enter": 310, "darker": 310, "lighter": 310, "imagin": 310, "hill": 310, "question": 310, "man": 310, "he": 310, "law": 310, "tell": 310, "countabl": 310, "c_n": 310, "sum_n": 310, "But": 310, "rise": [310, 313], "bvp": 310, "gradual": 310, "leav": 310, "detour": 310, "tot": 310, "165e": 310, "pi_iq_i": 310, "264e": 310, "7911": 310, "887": 310, "six": 310, "lump": 310, "systemat": [310, 313, 314], "subdivid": 310, "remainder_upp": 310, "remainder_low": 310, "flux_set": 310, "cycl": 310, "lack": 310, "circular_layout": [310, 312], "1100": 310, "draw_networkx_edge_label": 310, "arrows": 310, "s_k": 310, "choosen": 310, "strongest": 310, "mlmsm": 310, "cube": 310, "berezhkovskii": 310, "gerhard": 310, "hummer": 310, "attila": 310, "szabo": 310, "05b614": 310, "doyl": 310, "lauri": 310, "snell": 310, "electr": 310, "1984": 310, "angelo": 310, "valleriani": 310, "circular": 310, "scientif": 310, "dimensionless": 311, "stead": 311, "k_i": 311, "contruct": 311, "biased_potenti": 311, "82456604": 311, "19136811": 311, "piec": 311, "trajectories_shift": 311, "criteria": 311, "maaik": 311, "phd": 311, "_tram": 311, "convergencewarn": 311, "0005462764459391867": 311, "_biased_conf_energi": 311, "bin_numb": 311, "apidoc": 312, "countain": 312, "histogram_valu": 312, "from_numpy_matrix": 312, "create_us": 312, "draw_circular": 312, "node_color": 312, "90ee90": 312, "font_siz": 312, "submodel_explicit": 312, "trace": 312, "ariat": 313, "pproach": 313, "arkov": 313, "rocess": 313, "1935": 313, "w_i": 313, "chi_i": 313, "whitenend": 313, "subcategori": 313, "extern": 313, "salvag": 313, "deficit": 313, "nonoverlap": 313, "8534787431760964": 313, "clearli": 313, "insight": 313, "background": 313, "consult": 313, "g_1": 313, "trasform": 313, "theorem": 313, "sigma_k": 313, "phi_1": 313, "phi_k": 313, "phi_i": 313, "foward": 313, "rho_1": 313, "foremost": 313, "92383913": 313, "02905651": 313, "39412183": 313, "40228095": 313, "40095045": 313, "40235857": 313, "u_i": 313, "g_i": 313, "awar": 313, "hyothet": 313, "avaiabl": 313, "struck": 313, "9238391327369158": 313, "8534787431760968": 313, "7699596561010507": 313, "scaled_model": 313, "disturb": 313, "oscillatori": 313, "_particl": 313, "5600": 313, "1944": 313, "n_sing": 313, "1600": 313, "sigma_2": 313, "forward_ful": 313, "clearer": 313, "middl": 313, "800": 313, "quit": 313, "splash": 313, "forward_component0": 313, "forward_component1": 313, "forward_component0123": 313, "scherer": 313, "moritz": 313, "hoffmann": 313, "194108": 313, "hardwar": 314, "vamp_model_vnet": 314, "vamp_model_direct": 314, "5f": 314, "78799": 314, "28104": 314, "dtraj_rec": 314, "95227187": 314, "04772813": 314, "05229995": 314, "94770005": 314}, "objects": {"deeptime.base": [[0, 0, 1, "", "Dataset"], [1, 0, 1, "", "Estimator"], [2, 0, 1, "", "Model"], [3, 0, 1, "", "Transformer"]], "deeptime.base.Dataset": [[0, 1, 1, "", "setflags"]], "deeptime.base.Estimator": [[1, 1, 1, "", "fetch_model"], [1, 1, 1, "", "fit"], [1, 1, 1, "", "fit_fetch"], [1, 1, 1, "", "get_params"], [1, 2, 1, "", "has_model"], [1, 2, 1, "", "model"], [1, 1, 1, "", "set_params"]], "deeptime.base.Model": [[2, 1, 1, "", "copy"], [2, 1, 1, "", "get_params"], [2, 1, 1, "", "set_params"]], "deeptime.base.Transformer": [[3, 1, 1, "", "__call__"], [3, 1, 1, "", "transform"]], "deeptime": [[237, 3, 0, "-", "basis"], [238, 3, 0, "-", "clustering"], [239, 3, 0, "-", "covariance"], [240, 3, 0, "-", "data"], [241, 3, 0, "-", "decomposition"], [242, 3, 0, "-", "kernels"], [246, 3, 0, "-", "numeric"], [247, 3, 0, "-", "plots"], [248, 3, 0, "-", "sindy"], [249, 3, 0, "-", "util"]], "deeptime.basis": [[4, 0, 1, "", "Concatenation"], [5, 0, 1, "", "Identity"], [6, 0, 1, "", "Monomials"], [7, 0, 1, "", "Observable"]], "deeptime.basis.Concatenation": [[4, 1, 1, "", "__call__"], [4, 1, 1, "", "transform"]], "deeptime.basis.Identity": [[5, 1, 1, "", "__call__"], [5, 1, 1, "", "transform"]], "deeptime.basis.Monomials": [[6, 1, 1, "", "__call__"], [6, 1, 1, "", "get_feature_names"], [6, 1, 1, "", "get_feature_names_out"], [6, 1, 1, "", "transform"]], "deeptime.basis.Observable": [[7, 1, 1, "", "__call__"], [7, 1, 1, "", "transform"]], "deeptime.clustering": [[8, 0, 1, "", "BoxDiscretization"], [9, 0, 1, "", "BoxDiscretizationModel"], [10, 0, 1, "", "ClusterModel"], [11, 0, 1, "", "KMeans"], [12, 0, 1, "", "KMeansModel"], [13, 0, 1, "", "MetricRegistry"], [14, 0, 1, "", "MiniBatchKMeans"], [15, 0, 1, "", "RegularSpace"], [16, 4, 1, "", "kmeans_plusplus"], [17, 5, 1, "", "metrics"]], "deeptime.clustering.BoxDiscretization": [[8, 1, 1, "", "fetch_model"], [8, 1, 1, "", "fit"], [8, 1, 1, "", "fit_fetch"], [8, 1, 1, "", "get_params"], [8, 2, 1, "", "has_model"], [8, 2, 1, "", "model"], [8, 1, 1, "", "set_params"]], "deeptime.clustering.BoxDiscretizationModel": [[9, 1, 1, "", "__call__"], [9, 2, 1, "", "cluster_centers"], [9, 2, 1, "", "converged"], [9, 1, 1, "", "copy"], [9, 1, 1, "", "get_params"], [9, 2, 1, "", "metric"], [9, 2, 1, "", "n_clusters"], [9, 1, 1, "", "set_params"], [9, 1, 1, "", "transform"], [9, 1, 1, "", "transform_onehot"]], "deeptime.clustering.ClusterModel": [[10, 1, 1, "", "__call__"], [10, 2, 1, "", "cluster_centers"], [10, 2, 1, "", "converged"], [10, 1, 1, "", "copy"], [10, 1, 1, "", "get_params"], [10, 2, 1, "", "metric"], [10, 2, 1, "", "n_clusters"], [10, 1, 1, "", "set_params"], [10, 1, 1, "", "transform"]], "deeptime.clustering.KMeans": [[11, 1, 1, "", "__call__"], [11, 1, 1, "", "fetch_model"], [11, 1, 1, "", "fit"], [11, 1, 1, "", "fit_fetch"], [11, 1, 1, "", "fit_transform"], [11, 2, 1, "", "fixed_seed"], [11, 1, 1, "", "get_params"], [11, 2, 1, "", "has_model"], [11, 2, 1, "", "init_strategy"], [11, 2, 1, "", "initial_centers"], [11, 2, 1, "", "max_iter"], [11, 2, 1, "", "metric"], [11, 2, 1, "", "model"], [11, 2, 1, "", "n_clusters"], [11, 2, 1, "", "n_jobs"], [11, 1, 1, "", "set_params"], [11, 2, 1, "", "tolerance"], [11, 1, 1, "", "transform"]], "deeptime.clustering.KMeansModel": [[12, 1, 1, "", "__call__"], [12, 2, 1, "", "cluster_centers"], [12, 2, 1, "", "converged"], [12, 1, 1, "", "copy"], [12, 1, 1, "", "get_params"], [12, 2, 1, "", "inertia"], [12, 2, 1, "", "inertias"], [12, 2, 1, "", "metric"], [12, 2, 1, "", "n_clusters"], [12, 1, 1, "", "score"], [12, 1, 1, "", "set_params"], [12, 2, 1, "", "tolerance"], [12, 1, 1, "", "transform"]], "deeptime.clustering.MetricRegistry": [[13, 2, 1, "", "available"], [13, 1, 1, "", "register"]], "deeptime.clustering.MiniBatchKMeans": [[14, 1, 1, "", "__call__"], [14, 1, 1, "", "fetch_model"], [14, 1, 1, "", "fit"], [14, 1, 1, "", "fit_fetch"], [14, 1, 1, "", "fit_transform"], [14, 2, 1, "", "fixed_seed"], [14, 1, 1, "", "get_params"], [14, 2, 1, "", "has_model"], [14, 2, 1, "", "init_strategy"], [14, 2, 1, "", "initial_centers"], [14, 2, 1, "", "max_iter"], [14, 2, 1, "", "metric"], [14, 2, 1, "", "model"], [14, 2, 1, "", "n_clusters"], [14, 2, 1, "", "n_jobs"], [14, 1, 1, "", "partial_fit"], [14, 1, 1, "", "set_params"], [14, 2, 1, "", "tolerance"], [14, 1, 1, "", "transform"]], "deeptime.clustering.RegularSpace": [[15, 2, 1, "", "dmin"], [15, 1, 1, "", "fetch_model"], [15, 1, 1, "", "fit"], [15, 1, 1, "", "fit_fetch"], [15, 1, 1, "", "get_params"], [15, 2, 1, "", "has_model"], [15, 2, 1, "", "max_centers"], [15, 2, 1, "", "metric"], [15, 2, 1, "", "model"], [15, 2, 1, "", "n_clusters"], [15, 2, 1, "", "n_jobs"], [15, 1, 1, "", "partial_fit"], [15, 1, 1, "", "set_params"]], "deeptime.covariance": [[18, 0, 1, "", "Covariance"], [19, 0, 1, "", "CovarianceModel"], [20, 0, 1, "", "KoopmanWeightingEstimator"], [21, 0, 1, "", "KoopmanWeightingModel"], [221, 0, 1, "", "WhiteningTransform"], [222, 4, 1, "", "covar"], [223, 4, 1, "", "covars"], [224, 4, 1, "", "moments_XX"], [225, 4, 1, "", "moments_XXXY"], [226, 4, 1, "", "moments_block"]], "deeptime.covariance.Covariance": [[18, 2, 1, "", "bessels_correction"], [18, 2, 1, "", "compute_c00"], [18, 2, 1, "", "compute_c0t"], [18, 2, 1, "", "compute_ctt"], [18, 2, 1, "", "diag_only"], [18, 1, 1, "", "fetch_model"], [18, 1, 1, "", "fit"], [18, 1, 1, "", "fit_fetch"], [18, 1, 1, "", "get_params"], [18, 2, 1, "", "has_model"], [18, 2, 1, "", "is_lagged"], [18, 2, 1, "", "lagtime"], [18, 2, 1, "", "model"], [18, 2, 1, "", "ncov"], [18, 1, 1, "", "partial_fit"], [18, 2, 1, "", "remove_data_mean"], [18, 2, 1, "", "reversible"], [18, 1, 1, "", "set_params"], [18, 2, 1, "", "sparse_mode"]], "deeptime.covariance.CovarianceModel": [[19, 2, 1, "", "bessels_correction"], [19, 1, 1, "", "copy"], [19, 2, 1, "", "cov_00"], [19, 2, 1, "", "cov_0t"], [19, 2, 1, "", "cov_tt"], [19, 2, 1, "", "data_mean_removed"], [19, 1, 1, "", "get_params"], [19, 2, 1, "", "lagtime"], [19, 2, 1, "", "mean_0"], [19, 2, 1, "", "mean_t"], [19, 1, 1, "", "set_params"], [19, 2, 1, "", "symmetrized"], [19, 1, 1, "", "whiten"]], "deeptime.covariance.KoopmanWeightingEstimator": [[20, 1, 1, "", "__call__"], [20, 1, 1, "", "fetch_model"], [20, 1, 1, "", "fit"], [20, 1, 1, "", "fit_fetch"], [20, 1, 1, "", "fit_transform"], [20, 1, 1, "", "get_params"], [20, 2, 1, "", "has_model"], [20, 2, 1, "", "lagtime"], [20, 2, 1, "", "model"], [20, 1, 1, "", "partial_fit"], [20, 1, 1, "", "set_params"], [20, 1, 1, "", "transform"]], "deeptime.covariance.KoopmanWeightingModel": [[21, 1, 1, "", "__call__"], [21, 2, 1, "", "const_weight_input"], [21, 1, 1, "", "copy"], [21, 2, 1, "", "covariances"], [21, 1, 1, "", "get_params"], [21, 2, 1, "", "koopman_operator"], [21, 1, 1, "", "set_params"], [21, 1, 1, "", "transform"], [21, 1, 1, "", "weights"], [21, 2, 1, "", "weights_input"], [21, 2, 1, "", "whitening_transformation"]], "deeptime.covariance.WhiteningTransform": [[221, 1, 1, "", "__call__"], [221, 1, 1, "", "transform"]], "deeptime.data": [[227, 0, 1, "", "BickleyJet"], [228, 0, 1, "", "BirthDeathChain"], [229, 0, 1, "", "CustomSystem"], [230, 0, 1, "", "DoubleWellDiscrete"], [231, 0, 1, "", "DrunkardsWalk"], [232, 0, 1, "", "Ellipsoids"], [233, 0, 1, "", "PBFSimulator"], [234, 0, 1, "", "TimeDependentSystem"], [235, 0, 1, "", "TimeIndependentSystem"], [22, 4, 1, "", "abc_flow"], [23, 4, 1, "", "bickley_jet"], [24, 4, 1, "", "birth_death_chain"], [25, 4, 1, "", "custom_ode"], [26, 4, 1, "", "custom_sde"], [27, 4, 1, "", "double_well_2d"], [28, 4, 1, "", "double_well_discrete"], [29, 4, 1, "", "drunkards_walk"], [30, 4, 1, "", "ellipsoids"], [31, 4, 1, "", "ornstein_uhlenbeck"], [32, 4, 1, "", "position_based_fluids"], [33, 4, 1, "", "prinz_potential"], [34, 4, 1, "", "quadruple_well"], [35, 4, 1, "", "quadruple_well_asymmetric"], [36, 4, 1, "", "sqrt_model"], [37, 4, 1, "", "swissroll_model"], [38, 4, 1, "", "time_dependent_quintuple_well"], [39, 4, 1, "", "tmatrix_metropolis1d"], [40, 4, 1, "", "triple_well_1d"], [41, 4, 1, "", "triple_well_2d"]], "deeptime.data.BickleyJet": [[227, 2, 1, "", "L0"], [227, 2, 1, "", "U0"], [227, 1, 1, "", "__call__"], [227, 1, 1, "", "apply_periodic_boundary_conditions"], [227, 2, 1, "", "c"], [227, 2, 1, "", "dimension"], [227, 2, 1, "", "eps"], [227, 2, 1, "", "f"], [227, 1, 1, "", "generate"], [227, 2, 1, "", "h"], [227, 2, 1, "", "has_potential_function"], [227, 2, 1, "", "integrator"], [227, 2, 1, "", "k"], [227, 2, 1, "", "n_steps"], [227, 2, 1, "", "periodic_bc"], [227, 1, 1, "", "potential"], [227, 2, 1, "", "r0"], [227, 2, 1, "", "time_dependent"], [227, 1, 1, "", "to_3d"], [227, 1, 1, "", "trajectory"], [227, 2, 1, "", "vectorized_f"]], "deeptime.data.BirthDeathChain": [[228, 1, 1, "", "committor_backward"], [228, 1, 1, "", "committor_forward"], [228, 1, 1, "", "flux"], [228, 2, 1, "", "msm"], [228, 1, 1, "", "netflux"], [228, 1, 1, "", "rate"], [228, 2, 1, "", "stationary_distribution"], [228, 1, 1, "", "totalflux"], [228, 2, 1, "", "transition_matrix"]], "deeptime.data.CustomSystem": [[229, 1, 1, "", "__call__"], [229, 2, 1, "", "dimension"], [229, 2, 1, "", "f"], [229, 2, 1, "", "h"], [229, 2, 1, "", "has_potential_function"], [229, 2, 1, "", "integrator"], [229, 2, 1, "", "n_steps"], [229, 1, 1, "", "potential"], [229, 2, 1, "", "time_dependent"], [229, 1, 1, "", "trajectory"], [229, 2, 1, "", "vectorized_f"]], "deeptime.data.DoubleWellDiscrete": [[230, 2, 1, "", "analytic_msm"], [230, 2, 1, "", "dtraj"], [230, 1, 1, "", "dtraj_n"], [230, 1, 1, "", "dtraj_n2"], [230, 2, 1, "", "dtraj_n2bad"], [230, 2, 1, "", "dtraj_n2good"], [230, 2, 1, "", "dtraj_n6good"], [230, 1, 1, "", "simulate_trajectories"], [230, 1, 1, "", "simulate_trajectory"], [230, 2, 1, "", "transition_matrix"]], "deeptime.data.DrunkardsWalk": [[231, 1, 1, "", "add_barrier"], [231, 1, 1, "", "coordinate_to_state"], [231, 1, 1, "", "is_valid_coordinate"], [231, 2, 1, "", "msm"], [231, 1, 1, "", "plot_2d_map"], [231, 1, 1, "", "plot_network"], [231, 1, 1, "", "plot_path"], [231, 1, 1, "", "state_to_coordinate"], [231, 1, 1, "", "walk"]], "deeptime.data.Ellipsoids": [[232, 2, 1, "", "covariance_matrix"], [232, 1, 1, "", "discrete_trajectory"], [232, 1, 1, "", "map_discrete_to_observations"], [232, 2, 1, "", "msm"], [232, 1, 1, "", "observations"], [232, 2, 1, "", "random_state"], [232, 2, 1, "", "seed"]], "deeptime.data.PBFSimulator": [[233, 2, 1, "", "domain_size"], [233, 1, 1, "", "make_animation"], [233, 2, 1, "", "n_particles"], [233, 1, 1, "", "run"], [233, 1, 1, "", "simulate_oscillatory_force"], [233, 1, 1, "", "transform_to_density"]], "deeptime.data.TimeDependentSystem": [[234, 1, 1, "", "__call__"], [234, 2, 1, "", "dimension"], [234, 2, 1, "", "f"], [234, 2, 1, "", "h"], [234, 2, 1, "", "has_potential_function"], [234, 2, 1, "", "integrator"], [234, 2, 1, "", "n_steps"], [234, 1, 1, "", "potential"], [234, 2, 1, "", "time_dependent"], [234, 1, 1, "", "trajectory"], [234, 2, 1, "", "vectorized_f"]], "deeptime.data.TimeIndependentSystem": [[235, 1, 1, "", "__call__"], [235, 2, 1, "", "dimension"], [235, 2, 1, "", "f"], [235, 2, 1, "", "h"], [235, 2, 1, "", "has_potential_function"], [235, 2, 1, "", "integrator"], [235, 2, 1, "", "n_steps"], [235, 1, 1, "", "potential"], [235, 2, 1, "", "time_dependent"], [235, 1, 1, "", "trajectory"], [235, 2, 1, "", "vectorized_f"]], "deeptime.decomposition": [[42, 0, 1, "", "CovarianceKoopmanModel"], [43, 0, 1, "", "DMD"], [44, 0, 1, "", "DMDModel"], [45, 0, 1, "", "EDMD"], [46, 0, 1, "", "EDMDModel"], [47, 0, 1, "", "KVAD"], [48, 0, 1, "", "KVADModel"], [49, 0, 1, "", "KernelCCA"], [50, 0, 1, "", "KernelCCAModel"], [51, 0, 1, "", "KernelEDMD"], [52, 0, 1, "", "KernelEDMDModel"], [53, 0, 1, "", "TICA"], [54, 0, 1, "", "TransferOperatorModel"], [55, 0, 1, "", "VAMP"], [56, 4, 1, "", "blocksplit_trajs"], [57, 4, 1, "", "cvsplit_trajs"], [71, 4, 1, "", "vamp_score"], [72, 4, 1, "", "vamp_score_cv"], [73, 4, 1, "", "vamp_score_data"]], "deeptime.decomposition.CovarianceKoopmanModel": [[42, 1, 1, "", "__call__"], [42, 1, 1, "", "backward"], [42, 1, 1, "", "ck_test"], [42, 1, 1, "", "copy"], [42, 2, 1, "", "cov"], [42, 2, 1, "", "cov_00"], [42, 2, 1, "", "cov_0t"], [42, 2, 1, "", "cov_tt"], [42, 2, 1, "", "cumulative_kinetic_variance"], [42, 2, 1, "", "dim"], [42, 1, 1, "", "effective_output_dimension"], [42, 2, 1, "", "epsilon"], [42, 1, 1, "", "expectation"], [42, 2, 1, "", "feature_component_correlation"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_params"], [42, 2, 1, "", "instantaneous_coefficients"], [42, 2, 1, "", "instantaneous_obs"], [42, 2, 1, "", "koopman_matrix"], [42, 2, 1, "", "lagtime"], [42, 2, 1, "", "mean_0"], [42, 2, 1, "", "mean_t"], [42, 2, 1, "", "operator"], [42, 2, 1, "", "operator_inverse"], [42, 2, 1, "", "output_dimension"], [42, 1, 1, "", "propagate"], [42, 2, 1, "", "scaling"], [42, 1, 1, "", "score"], [42, 1, 1, "", "set_params"], [42, 2, 1, "", "singular_values"], [42, 2, 1, "", "singular_vectors_left"], [42, 2, 1, "", "singular_vectors_right"], [42, 2, 1, "", "timelagged_coefficients"], [42, 2, 1, "", "timelagged_obs"], [42, 1, 1, "", "timescales"], [42, 1, 1, "", "transform"], [42, 2, 1, "", "var_cutoff"], [42, 2, 1, "", "whitening_rank_0"], [42, 2, 1, "", "whitening_rank_t"]], "deeptime.decomposition.DMD": [[43, 1, 1, "", "__call__"], [43, 6, 1, "", "available_drivers"], [43, 6, 1, "", "available_modes"], [43, 1, 1, "", "fetch_model"], [43, 1, 1, "", "fit"], [43, 1, 1, "", "fit_fetch"], [43, 1, 1, "", "fit_transform"], [43, 1, 1, "", "get_params"], [43, 2, 1, "", "has_model"], [43, 2, 1, "", "model"], [43, 1, 1, "", "set_params"], [43, 1, 1, "", "transform"]], "deeptime.decomposition.DMDModel": [[44, 1, 1, "", "__call__"], [44, 1, 1, "", "copy"], [44, 1, 1, "", "get_params"], [44, 1, 1, "", "set_params"], [44, 1, 1, "", "transform"]], "deeptime.decomposition.EDMD": [[45, 1, 1, "", "__call__"], [45, 6, 1, "", "available_operators"], [45, 1, 1, "", "fetch_model"], [45, 1, 1, "", "fit"], [45, 1, 1, "", "fit_fetch"], [45, 1, 1, "", "fit_transform"], [45, 1, 1, "", "get_params"], [45, 2, 1, "", "has_model"], [45, 2, 1, "", "model"], [45, 1, 1, "", "set_params"], [45, 1, 1, "", "transform"]], "deeptime.decomposition.EDMDModel": [[46, 1, 1, "", "__call__"], [46, 1, 1, "", "backward"], [46, 1, 1, "", "copy"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_params"], [46, 2, 1, "", "instantaneous_obs"], [46, 2, 1, "", "koopman_matrix"], [46, 2, 1, "", "operator"], [46, 2, 1, "", "operator_inverse"], [46, 2, 1, "", "output_dimension"], [46, 1, 1, "", "set_params"], [46, 2, 1, "", "timelagged_obs"], [46, 1, 1, "", "transform"]], "deeptime.decomposition.KVAD": [[47, 1, 1, "", "__call__"], [47, 2, 1, "", "dim"], [47, 2, 1, "", "epsilon"], [47, 1, 1, "", "fetch_model"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_fetch"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "get_params"], [47, 2, 1, "", "has_model"], [47, 2, 1, "", "model"], [47, 2, 1, "", "observable_transform"], [47, 1, 1, "", "set_params"], [47, 1, 1, "", "transform"]], "deeptime.decomposition.KVADModel": [[48, 1, 1, "", "__call__"], [48, 1, 1, "", "backward"], [48, 1, 1, "", "copy"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_params"], [48, 2, 1, "", "instantaneous_obs"], [48, 2, 1, "", "koopman_matrix"], [48, 2, 1, "", "operator"], [48, 2, 1, "", "operator_inverse"], [48, 2, 1, "", "output_dimension"], [48, 1, 1, "", "set_params"], [48, 2, 1, "", "timelagged_obs"], [48, 1, 1, "", "transform"]], "deeptime.decomposition.KernelCCA": [[49, 1, 1, "", "fetch_model"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "fit_fetch"], [49, 1, 1, "", "get_params"], [49, 2, 1, "", "has_model"], [49, 2, 1, "", "model"], [49, 1, 1, "", "set_params"]], "deeptime.decomposition.KernelCCAModel": [[50, 1, 1, "", "__call__"], [50, 1, 1, "", "backward"], [50, 1, 1, "", "copy"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_params"], [50, 2, 1, "", "instantaneous_obs"], [50, 2, 1, "", "kernel"], [50, 2, 1, "", "koopman_matrix"], [50, 2, 1, "", "operator"], [50, 2, 1, "", "operator_inverse"], [50, 2, 1, "", "output_dimension"], [50, 1, 1, "", "set_params"], [50, 2, 1, "", "timelagged_obs"], [50, 1, 1, "", "transform"]], "deeptime.decomposition.KernelEDMD": [[51, 1, 1, "", "__call__"], [51, 1, 1, "", "fetch_model"], [51, 1, 1, "", "fit"], [51, 1, 1, "", "fit_fetch"], [51, 1, 1, "", "fit_transform"], [51, 1, 1, "", "get_params"], [51, 2, 1, "", "has_model"], [51, 2, 1, "", "model"], [51, 1, 1, "", "set_params"], [51, 1, 1, "", "transform"]], "deeptime.decomposition.KernelEDMDModel": [[52, 1, 1, "", "__call__"], [52, 1, 1, "", "backward"], [52, 1, 1, "", "copy"], [52, 1, 1, "", "forward"], [52, 1, 1, "", "get_params"], [52, 2, 1, "", "instantaneous_obs"], [52, 2, 1, "", "koopman_matrix"], [52, 2, 1, "", "operator"], [52, 2, 1, "", "operator_inverse"], [52, 2, 1, "", "output_dimension"], [52, 1, 1, "", "set_params"], [52, 2, 1, "", "timelagged_obs"], [52, 1, 1, "", "transform"]], "deeptime.decomposition.TICA": [[53, 1, 1, "", "__call__"], [53, 1, 1, "", "chapman_kolmogorov_validator"], [53, 1, 1, "", "covariance_estimator"], [53, 2, 1, "", "dim"], [53, 2, 1, "", "epsilon"], [53, 1, 1, "", "fetch_model"], [53, 1, 1, "", "fit"], [53, 1, 1, "", "fit_fetch"], [53, 1, 1, "", "fit_from_covariances"], [53, 1, 1, "", "fit_from_timeseries"], [53, 1, 1, "", "fit_transform"], [53, 1, 1, "", "get_params"], [53, 2, 1, "", "has_model"], [53, 2, 1, "", "lagtime"], [53, 2, 1, "", "model"], [53, 1, 1, "", "partial_fit"], [53, 2, 1, "", "scaling"], [53, 1, 1, "", "set_params"], [53, 1, 1, "", "transform"], [53, 2, 1, "", "var_cutoff"]], "deeptime.decomposition.TransferOperatorModel": [[54, 1, 1, "", "__call__"], [54, 1, 1, "", "backward"], [54, 1, 1, "", "copy"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "get_params"], [54, 2, 1, "", "instantaneous_obs"], [54, 2, 1, "", "koopman_matrix"], [54, 2, 1, "", "operator"], [54, 2, 1, "", "operator_inverse"], [54, 2, 1, "", "output_dimension"], [54, 1, 1, "", "set_params"], [54, 2, 1, "", "timelagged_obs"], [54, 1, 1, "", "transform"]], "deeptime.decomposition.VAMP": [[55, 1, 1, "", "__call__"], [55, 1, 1, "", "chapman_kolmogorov_validator"], [55, 1, 1, "", "covariance_estimator"], [55, 2, 1, "", "dim"], [55, 2, 1, "", "epsilon"], [55, 1, 1, "", "fetch_model"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "fit_fetch"], [55, 1, 1, "", "fit_from_covariances"], [55, 1, 1, "", "fit_from_timeseries"], [55, 1, 1, "", "fit_transform"], [55, 1, 1, "", "get_params"], [55, 2, 1, "", "has_model"], [55, 2, 1, "", "lagtime"], [55, 2, 1, "", "model"], [55, 1, 1, "", "partial_fit"], [55, 2, 1, "", "scaling"], [55, 1, 1, "", "set_params"], [55, 1, 1, "", "transform"], [55, 2, 1, "", "var_cutoff"]], "deeptime.decomposition.deep": [[58, 0, 1, "", "TAE"], [59, 0, 1, "", "TAEModel"], [60, 0, 1, "", "TVAE"], [61, 0, 1, "", "TVAEEncoder"], [62, 0, 1, "", "TVAEModel"], [63, 0, 1, "", "VAMPNet"], [64, 0, 1, "", "VAMPNetModel"], [65, 4, 1, "", "covariances"], [66, 4, 1, "", "koopman_matrix"], [67, 4, 1, "", "kvad_score"], [68, 4, 1, "", "sym_inverse"], [69, 4, 1, "", "vamp_score"], [70, 4, 1, "", "vampnet_loss"]], "deeptime.decomposition.deep.TAE": [[58, 1, 1, "", "__call__"], [58, 2, 1, "", "device"], [58, 2, 1, "", "dtype"], [58, 1, 1, "", "evaluate_loss"], [58, 1, 1, "", "fetch_model"], [58, 1, 1, "", "fit"], [58, 1, 1, "", "fit_fetch"], [58, 1, 1, "", "fit_transform"], [58, 1, 1, "", "get_params"], [58, 2, 1, "", "has_model"], [58, 2, 1, "", "learning_rate"], [58, 2, 1, "", "model"], [58, 2, 1, "", "optimizer"], [58, 1, 1, "", "set_params"], [58, 1, 1, "", "setup_optimizer"], [58, 2, 1, "", "train_losses"], [58, 1, 1, "", "transform"], [58, 2, 1, "", "validation_losses"]], "deeptime.decomposition.deep.TAEModel": [[59, 1, 1, "", "__call__"], [59, 1, 1, "", "copy"], [59, 2, 1, "", "decoder"], [59, 2, 1, "", "encoder"], [59, 1, 1, "", "get_params"], [59, 1, 1, "", "set_params"], [59, 1, 1, "", "transform"]], "deeptime.decomposition.deep.TVAE": [[60, 1, 1, "", "__call__"], [60, 2, 1, "", "device"], [60, 2, 1, "", "dtype"], [60, 1, 1, "", "evaluate_loss"], [60, 1, 1, "", "fetch_model"], [60, 1, 1, "", "fit"], [60, 1, 1, "", "fit_fetch"], [60, 1, 1, "", "fit_transform"], [60, 1, 1, "", "get_params"], [60, 2, 1, "", "has_model"], [60, 2, 1, "", "learning_rate"], [60, 2, 1, "", "model"], [60, 2, 1, "", "optimizer"], [60, 1, 1, "", "set_params"], [60, 1, 1, "", "setup_optimizer"], [60, 2, 1, "", "train_losses"], [60, 1, 1, "", "transform"], [60, 2, 1, "", "validation_losses"]], "deeptime.decomposition.deep.TVAEEncoder": [[61, 1, 1, "", "__call__"], [61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "deeptime.decomposition.deep.TVAEModel": [[62, 1, 1, "", "__call__"], [62, 1, 1, "", "copy"], [62, 2, 1, "", "decoder"], [62, 2, 1, "", "encoder"], [62, 1, 1, "", "get_params"], [62, 1, 1, "", "set_params"], [62, 1, 1, "", "transform"]], "deeptime.decomposition.deep.VAMPNet": [[63, 1, 1, "", "__call__"], [63, 2, 1, "", "device"], [63, 2, 1, "", "dtype"], [63, 2, 1, "", "epsilon"], [63, 1, 1, "", "fetch_model"], [63, 1, 1, "", "fit"], [63, 1, 1, "", "fit_fetch"], [63, 1, 1, "", "fit_transform"], [63, 1, 1, "", "get_params"], [63, 2, 1, "", "has_model"], [63, 2, 1, "", "learning_rate"], [63, 2, 1, "", "lobe"], [63, 2, 1, "", "lobe_timelagged"], [63, 2, 1, "", "model"], [63, 2, 1, "", "optimizer"], [63, 1, 1, "", "partial_fit"], [63, 2, 1, "", "score_method"], [63, 1, 1, "", "set_params"], [63, 1, 1, "", "setup_optimizer"], [63, 2, 1, "", "train_scores"], [63, 1, 1, "", "transform"], [63, 1, 1, "", "validate"], [63, 2, 1, "", "validation_scores"]], "deeptime.decomposition.deep.VAMPNetModel": [[64, 1, 1, "", "__call__"], [64, 1, 1, "", "copy"], [64, 1, 1, "", "get_params"], [64, 2, 1, "", "lobe"], [64, 2, 1, "", "lobe_timelagged"], [64, 1, 1, "", "set_params"], [64, 1, 1, "", "transform"]], "deeptime.kernels": [[74, 0, 1, "", "GaussianKernel"], [75, 0, 1, "", "GeneralizedGaussianKernel"], [76, 0, 1, "", "Kernel"], [77, 0, 1, "", "LaplacianKernel"], [78, 0, 1, "", "PolynomialKernel"], [79, 0, 1, "", "TorchGaussianKernel"], [80, 4, 1, "", "is_torch_kernel"]], "deeptime.kernels.GaussianKernel": [[74, 1, 1, "", "__call__"], [74, 1, 1, "", "apply"], [74, 1, 1, "", "gram"], [74, 2, 1, "", "sigma"], [74, 6, 1, "", "valid_impls"]], "deeptime.kernels.GeneralizedGaussianKernel": [[75, 1, 1, "", "__call__"], [75, 1, 1, "", "apply"], [75, 1, 1, "", "gram"]], "deeptime.kernels.Kernel": [[76, 1, 1, "", "__call__"], [76, 1, 1, "", "apply"], [76, 1, 1, "", "gram"]], "deeptime.kernels.LaplacianKernel": [[77, 1, 1, "", "__call__"], [77, 1, 1, "", "apply"], [77, 1, 1, "", "gram"]], "deeptime.kernels.PolynomialKernel": [[78, 1, 1, "", "__call__"], [78, 1, 1, "", "apply"], [78, 1, 1, "", "gram"]], "deeptime.kernels.TorchGaussianKernel": [[79, 1, 1, "", "__call__"], [79, 1, 1, "", "apply"], [79, 1, 1, "", "gram"], [79, 2, 1, "", "sigma"], [79, 6, 1, "", "valid_impls"]], "deeptime.markov": [[81, 0, 1, "", "PCCAModel"], [82, 0, 1, "", "ReactiveFlux"], [83, 0, 1, "", "TransitionCountEstimator"], [84, 0, 1, "", "TransitionCountModel"], [85, 4, 1, "", "compute_connected_sets"], [86, 4, 1, "", "compute_dtrajs_effective"], [87, 4, 1, "", "compute_effective_stride"], [88, 4, 1, "", "count_states"], [112, 4, 1, "", "number_of_states"], [113, 4, 1, "", "pcca"], [114, 4, 1, "", "reactive_flux"]], "deeptime.markov.PCCAModel": [[81, 2, 1, "", "assignments"], [81, 2, 1, "", "coarse_grained_stationary_probability"], [81, 2, 1, "", "coarse_grained_transition_matrix"], [81, 1, 1, "", "copy"], [81, 1, 1, "", "get_params"], [81, 2, 1, "", "memberships"], [81, 2, 1, "", "metastable_distributions"], [81, 2, 1, "", "n_metastable"], [81, 1, 1, "", "set_params"], [81, 2, 1, "", "sets"]], "deeptime.markov.ReactiveFlux": [[82, 2, 1, "", "backward_committor"], [82, 1, 1, "", "coarse_grain"], [82, 1, 1, "", "copy"], [82, 2, 1, "", "forward_committor"], [82, 1, 1, "", "get_params"], [82, 2, 1, "", "gross_flux"], [82, 2, 1, "", "intermediate_states"], [82, 1, 1, "", "major_flux"], [82, 2, 1, "", "mfpt"], [82, 2, 1, "", "n_states"], [82, 2, 1, "", "net_flux"], [82, 1, 1, "", "pathways"], [82, 2, 1, "", "rate"], [82, 1, 1, "", "set_params"], [82, 2, 1, "", "source_states"], [82, 2, 1, "", "stationary_distribution"], [82, 2, 1, "", "target_states"], [82, 2, 1, "", "total_flux"]], "deeptime.markov.TransitionCountEstimator": [[83, 1, 1, "", "__call__"], [83, 1, 1, "", "count"], [83, 2, 1, "", "count_mode"], [83, 1, 1, "", "fetch_model"], [83, 1, 1, "", "fit"], [83, 1, 1, "", "fit_fetch"], [83, 1, 1, "", "fit_transform"], [83, 1, 1, "", "get_params"], [83, 2, 1, "", "has_model"], [83, 2, 1, "", "lagtime"], [83, 2, 1, "", "model"], [83, 2, 1, "", "n_states"], [83, 1, 1, "", "set_params"], [83, 2, 1, "", "sparse"], [83, 1, 1, "", "transform"]], "deeptime.markov.TransitionCountModel": [[84, 1, 1, "", "connected_sets"], [84, 1, 1, "", "copy"], [84, 2, 1, "", "count_matrix"], [84, 2, 1, "", "count_matrix_full"], [84, 1, 1, "", "count_matrix_histogram"], [84, 2, 1, "", "counting_mode"], [84, 1, 1, "", "get_params"], [84, 1, 1, "", "is_connected"], [84, 2, 1, "", "is_full_model"], [84, 2, 1, "", "lagtime"], [84, 2, 1, "", "n_states"], [84, 2, 1, "", "n_states_full"], [84, 2, 1, "", "selected_count_fraction"], [84, 2, 1, "", "selected_state_fraction"], [84, 1, 1, "", "set_params"], [84, 2, 1, "", "state_histogram"], [84, 2, 1, "", "state_histogram_full"], [84, 2, 1, "", "state_symbols"], [84, 2, 1, "", "state_symbols_with_blank"], [84, 2, 1, "", "states"], [84, 1, 1, "", "states_to_symbols"], [84, 1, 1, "", "submodel"], [84, 1, 1, "", "submodel_largest"], [84, 1, 1, "", "symbols_to_states"], [84, 2, 1, "", "total_count"], [84, 1, 1, "", "transform_discrete_trajectories_to_submodel"], [84, 2, 1, "", "visited_set"]], "deeptime.markov.hmm": [[89, 0, 1, "", "BayesianHMM"], [90, 0, 1, "", "BayesianHMMPosterior"], [91, 0, 1, "", "DiscreteOutputModel"], [92, 0, 1, "", "GaussianOutputModel"], [93, 0, 1, "", "HiddenMarkovModel"], [94, 0, 1, "", "MaximumLikelihoodHMM"], [95, 0, 1, "", "OutputModel"]], "deeptime.markov.hmm.BayesianHMM": [[89, 1, 1, "", "chapman_kolmogorov_validator"], [89, 1, 1, "", "default"], [89, 1, 1, "", "fetch_model"], [89, 1, 1, "", "fit"], [89, 1, 1, "", "fit_fetch"], [89, 1, 1, "", "get_params"], [89, 2, 1, "", "has_model"], [89, 2, 1, "", "initial_distribution_prior"], [89, 2, 1, "", "initial_hmm"], [89, 2, 1, "", "model"], [89, 2, 1, "", "n_samples"], [89, 2, 1, "", "reversible"], [89, 1, 1, "", "set_params"], [89, 2, 1, "", "stationary"], [89, 2, 1, "", "store_hidden"], [89, 2, 1, "", "transition_matrix_prior"]], "deeptime.markov.hmm.BayesianHMMPosterior": [[90, 1, 1, "", "ck_test"], [90, 1, 1, "", "copy"], [90, 1, 1, "", "evaluate_samples"], [90, 1, 1, "", "gather_stats"], [90, 1, 1, "", "get_params"], [90, 2, 1, "", "hidden_state_trajectories_samples"], [90, 2, 1, "", "lagtime"], [90, 2, 1, "", "prior"], [90, 2, 1, "", "samples"], [90, 1, 1, "", "set_params"], [90, 1, 1, "", "submodel"], [90, 1, 1, "", "submodel_largest"], [90, 1, 1, "", "submodel_populous"], [90, 1, 1, "", "timescales"]], "deeptime.markov.hmm.DiscreteOutputModel": [[91, 1, 1, "", "copy"], [91, 1, 1, "", "fit"], [91, 1, 1, "", "generate_observation_trajectory"], [91, 1, 1, "", "get_params"], [91, 2, 1, "", "ignore_outliers"], [91, 1, 1, "", "map_observations_to_submodel"], [91, 2, 1, "", "n_hidden_states"], [91, 2, 1, "", "n_observable_states"], [91, 1, 1, "", "normalize"], [91, 2, 1, "", "output_probabilities"], [91, 2, 1, "", "prior"], [91, 1, 1, "", "sample"], [91, 1, 1, "", "set_params"], [91, 1, 1, "", "submodel"], [91, 1, 1, "", "to_state_probability_trajectory"]], "deeptime.markov.hmm.GaussianOutputModel": [[92, 1, 1, "", "copy"], [92, 1, 1, "", "fit"], [92, 1, 1, "", "generate_observation_trajectory"], [92, 1, 1, "", "get_params"], [92, 2, 1, "", "ignore_outliers"], [92, 2, 1, "", "means"], [92, 2, 1, "", "n_hidden_states"], [92, 2, 1, "", "n_observable_states"], [92, 1, 1, "", "sample"], [92, 1, 1, "", "set_params"], [92, 2, 1, "", "sigmas"], [92, 1, 1, "", "submodel"], [92, 1, 1, "", "to_state_probability_trajectory"]], "deeptime.markov.hmm.HiddenMarkovModel": [[93, 1, 1, "", "ck_test"], [93, 1, 1, "", "collect_observations_in_state"], [93, 1, 1, "", "compute_observation_likelihood"], [93, 1, 1, "", "compute_viterbi_paths"], [93, 1, 1, "", "copy"], [93, 1, 1, "", "correlation_obs"], [93, 2, 1, "", "count_model"], [93, 2, 1, "", "eigenvectors_left_obs"], [93, 2, 1, "", "eigenvectors_right_obs"], [93, 1, 1, "", "expectation_obs"], [93, 1, 1, "", "fingerprint_correlation_obs"], [93, 1, 1, "", "fingerprint_relaxation_obs"], [93, 1, 1, "", "get_params"], [93, 2, 1, "", "hidden_state_trajectories"], [93, 2, 1, "", "initial_count"], [93, 2, 1, "", "initial_distribution"], [93, 2, 1, "", "lagtime"], [93, 2, 1, "", "lifetimes"], [93, 2, 1, "", "likelihood"], [93, 2, 1, "", "likelihoods"], [93, 2, 1, "", "metastable_assignments"], [93, 2, 1, "", "metastable_distributions"], [93, 2, 1, "", "metastable_memberships"], [93, 2, 1, "", "metastable_sets"], [93, 2, 1, "", "n_hidden_states"], [93, 2, 1, "", "n_observation_states"], [93, 1, 1, "", "nonempty_obs"], [93, 2, 1, "", "observation_symbols"], [93, 2, 1, "", "observation_symbols_full"], [93, 2, 1, "", "output_model"], [93, 2, 1, "", "output_probabilities"], [93, 1, 1, "", "propagate"], [93, 1, 1, "", "relaxation_obs"], [93, 1, 1, "", "sample_by_observation_probabilities"], [93, 1, 1, "", "set_params"], [93, 1, 1, "", "simulate"], [93, 2, 1, "", "state_probabilities"], [93, 1, 1, "", "states_largest"], [93, 1, 1, "", "states_populous"], [93, 2, 1, "", "stationary_distribution_obs"], [93, 2, 1, "", "stride"], [93, 1, 1, "", "submodel"], [93, 1, 1, "", "submodel_disconnect"], [93, 1, 1, "", "submodel_largest"], [93, 1, 1, "", "submodel_populous"], [93, 1, 1, "", "timescales"], [93, 1, 1, "", "transform_discrete_trajectories_to_observed_symbols"], [93, 2, 1, "", "transition_counts"], [93, 1, 1, "", "transition_matrix_obs"], [93, 2, 1, "", "transition_model"]], "deeptime.markov.hmm.MaximumLikelihoodHMM": [[94, 2, 1, "", "accuracy"], [94, 1, 1, "", "chapman_kolmogorov_validator"], [94, 1, 1, "", "fetch_model"], [94, 1, 1, "", "fit"], [94, 1, 1, "", "fit_fetch"], [94, 2, 1, "", "fixed_initial_distribution"], [94, 2, 1, "", "fixed_stationary_distribution"], [94, 1, 1, "", "get_params"], [94, 2, 1, "", "has_model"], [94, 2, 1, "", "initial_model"], [94, 2, 1, "", "lagtime"], [94, 2, 1, "", "maxit"], [94, 2, 1, "", "maxit_reversible"], [94, 2, 1, "", "model"], [94, 2, 1, "", "n_hidden_states"], [94, 2, 1, "", "reversible"], [94, 1, 1, "", "set_params"], [94, 2, 1, "", "stationary"], [94, 2, 1, "", "stride"]], "deeptime.markov.hmm.OutputModel": [[95, 1, 1, "", "copy"], [95, 1, 1, "", "fit"], [95, 1, 1, "", "generate_observation_trajectory"], [95, 1, 1, "", "get_params"], [95, 2, 1, "", "ignore_outliers"], [95, 2, 1, "", "n_hidden_states"], [95, 2, 1, "", "n_observable_states"], [95, 1, 1, "", "sample"], [95, 1, 1, "", "set_params"], [95, 1, 1, "", "submodel"], [95, 1, 1, "", "to_state_probability_trajectory"]], "deeptime.markov.hmm.init.discrete": [[96, 4, 1, "", "metastable_from_data"], [97, 4, 1, "", "metastable_from_msm"], [98, 4, 1, "", "random_guess"]], "deeptime.markov.hmm.init.gaussian": [[99, 4, 1, "", "from_data"]], "deeptime.markov.msm": [[100, 0, 1, "", "AugmentedMSM"], [101, 0, 1, "", "AugmentedMSMEstimator"], [102, 0, 1, "", "BayesianMSM"], [103, 0, 1, "", "BayesianMSMPosterior"], [104, 0, 1, "", "KoopmanReweightedMSM"], [105, 0, 1, "", "MarkovStateModel"], [106, 0, 1, "", "MarkovStateModelCollection"], [107, 0, 1, "", "MaximumLikelihoodMSM"], [108, 0, 1, "", "OOMReweightedMSM"], [109, 0, 1, "", "TRAM"], [110, 0, 1, "", "TRAMDataset"], [111, 0, 1, "", "TRAMModel"]], "deeptime.markov.msm.AugmentedMSM": [[100, 1, 1, "", "ck_test"], [100, 1, 1, "", "committor_backward"], [100, 1, 1, "", "committor_forward"], [100, 1, 1, "", "compute_state_indices"], [100, 1, 1, "", "compute_trajectory_weights"], [100, 1, 1, "", "copy"], [100, 1, 1, "", "correlation"], [100, 2, 1, "", "count_model"], [100, 1, 1, "", "eigenvalues"], [100, 1, 1, "", "eigenvectors_left"], [100, 1, 1, "", "eigenvectors_right"], [100, 2, 1, "", "empirical_koopman_model"], [100, 1, 1, "", "expectation"], [100, 1, 1, "", "fingerprint_correlation"], [100, 1, 1, "", "fingerprint_relaxation"], [100, 1, 1, "", "get_params"], [100, 2, 1, "", "has_count_model"], [100, 1, 1, "", "hmm"], [100, 2, 1, "", "is_real"], [100, 2, 1, "", "koopman_model"], [100, 2, 1, "", "lagtime"], [100, 1, 1, "", "mfpt"], [100, 2, 1, "", "n_eigenvalues"], [100, 2, 1, "", "n_states"], [100, 2, 1, "", "ncv"], [100, 2, 1, "", "optimizer_state"], [100, 1, 1, "", "pcca"], [100, 1, 1, "", "propagate"], [100, 1, 1, "", "reactive_flux"], [100, 1, 1, "", "relaxation"], [100, 2, 1, "", "reversible"], [100, 1, 1, "", "score"], [100, 1, 1, "", "set_params"], [100, 1, 1, "", "simulate"], [100, 2, 1, "", "sparse"], [100, 2, 1, "", "stationary"], [100, 2, 1, "", "stationary_distribution"], [100, 1, 1, "", "submodel"], [100, 1, 1, "", "timescales"], [100, 1, 1, "", "to_koopman_model"], [100, 2, 1, "", "transition_matrix"], [100, 2, 1, "", "transition_matrix_tolerance"], [100, 1, 1, "", "update_stationary_distribution"], [100, 1, 1, "", "update_transition_matrix"]], "deeptime.markov.msm.AugmentedMSMEstimator": [[101, 2, 1, "", "convergence_criterion_lagrange"], [101, 1, 1, "", "estimator_from_feature_trajectories"], [101, 2, 1, "", "expectations_by_state"], [101, 2, 1, "", "experimental_measurement_weights"], [101, 2, 1, "", "experimental_measurements"], [101, 1, 1, "", "fetch_model"], [101, 1, 1, "", "fit"], [101, 1, 1, "", "fit_fetch"], [101, 1, 1, "", "get_params"], [101, 2, 1, "", "has_model"], [101, 2, 1, "", "max_cache"], [101, 2, 1, "", "maxiter"], [101, 2, 1, "", "model"], [101, 2, 1, "", "reversible"], [101, 1, 1, "", "set_params"], [101, 2, 1, "", "sparse"], [101, 2, 1, "", "support_confidence"], [101, 2, 1, "", "uncertainties"]], "deeptime.markov.msm.BayesianMSM": [[102, 1, 1, "", "chapman_kolmogorov_validator"], [102, 1, 1, "", "fetch_model"], [102, 1, 1, "", "fit"], [102, 1, 1, "", "fit_fetch"], [102, 1, 1, "", "fit_from_counts"], [102, 1, 1, "", "fit_from_discrete_timeseries"], [102, 1, 1, "", "fit_from_msm"], [102, 1, 1, "", "get_params"], [102, 2, 1, "", "has_model"], [102, 2, 1, "", "model"], [102, 2, 1, "", "reversible"], [102, 1, 1, "", "sample"], [102, 1, 1, "", "set_params"], [102, 2, 1, "", "sparse"], [102, 2, 1, "", "stationary_distribution_constraint"]], "deeptime.markov.msm.BayesianMSMPosterior": [[103, 1, 1, "", "ck_test"], [103, 1, 1, "", "copy"], [103, 1, 1, "", "evaluate_samples"], [103, 1, 1, "", "gather_stats"], [103, 1, 1, "", "get_params"], [103, 2, 1, "", "lagtime"], [103, 2, 1, "", "prior"], [103, 2, 1, "", "samples"], [103, 1, 1, "", "set_params"], [103, 1, 1, "", "submodel"], [103, 1, 1, "", "timescales"]], "deeptime.markov.msm.KoopmanReweightedMSM": [[104, 1, 1, "", "ck_test"], [104, 1, 1, "", "committor_backward"], [104, 1, 1, "", "committor_forward"], [104, 1, 1, "", "compute_state_indices"], [104, 1, 1, "", "compute_trajectory_weights"], [104, 1, 1, "", "copy"], [104, 1, 1, "", "correlation"], [104, 2, 1, "", "count_model"], [104, 1, 1, "", "eigenvalues"], [104, 1, 1, "", "eigenvectors_left"], [104, 1, 1, "", "eigenvectors_right"], [104, 2, 1, "", "empirical_koopman_model"], [104, 1, 1, "", "expectation"], [104, 1, 1, "", "fingerprint_correlation"], [104, 1, 1, "", "fingerprint_relaxation"], [104, 1, 1, "", "get_params"], [104, 2, 1, "", "has_count_model"], [104, 1, 1, "", "hmm"], [104, 2, 1, "", "is_real"], [104, 2, 1, "", "koopman_model"], [104, 2, 1, "", "lagtime"], [104, 1, 1, "", "mfpt"], [104, 2, 1, "", "n_eigenvalues"], [104, 2, 1, "", "n_states"], [104, 2, 1, "", "ncv"], [104, 2, 1, "", "oom_components"], [104, 2, 1, "", "oom_eigenvalues"], [104, 2, 1, "", "oom_evaluator"], [104, 2, 1, "", "oom_information_state_vector"], [104, 2, 1, "", "oom_rank"], [104, 2, 1, "", "oom_timescales"], [104, 1, 1, "", "pcca"], [104, 1, 1, "", "propagate"], [104, 1, 1, "", "reactive_flux"], [104, 1, 1, "", "relaxation"], [104, 2, 1, "", "reversible"], [104, 1, 1, "", "score"], [104, 1, 1, "", "set_params"], [104, 1, 1, "", "simulate"], [104, 2, 1, "", "sparse"], [104, 2, 1, "", "stationary"], [104, 2, 1, "", "stationary_distribution"], [104, 1, 1, "", "submodel"], [104, 1, 1, "", "timescales"], [104, 1, 1, "", "to_koopman_model"], [104, 2, 1, "", "transition_matrix"], [104, 2, 1, "", "transition_matrix_tolerance"], [104, 2, 1, "", "twostep_count_matrices"], [104, 1, 1, "", "update_stationary_distribution"], [104, 1, 1, "", "update_transition_matrix"]], "deeptime.markov.msm.MarkovStateModel": [[105, 1, 1, "", "ck_test"], [105, 1, 1, "", "committor_backward"], [105, 1, 1, "", "committor_forward"], [105, 1, 1, "", "compute_state_indices"], [105, 1, 1, "", "compute_trajectory_weights"], [105, 1, 1, "", "copy"], [105, 1, 1, "", "correlation"], [105, 2, 1, "", "count_model"], [105, 1, 1, "", "eigenvalues"], [105, 1, 1, "", "eigenvectors_left"], [105, 1, 1, "", "eigenvectors_right"], [105, 2, 1, "", "empirical_koopman_model"], [105, 1, 1, "", "expectation"], [105, 1, 1, "", "fingerprint_correlation"], [105, 1, 1, "", "fingerprint_relaxation"], [105, 1, 1, "", "get_params"], [105, 2, 1, "", "has_count_model"], [105, 1, 1, "", "hmm"], [105, 2, 1, "", "is_real"], [105, 2, 1, "", "koopman_model"], [105, 2, 1, "", "lagtime"], [105, 1, 1, "", "mfpt"], [105, 2, 1, "", "n_eigenvalues"], [105, 2, 1, "", "n_states"], [105, 2, 1, "", "ncv"], [105, 1, 1, "", "pcca"], [105, 1, 1, "", "propagate"], [105, 1, 1, "", "reactive_flux"], [105, 1, 1, "", "relaxation"], [105, 2, 1, "", "reversible"], [105, 1, 1, "", "score"], [105, 1, 1, "", "set_params"], [105, 1, 1, "", "simulate"], [105, 2, 1, "", "sparse"], [105, 2, 1, "", "stationary"], [105, 2, 1, "", "stationary_distribution"], [105, 1, 1, "", "submodel"], [105, 1, 1, "", "timescales"], [105, 1, 1, "", "to_koopman_model"], [105, 2, 1, "", "transition_matrix"], [105, 2, 1, "", "transition_matrix_tolerance"], [105, 1, 1, "", "update_stationary_distribution"], [105, 1, 1, "", "update_transition_matrix"]], "deeptime.markov.msm.MarkovStateModelCollection": [[106, 1, 1, "", "ck_test"], [106, 1, 1, "", "committor_backward"], [106, 1, 1, "", "committor_forward"], [106, 1, 1, "", "compute_state_indices"], [106, 1, 1, "", "compute_trajectory_weights"], [106, 1, 1, "", "copy"], [106, 1, 1, "", "correlation"], [106, 2, 1, "", "count_fraction"], [106, 2, 1, "", "count_fractions"], [106, 2, 1, "", "count_model"], [106, 2, 1, "", "current_model"], [106, 1, 1, "", "eigenvalues"], [106, 1, 1, "", "eigenvectors_left"], [106, 1, 1, "", "eigenvectors_right"], [106, 2, 1, "", "empirical_koopman_model"], [106, 1, 1, "", "expectation"], [106, 1, 1, "", "fingerprint_correlation"], [106, 1, 1, "", "fingerprint_relaxation"], [106, 1, 1, "", "get_params"], [106, 2, 1, "", "has_count_model"], [106, 1, 1, "", "hmm"], [106, 2, 1, "", "is_real"], [106, 2, 1, "", "koopman_model"], [106, 2, 1, "", "lagtime"], [106, 1, 1, "", "mfpt"], [106, 2, 1, "", "n_connected_msms"], [106, 2, 1, "", "n_eigenvalues"], [106, 2, 1, "", "n_states"], [106, 2, 1, "", "ncv"], [106, 1, 1, "", "pcca"], [106, 1, 1, "", "propagate"], [106, 1, 1, "", "reactive_flux"], [106, 1, 1, "", "relaxation"], [106, 2, 1, "", "reversible"], [106, 1, 1, "", "score"], [106, 1, 1, "", "select"], [106, 1, 1, "", "set_params"], [106, 1, 1, "", "simulate"], [106, 2, 1, "", "sparse"], [106, 2, 1, "", "state_fraction"], [106, 2, 1, "", "state_fractions"], [106, 1, 1, "", "state_symbols"], [106, 2, 1, "", "stationary"], [106, 2, 1, "", "stationary_distribution"], [106, 1, 1, "", "submodel"], [106, 1, 1, "", "timescales"], [106, 1, 1, "", "to_koopman_model"], [106, 2, 1, "", "transition_matrix"], [106, 2, 1, "", "transition_matrix_tolerance"], [106, 1, 1, "", "update_stationary_distribution"], [106, 1, 1, "", "update_transition_matrix"]], "deeptime.markov.msm.MaximumLikelihoodMSM": [[107, 2, 1, "", "allow_disconnected"], [107, 1, 1, "", "chapman_kolmogorov_validator"], [107, 1, 1, "", "fetch_model"], [107, 1, 1, "", "fit"], [107, 1, 1, "", "fit_fetch"], [107, 1, 1, "", "fit_from_counts"], [107, 1, 1, "", "fit_from_discrete_timeseries"], [107, 1, 1, "", "get_params"], [107, 2, 1, "", "has_model"], [107, 2, 1, "", "model"], [107, 2, 1, "", "reversible"], [107, 1, 1, "", "set_params"], [107, 2, 1, "", "sparse"], [107, 2, 1, "", "stationary_distribution_constraint"]], "deeptime.markov.msm.OOMReweightedMSM": [[108, 1, 1, "", "fetch_model"], [108, 1, 1, "", "fit"], [108, 1, 1, "", "fit_fetch"], [108, 1, 1, "", "get_params"], [108, 2, 1, "", "has_model"], [108, 2, 1, "", "model"], [108, 2, 1, "", "reversible"], [108, 1, 1, "", "set_params"], [108, 2, 1, "", "sparse"]], "deeptime.markov.msm.TRAM": [[109, 1, 1, "", "fetch_model"], [109, 1, 1, "", "fit"], [109, 1, 1, "", "fit_fetch"], [109, 1, 1, "", "get_params"], [109, 2, 1, "", "has_model"], [109, 2, 1, "", "model"], [109, 2, 1, "", "reversible"], [109, 1, 1, "", "set_params"], [109, 2, 1, "", "sparse"]], "deeptime.markov.msm.TRAMDataset": [[110, 1, 1, "", "check_against_model"], [110, 6, 1, "", "connectivity_options"], [110, 2, 1, "", "n_markov_states"], [110, 2, 1, "", "n_therm_states"], [110, 1, 1, "", "restrict_to_largest_connected_set"], [110, 1, 1, "", "restrict_to_submodel"], [110, 1, 1, "", "setflags"], [110, 2, 1, "", "state_counts"], [110, 2, 1, "", "tram_input"], [110, 2, 1, "", "transition_counts"]], "deeptime.markov.msm.TRAMModel": [[111, 2, 1, "", "biased_conf_energies"], [111, 1, 1, "", "compute_PMF"], [111, 1, 1, "", "compute_log_likelihood"], [111, 1, 1, "", "compute_observable"], [111, 1, 1, "", "compute_sample_weights_log"], [111, 1, 1, "", "copy"], [111, 1, 1, "", "get_params"], [111, 2, 1, "", "lagrangian_mult_log"], [111, 2, 1, "", "markov_state_energies"], [111, 2, 1, "", "modified_state_counts_log"], [111, 2, 1, "", "msm_collection"], [111, 1, 1, "", "set_params"], [111, 2, 1, "", "therm_state_energies"]], "deeptime.markov.sample": [[115, 4, 1, "", "compute_index_states"], [116, 4, 1, "", "indices_by_distribution"], [117, 4, 1, "", "indices_by_sequence"], [118, 4, 1, "", "indices_by_state"]], "deeptime.markov.tools": [[245, 3, 0, "-", "analysis"], [245, 3, 0, "-", "estimation"], [245, 3, 0, "-", "flux"]], "deeptime.markov.tools.analysis": [[119, 4, 1, "", "committor"], [120, 4, 1, "", "committor_sensitivity"], [121, 4, 1, "", "correlation"], [122, 4, 1, "", "eigenvalue_sensitivity"], [123, 4, 1, "", "eigenvalues"], [124, 4, 1, "", "eigenvector_sensitivity"], [125, 4, 1, "", "eigenvectors"], [126, 4, 1, "", "expectation"], [127, 4, 1, "", "expectation_sensitivity"], [128, 4, 1, "", "expected_counts"], [129, 4, 1, "", "expected_counts_stationary"], [130, 4, 1, "", "fingerprint_correlation"], [131, 4, 1, "", "fingerprint_relaxation"], [132, 4, 1, "", "hitting_probability"], [133, 4, 1, "", "is_connected"], [134, 4, 1, "", "is_rate_matrix"], [135, 4, 1, "", "is_reversible"], [136, 4, 1, "", "is_transition_matrix"], [137, 4, 1, "", "mfpt"], [138, 4, 1, "", "mfpt_sensitivity"], [139, 4, 1, "", "pcca_memberships"], [140, 4, 1, "", "rdl_decomposition"], [141, 4, 1, "", "relaxation"], [142, 4, 1, "", "stationary_distribution"], [143, 4, 1, "", "stationary_distribution_sensitivity"], [144, 4, 1, "", "timescale_sensitivity"], [145, 4, 1, "", "timescales"]], "deeptime.markov.tools.estimation": [[146, 4, 1, "", "bootstrap_counts"], [147, 4, 1, "", "bootstrap_trajectories"], [148, 4, 1, "", "connected_sets"], [149, 4, 1, "", "count_matrix"], [150, 4, 1, "", "error_perturbation"], [151, 4, 1, "", "is_connected"], [152, 4, 1, "", "largest_connected_set"], [153, 4, 1, "", "largest_connected_submatrix"], [154, 4, 1, "", "log_likelihood"], [155, 4, 1, "", "prior_const"], [156, 4, 1, "", "prior_neighbor"], [157, 4, 1, "", "prior_rev"], [158, 4, 1, "", "rate_matrix"], [159, 4, 1, "", "tmatrix_cov"], [160, 4, 1, "", "tmatrix_sampler"], [161, 4, 1, "", "transition_matrix"]], "deeptime.markov.tools.flux": [[162, 4, 1, "", "coarsegrain"], [163, 4, 1, "", "flux_consumers"], [164, 4, 1, "", "flux_matrix"], [165, 4, 1, "", "flux_producers"], [166, 4, 1, "", "flux_production"], [167, 4, 1, "", "mfpt"], [168, 4, 1, "", "pathways"], [169, 4, 1, "", "rate"], [170, 4, 1, "", "to_netflux"], [171, 4, 1, "", "total_flux"]], "deeptime.numeric": [[172, 7, 1, "", "ZeroRankError"], [173, 4, 1, "", "drop_nan_rows"], [174, 4, 1, "", "eig_corr"], [175, 4, 1, "", "eigs"], [176, 4, 1, "", "is_diagonal_matrix"], [177, 4, 1, "", "is_square_matrix"], [178, 4, 1, "", "schatten_norm"], [179, 4, 1, "", "sort_eigs"], [180, 4, 1, "", "spd_eig"], [181, 4, 1, "", "spd_inv"], [182, 4, 1, "", "spd_inv_split"], [183, 4, 1, "", "spd_inv_sqrt"], [184, 4, 1, "", "spd_truncated_svd"]], "deeptime.numeric.ZeroRankError": [[172, 1, 1, "", "with_traceback"]], "deeptime.plots": [[185, 0, 1, "", "Energy2dPlot"], [186, 0, 1, "", "Network"], [187, 4, 1, "", "plot_adjacency"], [188, 4, 1, "", "plot_ck_test"], [189, 4, 1, "", "plot_energy2d"], [190, 4, 1, "", "plot_flux"], [191, 4, 1, "", "plot_implied_timescales"], [192, 4, 1, "", "plot_markov_model"]], "deeptime.plots.Network": [[186, 2, 1, "", "adjacency_matrix"], [186, 2, 1, "", "bounds"], [186, 2, 1, "", "cmap"], [186, 2, 1, "", "d_x"], [186, 2, 1, "", "d_y"], [186, 2, 1, "", "edge_base_scale"], [186, 1, 1, "", "edge_label"], [186, 2, 1, "", "edge_labels"], [186, 2, 1, "", "n_nodes"], [186, 2, 1, "", "node_sizes"], [186, 1, 1, "", "plot"], [186, 2, 1, "", "pos"], [186, 2, 1, "", "state_colors"], [186, 2, 1, "", "state_labels"], [186, 2, 1, "", "state_sizes"]], "deeptime.sindy": [[193, 0, 1, "", "SINDy"], [194, 0, 1, "", "SINDyModel"], [195, 0, 1, "", "STLSQ"]], "deeptime.sindy.SINDy": [[193, 1, 1, "", "fetch_model"], [193, 1, 1, "", "fit"], [193, 1, 1, "", "fit_fetch"], [193, 1, 1, "", "get_params"], [193, 2, 1, "", "has_model"], [193, 2, 1, "", "model"], [193, 1, 1, "", "set_params"]], "deeptime.sindy.SINDyModel": [[194, 2, 1, "", "coefficients"], [194, 1, 1, "", "copy"], [194, 1, 1, "", "equations"], [194, 1, 1, "", "get_params"], [194, 2, 1, "", "intercept"], [194, 1, 1, "", "predict"], [194, 1, 1, "", "print"], [194, 1, 1, "", "score"], [194, 1, 1, "", "set_params"], [194, 1, 1, "", "simulate"], [194, 1, 1, "", "transform"]], "deeptime.sindy.STLSQ": [[195, 1, 1, "", "fit"], [195, 1, 1, "", "get_params"], [195, 1, 1, "", "predict"], [195, 1, 1, "", "score"], [195, 1, 1, "", "set_params"]], "deeptime.util": [[196, 0, 1, "", "EnergyLandscape2d"], [197, 0, 1, "", "QuantityStatistics"], [200, 4, 1, "", "confidence_interval"], [210, 4, 1, "", "energy2d"]], "deeptime.util.EnergyLandscape2d": [[196, 1, 1, "", "plot"]], "deeptime.util.QuantityStatistics": [[197, 2, 1, "", "L"], [197, 2, 1, "", "R"], [197, 1, 1, "", "gather"], [197, 2, 1, "", "mean"], [197, 2, 1, "", "std"]], "deeptime.util.callbacks": [[198, 0, 1, "", "ProgressCallback"], [199, 4, 1, "", "supports_progress_interface"]], "deeptime.util.callbacks.ProgressCallback": [[198, 1, 1, "", "__call__"]], "deeptime.util.data": [[201, 0, 1, "", "ConcatDataset"], [202, 0, 1, "", "TimeLaggedConcatDataset"], [203, 0, 1, "", "TimeLaggedDataset"], [204, 0, 1, "", "TrajectoriesDataset"], [205, 0, 1, "", "TrajectoryDataset"], [206, 4, 1, "", "timeshifted_split"]], "deeptime.util.data.ConcatDataset": [[201, 1, 1, "", "setflags"], [201, 2, 1, "", "subsets"]], "deeptime.util.data.TimeLaggedConcatDataset": [[202, 1, 1, "", "setflags"], [202, 2, 1, "", "subsets"]], "deeptime.util.data.TimeLaggedDataset": [[203, 1, 1, "", "astype"], [203, 2, 1, "", "data"], [203, 2, 1, "", "data_lagged"], [203, 1, 1, "", "setflags"]], "deeptime.util.data.TrajectoriesDataset": [[204, 1, 1, "", "from_numpy"], [204, 2, 1, "", "lagtime"], [204, 1, 1, "", "setflags"], [204, 2, 1, "", "subsets"], [204, 2, 1, "", "trajectories"]], "deeptime.util.data.TrajectoryDataset": [[205, 1, 1, "", "astype"], [205, 2, 1, "", "data"], [205, 2, 1, "", "data_lagged"], [205, 1, 1, "", "from_trajectories"], [205, 1, 1, "", "setflags"]], "deeptime.util.decorators": [[207, 0, 1, "", "cached_property"], [208, 4, 1, "", "deprecated_argument"], [209, 4, 1, "", "plotting_function"]], "deeptime.util.decorators.cached_property": [[207, 1, 1, "", "deleter"], [207, 1, 1, "", "getter"], [207, 1, 1, "", "setter"]], "deeptime.util.parallel": [[211, 4, 1, "", "handle_n_jobs"]], "deeptime.util.platform": [[212, 4, 1, "", "handle_progress_bar"], [213, 4, 1, "", "module_available"]], "deeptime.util.types": [[214, 4, 1, "", "atleast_nd"], [215, 4, 1, "", "is_timelagged_dataset"], [216, 4, 1, "", "to_dataset"]], "deeptime.util.validation": [[217, 0, 1, "", "ChapmanKolmogorovTest"], [218, 0, 1, "", "ImpliedTimescales"], [219, 4, 1, "", "ck_test"], [220, 4, 1, "", "implied_timescales"]], "deeptime.util.validation.ChapmanKolmogorovTest": [[217, 2, 1, "", "err_est"], [217, 2, 1, "", "estimates"], [217, 2, 1, "", "estimates_samples"], [217, 2, 1, "", "has_errors"], [217, 2, 1, "", "lagtimes"], [217, 1, 1, "", "plot"], [217, 2, 1, "", "predictions"], [217, 2, 1, "", "predictions_samples"]], "deeptime.util.validation.ImpliedTimescales": [[218, 2, 1, "", "has_samples"], [218, 2, 1, "", "lagtimes"], [218, 2, 1, "", "max_n_processes"], [218, 2, 1, "", "max_n_samples"], [218, 2, 1, "", "n_lagtimes"], [218, 1, 1, "", "n_samples"], [218, 1, 1, "", "plot"], [218, 1, 1, "", "samples_for_process"], [218, 1, 1, "", "timescales_for_process"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:function", "5": "py:data", "6": "py:attribute", "7": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 185, 186, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 217, 218, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235], "dataset": [0, 251, 260, 301], "estim": [1, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 238, 239, 241, 243, 244, 245, 248, 290, 302, 313], "model": [2, 238, 239, 241, 243, 244, 248, 249, 254, 266, 267, 279, 293, 301, 302], "transform": [3, 279, 290], "concaten": 4, "ident": 5, "monomi": 6, "observ": 7, "boxdiscret": 8, "boxdiscretizationmodel": 9, "clustermodel": 10, "kmean": 11, "kmeansmodel": 12, "metricregistri": 13, "minibatchkmean": 14, "regularspac": 15, "function": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 80, 85, 86, 87, 88, 96, 97, 98, 99, 112, 113, 114, 115, 116, 117, 118, 123, 125, 133, 134, 135, 136, 140, 142, 145, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 199, 200, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 222, 223, 224, 225, 226, 238], "kmeans_plusplu": 16, "data": [17, 240, 249, 279], "metric": [17, 238, 295], "covari": [18, 65, 239], "covariancemodel": 19, "koopmanweightingestim": 20, "koopmanweightingmodel": 21, "abc_flow": 22, "bickley_jet": 23, "birth_death_chain": 24, "custom_od": 25, "custom_sd": 26, "double_well_2d": 27, "double_well_discret": 28, "drunkards_walk": 29, "ellipsoid": [30, 232, 260], "ornstein_uhlenbeck": 31, "position_based_fluid": 32, "prinz_potenti": 33, "quadruple_wel": 34, "quadruple_well_asymmetr": 35, "sqrt_model": 36, "swissroll_model": 37, "time_dependent_quintuple_wel": 38, "tmatrix_metropolis1d": 39, "triple_well_1d": 40, "triple_well_2d": 41, "covariancekoopmanmodel": 42, "dmd": [43, 296], "dmdmodel": 44, "edmd": [45, 297, 301, 304], "edmdmodel": 46, "kvad": [47, 299], "kvadmodel": 48, "kernelcca": 49, "kernelccamodel": 50, "kerneledmd": 51, "kerneledmdmodel": 52, "tica": [53, 286, 301, 309], "transferoperatormodel": 54, "vamp": [55, 285, 286, 299, 301, 303, 313], "blocksplit_traj": 56, "cvsplit_traj": 57, "tae": 58, "taemodel": 59, "tvae": 60, "tvaeencod": 61, "tvaemodel": 62, "vampnet": [63, 298, 299, 301, 314], "vampnetmodel": 64, "koopman_matrix": 66, "kvad_scor": 67, "sym_invers": 68, "vamp_scor": [69, 71], "vampnet_loss": 70, "vamp_score_cv": 72, "vamp_score_data": 73, "gaussiankernel": 74, "generalizedgaussiankernel": 75, "kernel": [76, 242, 278, 279, 299, 301, 303, 304], "laplaciankernel": 77, "polynomialkernel": 78, "torchgaussiankernel": 79, "is_torch_kernel": 80, "pccamodel": 81, "reactiveflux": 82, "transitioncountestim": 83, "transitioncountmodel": 84, "compute_connected_set": 85, "compute_dtrajs_effect": 86, "compute_effective_strid": 87, "count_stat": 88, "bayesianhmm": 89, "bayesianhmmposterior": 90, "discreteoutputmodel": 91, "gaussianoutputmodel": 92, "hiddenmarkovmodel": 93, "maximumlikelihoodhmm": 94, "outputmodel": 95, "metastable_from_data": 96, "metastable_from_msm": 97, "random_guess": 98, "from_data": 99, "augmentedmsm": 100, "augmentedmsmestim": 101, "bayesianmsm": 102, "bayesianmsmposterior": 103, "koopmanreweightedmsm": 104, "markovstatemodel": 105, "markovstatemodelcollect": 106, "maximumlikelihoodmsm": 107, "oomreweightedmsm": 108, "tram": [109, 284, 311], "tramdataset": 110, "trammodel": 111, "number_of_st": 112, "pcca": [113, 245, 281, 306], "reactive_flux": 114, "compute_index_st": 115, "indices_by_distribut": 116, "indices_by_sequ": 117, "indices_by_st": 118, "deeptim": [119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 307], "markov": [119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 243, 244, 245, 293, 301, 302], "tool": [119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 243, 245, 246], "analysi": [119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 243, 245], "committor": [119, 245, 310], "committor_sensit": 120, "correl": 121, "eigenvalue_sensit": 122, "eigenvalu": [123, 246], "eigenvector_sensit": 124, "eigenvector": [125, 309], "expect": [126, 245], "expectation_sensit": 127, "expected_count": 128, "expected_counts_stationari": 129, "fingerprint_correl": 130, "fingerprint_relax": 131, "hitting_prob": 132, "is_connect": [133, 151], "is_rate_matrix": 134, "is_revers": 135, "is_transition_matrix": 136, "mfpt": [137, 167], "mfpt_sensit": 138, "pcca_membership": 139, "rdl_decomposit": 140, "relax": 141, "stationary_distribut": 142, "stationary_distribution_sensit": 143, "timescale_sensit": 144, "timescal": [145, 277], "bootstrap_count": 146, "bootstrap_trajectori": 147, "connected_set": 148, "count_matrix": 149, "error_perturb": 150, "largest_connected_set": 152, "largest_connected_submatrix": 153, "log_likelihood": 154, "prior_const": 155, "prior_neighbor": 156, "prior_rev": 157, "rate_matrix": 158, "tmatrix_cov": 159, "tmatrix_sampl": 160, "transition_matrix": 161, "flux": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 245, 283, 310], "coarsegrain": 162, "flux_consum": 163, "flux_matrix": 164, "flux_produc": 165, "flux_product": 166, "pathwai": [168, 245, 310], "rate": [169, 245], "to_netflux": 170, "total_flux": 171, "except": 172, "zerorankerror": 172, "drop_nan_row": 173, "eig_corr": 174, "eig": 175, "is_diagonal_matrix": 176, "is_square_matrix": 177, "schatten_norm": 178, "sort_eig": 179, "spd_eig": 180, "spd_inv": 181, "spd_inv_split": 182, "spd_inv_sqrt": 183, "spd_truncated_svd": 184, "energy2dplot": 185, "network": [186, 280], "plot_adjac": 187, "plot_ck_test": 188, "plot_energy2d": 189, "plot_flux": 190, "plot_implied_timescal": 191, "plot_markov_model": 192, "sindi": [193, 248, 282, 307], "sindymodel": 194, "stlsq": 195, "energylandscape2d": 196, "quantitystatist": 197, "progresscallback": 198, "supports_progress_interfac": 199, "confidence_interv": 200, "concatdataset": 201, "timelaggedconcatdataset": 202, "timelaggeddataset": 203, "trajectoriesdataset": 204, "trajectorydataset": 205, "timeshifted_split": 206, "cached_properti": 207, "deprecated_argu": 208, "plotting_funct": 209, "energy2d": 210, "handle_n_job": 211, "handle_progress_bar": 212, "module_avail": 213, "atleast_nd": 214, "is_timelagged_dataset": 215, "to_dataset": 216, "chapmankolmogorovtest": 217, "impliedtimescal": 218, "ck_test": 219, "implied_timescal": 220, "whiteningtransform": 221, "covar": [222, 223], "moments_xx": 224, "moments_xxxi": 225, "moments_block": 226, "bickleyjet": 227, "birthdeathchain": 228, "customsystem": 229, "doublewelldiscret": 230, "drunkardswalk": 231, "pbfsimul": 233, "timedependentsystem": 234, "timeindependentsystem": 235, "base": [236, 262, 285, 313], "basi": 237, "cluster": [238, 275, 295], "ad": [238, 290], "new": 238, "util": [239, 241, 243, 249], "api": [240, 250, 313], "custom": [240, 255, 256, 290, 295], "system": [240, 282], "implement": 240, "decomposit": [241, 245, 310], "deep": [241, 289], "altern": 243, "transit": [243, 245, 310, 312], "count": [243, 245, 312], "special": 243, "msm": [243, 245, 300, 305], "hmm": 244, "output": 244, "initi": [244, 295], "guess": 244, "countmatrix": 245, "connect": 245, "sampl": [245, 302, 305], "bootstrap": 245, "prior": 245, "valid": [245, 249], "passag": 245, "time": [245, 268, 272, 287, 308, 313], "fingerprint": 245, "sensit": 245, "path": [245, 310], "theori": [245, 310], "reactiv": [245, 310], "reaction": 245, "numer": 246, "gener": [246, 273, 292], "problem": [246, 307], "plot": [247, 280], "solver": 248, "statist": 249, "type": 249, "other": [249, 250], "tabl": 250, "Of": 250, "content": 250, "document": [250, 290], "doc": 250, "arnold": 252, "beltrami": 252, "childress": 252, "flow": 252, "bicklei": [253, 278, 299], "jet": [253, 278, 299], "birth": 254, "death": 254, "chain": [254, 269], "od": 255, "sde": 256, "doubl": [257, 258, 284, 301, 311], "well": [257, 258, 264, 265, 268, 270, 271, 284, 311], "2d": [257, 271], "discret": [258, 295], "drunkard": [259, 281, 283], "s": [259, 281, 283], "walk": [259, 281, 283], "One": [261, 263], "dimension": [261, 263], "ornstein": 261, "uhlenbeck": 261, "process": 261, "posit": [262, 285, 313], "fluid": [262, 285, 313], "prinz": [263, 300], "potenti": [263, 300], "quadrupl": [264, 265], "asymmetr": 265, "sqrt": [266, 279], "swissrol": 267, "depend": [268, 290], "quintupl": 268, "metropoli": 269, "1d": [269, 270, 284], "energi": [269, 276], "landscap": 269, "tripl": [270, 271], "comput": [272, 287], "exampl": [273, 281, 283, 292, 307, 310, 313], "chapman": 274, "kolmogorov": 274, "test": [274, 290], "method": 275, "comparison": [275, 299, 309], "surfac": 276, "impli": 277, "cca": [278, 279, 299, 301, 303, 313], "find": 278, "coher": [278, 299], "set": [278, 299], "identif": 282, "rossler": 282, "gross": 283, "net": 283, "vs": [286, 309], "pca": [286, 309], "imprint": 288, "dim": 289, "reduct": [289, 291, 301], "For": 290, "develop": 290, "write": 290, "capabl": 290, "pytorch": 290, "your": 290, "code": 290, "dimens": [291, 301], "notebook": 292, "state": [293, 301], "softwar": 294, "licens": 294, "third": 294, "parti": 294, "notic": 294, "k": 295, "mean": 295, "uniform": 295, "mini": 295, "batch": 295, "regular": 295, "space": 295, "box": 295, "defin": 295, "advanc": 295, "alanin": 298, "dipeptid": 298, "kvadnet": 299, "score": [299, 313], "wedg": 301, "backtransform": 301, "hidden": 302, "bayesian": [302, 305], "maximum": 305, "likelihood": 305, "coars": [306, 310], "grain": [306, 310], "main": 307, "idea": 307, "approxim": 307, "object": 307, "lag": [308, 313], "autoencod": 308, "variat": 308, "scale": [309, 313], "koopman": 309, "reweight": 309, "The": 310, "probabl": 310, "from": 310, "trajectori": 310, "introduct": 311, "applic": 311, "recov": 311, "pmf": 311, "select": 312, "submodel": 312, "short": 313, "demonstr": 313, "A": 313, "more": 313, "detail": 313, "look": 313, "singular": 313, "vector": 313}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 56}})