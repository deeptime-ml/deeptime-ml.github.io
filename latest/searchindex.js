Search.setIndex({"docnames": ["api/generated/deeptime.base.Dataset", "api/generated/deeptime.base.Estimator", "api/generated/deeptime.base.Model", "api/generated/deeptime.base.Transformer", "api/generated/deeptime.basis.Concatenation", "api/generated/deeptime.basis.Identity", "api/generated/deeptime.basis.Monomials", "api/generated/deeptime.basis.Observable", "api/generated/deeptime.clustering.BoxDiscretization", "api/generated/deeptime.clustering.BoxDiscretizationModel", "api/generated/deeptime.clustering.ClusterModel", "api/generated/deeptime.clustering.KMeans", "api/generated/deeptime.clustering.KMeansModel", "api/generated/deeptime.clustering.MetricRegistry", "api/generated/deeptime.clustering.MiniBatchKMeans", "api/generated/deeptime.clustering.RegularSpace", "api/generated/deeptime.clustering.kmeans_plusplus", "api/generated/deeptime.clustering.metrics", "api/generated/deeptime.covariance.Covariance", "api/generated/deeptime.covariance.CovarianceModel", "api/generated/deeptime.covariance.KoopmanWeightingEstimator", "api/generated/deeptime.covariance.KoopmanWeightingModel", "api/generated/deeptime.data.abc_flow", "api/generated/deeptime.data.bickley_jet", "api/generated/deeptime.data.birth_death_chain", "api/generated/deeptime.data.custom_ode", "api/generated/deeptime.data.custom_sde", "api/generated/deeptime.data.double_well_2d", "api/generated/deeptime.data.double_well_discrete", "api/generated/deeptime.data.drunkards_walk", "api/generated/deeptime.data.ellipsoids", "api/generated/deeptime.data.ornstein_uhlenbeck", "api/generated/deeptime.data.position_based_fluids", "api/generated/deeptime.data.prinz_potential", "api/generated/deeptime.data.quadruple_well", "api/generated/deeptime.data.quadruple_well_asymmetric", "api/generated/deeptime.data.sqrt_model", "api/generated/deeptime.data.swissroll_model", "api/generated/deeptime.data.time_dependent_quintuple_well", "api/generated/deeptime.data.tmatrix_metropolis1d", "api/generated/deeptime.data.triple_well_1d", "api/generated/deeptime.data.triple_well_2d", "api/generated/deeptime.decomposition.CovarianceKoopmanModel", "api/generated/deeptime.decomposition.DMD", "api/generated/deeptime.decomposition.DMDModel", "api/generated/deeptime.decomposition.EDMD", "api/generated/deeptime.decomposition.EDMDModel", "api/generated/deeptime.decomposition.KVAD", "api/generated/deeptime.decomposition.KVADModel", "api/generated/deeptime.decomposition.KernelCCA", "api/generated/deeptime.decomposition.KernelCCAModel", "api/generated/deeptime.decomposition.KernelEDMD", "api/generated/deeptime.decomposition.KernelEDMDModel", "api/generated/deeptime.decomposition.TICA", "api/generated/deeptime.decomposition.TransferOperatorModel", "api/generated/deeptime.decomposition.VAMP", "api/generated/deeptime.decomposition.blocksplit_trajs", "api/generated/deeptime.decomposition.cvsplit_trajs", "api/generated/deeptime.decomposition.deep.TAE", "api/generated/deeptime.decomposition.deep.TAEModel", "api/generated/deeptime.decomposition.deep.TVAE", "api/generated/deeptime.decomposition.deep.TVAEEncoder", "api/generated/deeptime.decomposition.deep.TVAEModel", "api/generated/deeptime.decomposition.deep.VAMPNet", "api/generated/deeptime.decomposition.deep.VAMPNetModel", "api/generated/deeptime.decomposition.deep.covariances", "api/generated/deeptime.decomposition.deep.koopman_matrix", "api/generated/deeptime.decomposition.deep.kvad_score", "api/generated/deeptime.decomposition.deep.sym_inverse", "api/generated/deeptime.decomposition.deep.vamp_score", "api/generated/deeptime.decomposition.deep.vampnet_loss", "api/generated/deeptime.decomposition.vamp_score", "api/generated/deeptime.decomposition.vamp_score_cv", "api/generated/deeptime.decomposition.vamp_score_data", "api/generated/deeptime.kernels.GaussianKernel", "api/generated/deeptime.kernels.GeneralizedGaussianKernel", "api/generated/deeptime.kernels.Kernel", "api/generated/deeptime.kernels.LaplacianKernel", "api/generated/deeptime.kernels.PolynomialKernel", "api/generated/deeptime.kernels.TorchGaussianKernel", "api/generated/deeptime.kernels.is_torch_kernel", "api/generated/deeptime.markov.PCCAModel", "api/generated/deeptime.markov.ReactiveFlux", "api/generated/deeptime.markov.TransitionCountEstimator", "api/generated/deeptime.markov.TransitionCountModel", "api/generated/deeptime.markov.compute_connected_sets", "api/generated/deeptime.markov.compute_dtrajs_effective", "api/generated/deeptime.markov.compute_effective_stride", "api/generated/deeptime.markov.count_states", "api/generated/deeptime.markov.hmm.BayesianHMM", "api/generated/deeptime.markov.hmm.BayesianHMMPosterior", "api/generated/deeptime.markov.hmm.DiscreteOutputModel", "api/generated/deeptime.markov.hmm.GaussianOutputModel", "api/generated/deeptime.markov.hmm.HiddenMarkovModel", "api/generated/deeptime.markov.hmm.MaximumLikelihoodHMM", "api/generated/deeptime.markov.hmm.OutputModel", "api/generated/deeptime.markov.hmm.init.discrete.metastable_from_data", "api/generated/deeptime.markov.hmm.init.discrete.metastable_from_msm", "api/generated/deeptime.markov.hmm.init.discrete.random_guess", "api/generated/deeptime.markov.hmm.init.gaussian.from_data", "api/generated/deeptime.markov.msm.AugmentedMSM", "api/generated/deeptime.markov.msm.AugmentedMSMEstimator", "api/generated/deeptime.markov.msm.BayesianMSM", "api/generated/deeptime.markov.msm.BayesianMSMPosterior", "api/generated/deeptime.markov.msm.KoopmanReweightedMSM", "api/generated/deeptime.markov.msm.MarkovStateModel", "api/generated/deeptime.markov.msm.MarkovStateModelCollection", "api/generated/deeptime.markov.msm.MaximumLikelihoodMSM", "api/generated/deeptime.markov.msm.OOMReweightedMSM", "api/generated/deeptime.markov.msm.TRAM", "api/generated/deeptime.markov.msm.TRAMDataset", "api/generated/deeptime.markov.msm.TRAMModel", "api/generated/deeptime.markov.number_of_states", "api/generated/deeptime.markov.pcca", "api/generated/deeptime.markov.reactive_flux", "api/generated/deeptime.markov.sample.compute_index_states", "api/generated/deeptime.markov.sample.indices_by_distribution", "api/generated/deeptime.markov.sample.indices_by_sequence", "api/generated/deeptime.markov.sample.indices_by_state", "api/generated/deeptime.markov.tools.analysis.committor", "api/generated/deeptime.markov.tools.analysis.committor_sensitivity", "api/generated/deeptime.markov.tools.analysis.correlation", "api/generated/deeptime.markov.tools.analysis.eigenvalue_sensitivity", "api/generated/deeptime.markov.tools.analysis.eigenvalues", "api/generated/deeptime.markov.tools.analysis.eigenvector_sensitivity", "api/generated/deeptime.markov.tools.analysis.eigenvectors", "api/generated/deeptime.markov.tools.analysis.expectation", "api/generated/deeptime.markov.tools.analysis.expectation_sensitivity", "api/generated/deeptime.markov.tools.analysis.expected_counts", "api/generated/deeptime.markov.tools.analysis.expected_counts_stationary", "api/generated/deeptime.markov.tools.analysis.fingerprint_correlation", "api/generated/deeptime.markov.tools.analysis.fingerprint_relaxation", "api/generated/deeptime.markov.tools.analysis.hitting_probability", "api/generated/deeptime.markov.tools.analysis.is_connected", "api/generated/deeptime.markov.tools.analysis.is_rate_matrix", "api/generated/deeptime.markov.tools.analysis.is_reversible", "api/generated/deeptime.markov.tools.analysis.is_transition_matrix", "api/generated/deeptime.markov.tools.analysis.mfpt", "api/generated/deeptime.markov.tools.analysis.mfpt_sensitivity", "api/generated/deeptime.markov.tools.analysis.pcca_memberships", "api/generated/deeptime.markov.tools.analysis.rdl_decomposition", "api/generated/deeptime.markov.tools.analysis.relaxation", "api/generated/deeptime.markov.tools.analysis.stationary_distribution", "api/generated/deeptime.markov.tools.analysis.stationary_distribution_sensitivity", "api/generated/deeptime.markov.tools.analysis.timescale_sensitivity", "api/generated/deeptime.markov.tools.analysis.timescales", "api/generated/deeptime.markov.tools.estimation.bootstrap_counts", "api/generated/deeptime.markov.tools.estimation.bootstrap_trajectories", "api/generated/deeptime.markov.tools.estimation.connected_sets", "api/generated/deeptime.markov.tools.estimation.count_matrix", "api/generated/deeptime.markov.tools.estimation.error_perturbation", "api/generated/deeptime.markov.tools.estimation.is_connected", "api/generated/deeptime.markov.tools.estimation.largest_connected_set", "api/generated/deeptime.markov.tools.estimation.largest_connected_submatrix", "api/generated/deeptime.markov.tools.estimation.log_likelihood", "api/generated/deeptime.markov.tools.estimation.prior_const", "api/generated/deeptime.markov.tools.estimation.prior_neighbor", "api/generated/deeptime.markov.tools.estimation.prior_rev", "api/generated/deeptime.markov.tools.estimation.rate_matrix", "api/generated/deeptime.markov.tools.estimation.tmatrix_cov", "api/generated/deeptime.markov.tools.estimation.tmatrix_sampler", "api/generated/deeptime.markov.tools.estimation.transition_matrix", "api/generated/deeptime.markov.tools.flux.coarsegrain", "api/generated/deeptime.markov.tools.flux.flux_consumers", "api/generated/deeptime.markov.tools.flux.flux_matrix", "api/generated/deeptime.markov.tools.flux.flux_producers", "api/generated/deeptime.markov.tools.flux.flux_production", "api/generated/deeptime.markov.tools.flux.mfpt", "api/generated/deeptime.markov.tools.flux.pathways", "api/generated/deeptime.markov.tools.flux.rate", "api/generated/deeptime.markov.tools.flux.to_netflux", "api/generated/deeptime.markov.tools.flux.total_flux", "api/generated/deeptime.numeric.ZeroRankError", "api/generated/deeptime.numeric.drop_nan_rows", "api/generated/deeptime.numeric.eig_corr", "api/generated/deeptime.numeric.eigs", "api/generated/deeptime.numeric.is_diagonal_matrix", "api/generated/deeptime.numeric.is_square_matrix", "api/generated/deeptime.numeric.schatten_norm", "api/generated/deeptime.numeric.sort_eigs", "api/generated/deeptime.numeric.spd_eig", "api/generated/deeptime.numeric.spd_inv", "api/generated/deeptime.numeric.spd_inv_split", "api/generated/deeptime.numeric.spd_inv_sqrt", "api/generated/deeptime.numeric.spd_truncated_svd", "api/generated/deeptime.plots.Energy2dPlot", "api/generated/deeptime.plots.Network", "api/generated/deeptime.plots.plot_adjacency", "api/generated/deeptime.plots.plot_ck_test", "api/generated/deeptime.plots.plot_contour2d_from_xyz", "api/generated/deeptime.plots.plot_density", "api/generated/deeptime.plots.plot_energy2d", "api/generated/deeptime.plots.plot_flux", "api/generated/deeptime.plots.plot_implied_timescales", "api/generated/deeptime.plots.plot_markov_model", "api/generated/deeptime.sindy.SINDy", "api/generated/deeptime.sindy.SINDyModel", "api/generated/deeptime.sindy.STLSQ", "api/generated/deeptime.util.EnergyLandscape2d", "api/generated/deeptime.util.QuantityStatistics", "api/generated/deeptime.util.callbacks.ProgressCallback", "api/generated/deeptime.util.callbacks.supports_progress_interface", "api/generated/deeptime.util.confidence_interval", "api/generated/deeptime.util.data.ConcatDataset", "api/generated/deeptime.util.data.TimeLaggedConcatDataset", "api/generated/deeptime.util.data.TimeLaggedDataset", "api/generated/deeptime.util.data.TrajectoriesDataset", "api/generated/deeptime.util.data.TrajectoryDataset", "api/generated/deeptime.util.data.timeshifted_split", "api/generated/deeptime.util.decorators.cached_property", "api/generated/deeptime.util.decorators.deprecated_argument", "api/generated/deeptime.util.decorators.plotting_function", "api/generated/deeptime.util.energy2d", "api/generated/deeptime.util.parallel.handle_n_jobs", "api/generated/deeptime.util.platform.handle_progress_bar", "api/generated/deeptime.util.platform.module_available", "api/generated/deeptime.util.types.atleast_nd", "api/generated/deeptime.util.types.is_timelagged_dataset", "api/generated/deeptime.util.types.to_dataset", "api/generated/deeptime.util.validation.ChapmanKolmogorovTest", "api/generated/deeptime.util.validation.ImpliedTimescales", "api/generated/deeptime.util.validation.ck_test", "api/generated/deeptime.util.validation.implied_timescales", "api/generated/impl/deeptime.covariance.WhiteningTransform", "api/generated/impl/deeptime.covariance.covar", "api/generated/impl/deeptime.covariance.covars", "api/generated/impl/deeptime.covariance.moments_XX", "api/generated/impl/deeptime.covariance.moments_XXXY", "api/generated/impl/deeptime.covariance.moments_block", "api/generated/impl/deeptime.data.BickleyJet", "api/generated/impl/deeptime.data.BirthDeathChain", "api/generated/impl/deeptime.data.CustomSystem", "api/generated/impl/deeptime.data.DoubleWellDiscrete", "api/generated/impl/deeptime.data.DrunkardsWalk", "api/generated/impl/deeptime.data.Ellipsoids", "api/generated/impl/deeptime.data.PBFSimulator", "api/generated/impl/deeptime.data.TimeDependentSystem", "api/generated/impl/deeptime.data.TimeIndependentSystem", "api/index_base", "api/index_basis", "api/index_clustering", "api/index_covariance", "api/index_data", "api/index_decomposition", "api/index_kernels", "api/index_markov", "api/index_markov_hmm", "api/index_markov_tools", "api/index_numeric", "api/index_plots", "api/index_sindy", "api/index_util", "contents", "datasets/index", "datasets/plot_abc_flow", "datasets/plot_bickley_jet", "datasets/plot_birth_death_chain", "datasets/plot_custom_ode", "datasets/plot_custom_sde", "datasets/plot_double_well_2d", "datasets/plot_double_well_discrete", "datasets/plot_drunkards_walk", "datasets/plot_ellipsoids", "datasets/plot_ornstein_uhlenbeck", "datasets/plot_pbf", "datasets/plot_prinz", "datasets/plot_quadruple_well", "datasets/plot_quadruple_well_asymmetric", "datasets/plot_sqrt_model", "datasets/plot_swissroll_model", "datasets/plot_time_quintuple_well", "datasets/plot_tmatrix_1d", "datasets/plot_triple_well_1d", "datasets/plot_triple_well_2d", "datasets/sg_execution_times", "examples/index", "examples/plot_ck_test", "examples/plot_clustering_comparison", "examples/plot_contour2d_from_xyz", "examples/plot_density", "examples/plot_energy_surface", "examples/plot_implied_timescales", "examples/plot_kcca_bickley", "examples/plot_kcca_projection", "examples/plot_network", "examples/plot_pcca_drunkard", "examples/plot_sindy_rossler_attractor", "examples/plot_tpt_gross_net_flux", "examples/plot_tram", "examples/plot_vamp_pbf_projection", "examples/plot_vamp_vs_tica_vs_pca", "examples/sg_execution_times", "imprint", "index_deepdimreduction", "index_dev", "index_dimreduction", "index_examples", "index_msm", "license", "notebooks/clustering", "notebooks/dmd", "notebooks/edmd", "notebooks/examples/ala2-example", "notebooks/examples/coherence-bickley-jet", "notebooks/examples/msm-prinz", "notebooks/examples/sqrt-model-dimrx", "notebooks/hmm", "notebooks/kcca", "notebooks/kedmd", "notebooks/mlmsm", "notebooks/pcca", "notebooks/sindy", "notebooks/tae", "notebooks/tica", "notebooks/tpt", "notebooks/tram", "notebooks/transition-counting", "notebooks/vamp", "notebooks/vampnets"], "filenames": ["api/generated/deeptime.base.Dataset.rst", "api/generated/deeptime.base.Estimator.rst", "api/generated/deeptime.base.Model.rst", "api/generated/deeptime.base.Transformer.rst", "api/generated/deeptime.basis.Concatenation.rst", "api/generated/deeptime.basis.Identity.rst", "api/generated/deeptime.basis.Monomials.rst", "api/generated/deeptime.basis.Observable.rst", "api/generated/deeptime.clustering.BoxDiscretization.rst", "api/generated/deeptime.clustering.BoxDiscretizationModel.rst", "api/generated/deeptime.clustering.ClusterModel.rst", "api/generated/deeptime.clustering.KMeans.rst", "api/generated/deeptime.clustering.KMeansModel.rst", "api/generated/deeptime.clustering.MetricRegistry.rst", "api/generated/deeptime.clustering.MiniBatchKMeans.rst", "api/generated/deeptime.clustering.RegularSpace.rst", "api/generated/deeptime.clustering.kmeans_plusplus.rst", "api/generated/deeptime.clustering.metrics.rst", "api/generated/deeptime.covariance.Covariance.rst", "api/generated/deeptime.covariance.CovarianceModel.rst", "api/generated/deeptime.covariance.KoopmanWeightingEstimator.rst", "api/generated/deeptime.covariance.KoopmanWeightingModel.rst", "api/generated/deeptime.data.abc_flow.rst", "api/generated/deeptime.data.bickley_jet.rst", "api/generated/deeptime.data.birth_death_chain.rst", "api/generated/deeptime.data.custom_ode.rst", "api/generated/deeptime.data.custom_sde.rst", "api/generated/deeptime.data.double_well_2d.rst", "api/generated/deeptime.data.double_well_discrete.rst", "api/generated/deeptime.data.drunkards_walk.rst", "api/generated/deeptime.data.ellipsoids.rst", "api/generated/deeptime.data.ornstein_uhlenbeck.rst", "api/generated/deeptime.data.position_based_fluids.rst", "api/generated/deeptime.data.prinz_potential.rst", "api/generated/deeptime.data.quadruple_well.rst", "api/generated/deeptime.data.quadruple_well_asymmetric.rst", "api/generated/deeptime.data.sqrt_model.rst", "api/generated/deeptime.data.swissroll_model.rst", "api/generated/deeptime.data.time_dependent_quintuple_well.rst", "api/generated/deeptime.data.tmatrix_metropolis1d.rst", "api/generated/deeptime.data.triple_well_1d.rst", "api/generated/deeptime.data.triple_well_2d.rst", "api/generated/deeptime.decomposition.CovarianceKoopmanModel.rst", "api/generated/deeptime.decomposition.DMD.rst", "api/generated/deeptime.decomposition.DMDModel.rst", "api/generated/deeptime.decomposition.EDMD.rst", "api/generated/deeptime.decomposition.EDMDModel.rst", "api/generated/deeptime.decomposition.KVAD.rst", "api/generated/deeptime.decomposition.KVADModel.rst", "api/generated/deeptime.decomposition.KernelCCA.rst", "api/generated/deeptime.decomposition.KernelCCAModel.rst", "api/generated/deeptime.decomposition.KernelEDMD.rst", "api/generated/deeptime.decomposition.KernelEDMDModel.rst", "api/generated/deeptime.decomposition.TICA.rst", "api/generated/deeptime.decomposition.TransferOperatorModel.rst", "api/generated/deeptime.decomposition.VAMP.rst", "api/generated/deeptime.decomposition.blocksplit_trajs.rst", "api/generated/deeptime.decomposition.cvsplit_trajs.rst", "api/generated/deeptime.decomposition.deep.TAE.rst", "api/generated/deeptime.decomposition.deep.TAEModel.rst", "api/generated/deeptime.decomposition.deep.TVAE.rst", "api/generated/deeptime.decomposition.deep.TVAEEncoder.rst", "api/generated/deeptime.decomposition.deep.TVAEModel.rst", "api/generated/deeptime.decomposition.deep.VAMPNet.rst", "api/generated/deeptime.decomposition.deep.VAMPNetModel.rst", "api/generated/deeptime.decomposition.deep.covariances.rst", "api/generated/deeptime.decomposition.deep.koopman_matrix.rst", "api/generated/deeptime.decomposition.deep.kvad_score.rst", "api/generated/deeptime.decomposition.deep.sym_inverse.rst", "api/generated/deeptime.decomposition.deep.vamp_score.rst", "api/generated/deeptime.decomposition.deep.vampnet_loss.rst", "api/generated/deeptime.decomposition.vamp_score.rst", "api/generated/deeptime.decomposition.vamp_score_cv.rst", "api/generated/deeptime.decomposition.vamp_score_data.rst", "api/generated/deeptime.kernels.GaussianKernel.rst", "api/generated/deeptime.kernels.GeneralizedGaussianKernel.rst", "api/generated/deeptime.kernels.Kernel.rst", "api/generated/deeptime.kernels.LaplacianKernel.rst", "api/generated/deeptime.kernels.PolynomialKernel.rst", "api/generated/deeptime.kernels.TorchGaussianKernel.rst", "api/generated/deeptime.kernels.is_torch_kernel.rst", "api/generated/deeptime.markov.PCCAModel.rst", "api/generated/deeptime.markov.ReactiveFlux.rst", "api/generated/deeptime.markov.TransitionCountEstimator.rst", "api/generated/deeptime.markov.TransitionCountModel.rst", "api/generated/deeptime.markov.compute_connected_sets.rst", "api/generated/deeptime.markov.compute_dtrajs_effective.rst", "api/generated/deeptime.markov.compute_effective_stride.rst", "api/generated/deeptime.markov.count_states.rst", "api/generated/deeptime.markov.hmm.BayesianHMM.rst", "api/generated/deeptime.markov.hmm.BayesianHMMPosterior.rst", "api/generated/deeptime.markov.hmm.DiscreteOutputModel.rst", "api/generated/deeptime.markov.hmm.GaussianOutputModel.rst", "api/generated/deeptime.markov.hmm.HiddenMarkovModel.rst", "api/generated/deeptime.markov.hmm.MaximumLikelihoodHMM.rst", "api/generated/deeptime.markov.hmm.OutputModel.rst", "api/generated/deeptime.markov.hmm.init.discrete.metastable_from_data.rst", "api/generated/deeptime.markov.hmm.init.discrete.metastable_from_msm.rst", "api/generated/deeptime.markov.hmm.init.discrete.random_guess.rst", "api/generated/deeptime.markov.hmm.init.gaussian.from_data.rst", "api/generated/deeptime.markov.msm.AugmentedMSM.rst", "api/generated/deeptime.markov.msm.AugmentedMSMEstimator.rst", "api/generated/deeptime.markov.msm.BayesianMSM.rst", "api/generated/deeptime.markov.msm.BayesianMSMPosterior.rst", "api/generated/deeptime.markov.msm.KoopmanReweightedMSM.rst", "api/generated/deeptime.markov.msm.MarkovStateModel.rst", "api/generated/deeptime.markov.msm.MarkovStateModelCollection.rst", "api/generated/deeptime.markov.msm.MaximumLikelihoodMSM.rst", "api/generated/deeptime.markov.msm.OOMReweightedMSM.rst", "api/generated/deeptime.markov.msm.TRAM.rst", "api/generated/deeptime.markov.msm.TRAMDataset.rst", "api/generated/deeptime.markov.msm.TRAMModel.rst", "api/generated/deeptime.markov.number_of_states.rst", "api/generated/deeptime.markov.pcca.rst", "api/generated/deeptime.markov.reactive_flux.rst", "api/generated/deeptime.markov.sample.compute_index_states.rst", "api/generated/deeptime.markov.sample.indices_by_distribution.rst", "api/generated/deeptime.markov.sample.indices_by_sequence.rst", "api/generated/deeptime.markov.sample.indices_by_state.rst", "api/generated/deeptime.markov.tools.analysis.committor.rst", "api/generated/deeptime.markov.tools.analysis.committor_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.correlation.rst", "api/generated/deeptime.markov.tools.analysis.eigenvalue_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.eigenvalues.rst", "api/generated/deeptime.markov.tools.analysis.eigenvector_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.eigenvectors.rst", "api/generated/deeptime.markov.tools.analysis.expectation.rst", "api/generated/deeptime.markov.tools.analysis.expectation_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.expected_counts.rst", "api/generated/deeptime.markov.tools.analysis.expected_counts_stationary.rst", "api/generated/deeptime.markov.tools.analysis.fingerprint_correlation.rst", "api/generated/deeptime.markov.tools.analysis.fingerprint_relaxation.rst", "api/generated/deeptime.markov.tools.analysis.hitting_probability.rst", "api/generated/deeptime.markov.tools.analysis.is_connected.rst", "api/generated/deeptime.markov.tools.analysis.is_rate_matrix.rst", "api/generated/deeptime.markov.tools.analysis.is_reversible.rst", "api/generated/deeptime.markov.tools.analysis.is_transition_matrix.rst", "api/generated/deeptime.markov.tools.analysis.mfpt.rst", "api/generated/deeptime.markov.tools.analysis.mfpt_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.pcca_memberships.rst", "api/generated/deeptime.markov.tools.analysis.rdl_decomposition.rst", "api/generated/deeptime.markov.tools.analysis.relaxation.rst", "api/generated/deeptime.markov.tools.analysis.stationary_distribution.rst", "api/generated/deeptime.markov.tools.analysis.stationary_distribution_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.timescale_sensitivity.rst", "api/generated/deeptime.markov.tools.analysis.timescales.rst", "api/generated/deeptime.markov.tools.estimation.bootstrap_counts.rst", "api/generated/deeptime.markov.tools.estimation.bootstrap_trajectories.rst", "api/generated/deeptime.markov.tools.estimation.connected_sets.rst", "api/generated/deeptime.markov.tools.estimation.count_matrix.rst", "api/generated/deeptime.markov.tools.estimation.error_perturbation.rst", "api/generated/deeptime.markov.tools.estimation.is_connected.rst", "api/generated/deeptime.markov.tools.estimation.largest_connected_set.rst", "api/generated/deeptime.markov.tools.estimation.largest_connected_submatrix.rst", "api/generated/deeptime.markov.tools.estimation.log_likelihood.rst", "api/generated/deeptime.markov.tools.estimation.prior_const.rst", "api/generated/deeptime.markov.tools.estimation.prior_neighbor.rst", "api/generated/deeptime.markov.tools.estimation.prior_rev.rst", "api/generated/deeptime.markov.tools.estimation.rate_matrix.rst", "api/generated/deeptime.markov.tools.estimation.tmatrix_cov.rst", "api/generated/deeptime.markov.tools.estimation.tmatrix_sampler.rst", "api/generated/deeptime.markov.tools.estimation.transition_matrix.rst", "api/generated/deeptime.markov.tools.flux.coarsegrain.rst", "api/generated/deeptime.markov.tools.flux.flux_consumers.rst", "api/generated/deeptime.markov.tools.flux.flux_matrix.rst", "api/generated/deeptime.markov.tools.flux.flux_producers.rst", "api/generated/deeptime.markov.tools.flux.flux_production.rst", "api/generated/deeptime.markov.tools.flux.mfpt.rst", "api/generated/deeptime.markov.tools.flux.pathways.rst", "api/generated/deeptime.markov.tools.flux.rate.rst", "api/generated/deeptime.markov.tools.flux.to_netflux.rst", "api/generated/deeptime.markov.tools.flux.total_flux.rst", "api/generated/deeptime.numeric.ZeroRankError.rst", "api/generated/deeptime.numeric.drop_nan_rows.rst", "api/generated/deeptime.numeric.eig_corr.rst", "api/generated/deeptime.numeric.eigs.rst", "api/generated/deeptime.numeric.is_diagonal_matrix.rst", "api/generated/deeptime.numeric.is_square_matrix.rst", "api/generated/deeptime.numeric.schatten_norm.rst", "api/generated/deeptime.numeric.sort_eigs.rst", "api/generated/deeptime.numeric.spd_eig.rst", "api/generated/deeptime.numeric.spd_inv.rst", "api/generated/deeptime.numeric.spd_inv_split.rst", "api/generated/deeptime.numeric.spd_inv_sqrt.rst", "api/generated/deeptime.numeric.spd_truncated_svd.rst", "api/generated/deeptime.plots.Energy2dPlot.rst", "api/generated/deeptime.plots.Network.rst", "api/generated/deeptime.plots.plot_adjacency.rst", "api/generated/deeptime.plots.plot_ck_test.rst", "api/generated/deeptime.plots.plot_contour2d_from_xyz.rst", "api/generated/deeptime.plots.plot_density.rst", "api/generated/deeptime.plots.plot_energy2d.rst", "api/generated/deeptime.plots.plot_flux.rst", "api/generated/deeptime.plots.plot_implied_timescales.rst", "api/generated/deeptime.plots.plot_markov_model.rst", "api/generated/deeptime.sindy.SINDy.rst", "api/generated/deeptime.sindy.SINDyModel.rst", "api/generated/deeptime.sindy.STLSQ.rst", "api/generated/deeptime.util.EnergyLandscape2d.rst", "api/generated/deeptime.util.QuantityStatistics.rst", "api/generated/deeptime.util.callbacks.ProgressCallback.rst", "api/generated/deeptime.util.callbacks.supports_progress_interface.rst", "api/generated/deeptime.util.confidence_interval.rst", "api/generated/deeptime.util.data.ConcatDataset.rst", "api/generated/deeptime.util.data.TimeLaggedConcatDataset.rst", "api/generated/deeptime.util.data.TimeLaggedDataset.rst", "api/generated/deeptime.util.data.TrajectoriesDataset.rst", "api/generated/deeptime.util.data.TrajectoryDataset.rst", "api/generated/deeptime.util.data.timeshifted_split.rst", "api/generated/deeptime.util.decorators.cached_property.rst", "api/generated/deeptime.util.decorators.deprecated_argument.rst", "api/generated/deeptime.util.decorators.plotting_function.rst", "api/generated/deeptime.util.energy2d.rst", "api/generated/deeptime.util.parallel.handle_n_jobs.rst", "api/generated/deeptime.util.platform.handle_progress_bar.rst", "api/generated/deeptime.util.platform.module_available.rst", "api/generated/deeptime.util.types.atleast_nd.rst", "api/generated/deeptime.util.types.is_timelagged_dataset.rst", "api/generated/deeptime.util.types.to_dataset.rst", "api/generated/deeptime.util.validation.ChapmanKolmogorovTest.rst", "api/generated/deeptime.util.validation.ImpliedTimescales.rst", "api/generated/deeptime.util.validation.ck_test.rst", "api/generated/deeptime.util.validation.implied_timescales.rst", "api/generated/impl/deeptime.covariance.WhiteningTransform.rst", "api/generated/impl/deeptime.covariance.covar.rst", "api/generated/impl/deeptime.covariance.covars.rst", "api/generated/impl/deeptime.covariance.moments_XX.rst", "api/generated/impl/deeptime.covariance.moments_XXXY.rst", "api/generated/impl/deeptime.covariance.moments_block.rst", "api/generated/impl/deeptime.data.BickleyJet.rst", "api/generated/impl/deeptime.data.BirthDeathChain.rst", "api/generated/impl/deeptime.data.CustomSystem.rst", "api/generated/impl/deeptime.data.DoubleWellDiscrete.rst", "api/generated/impl/deeptime.data.DrunkardsWalk.rst", "api/generated/impl/deeptime.data.Ellipsoids.rst", "api/generated/impl/deeptime.data.PBFSimulator.rst", "api/generated/impl/deeptime.data.TimeDependentSystem.rst", "api/generated/impl/deeptime.data.TimeIndependentSystem.rst", "api/index_base.rst", "api/index_basis.rst", "api/index_clustering.rst", "api/index_covariance.rst", "api/index_data.rst", "api/index_decomposition.rst", "api/index_kernels.rst", "api/index_markov.rst", "api/index_markov_hmm.rst", "api/index_markov_tools.rst", "api/index_numeric.rst", "api/index_plots.rst", "api/index_sindy.rst", "api/index_util.rst", "contents.rst", "datasets/index.rst", "datasets/plot_abc_flow.rst", "datasets/plot_bickley_jet.rst", "datasets/plot_birth_death_chain.rst", "datasets/plot_custom_ode.rst", "datasets/plot_custom_sde.rst", "datasets/plot_double_well_2d.rst", "datasets/plot_double_well_discrete.rst", "datasets/plot_drunkards_walk.rst", "datasets/plot_ellipsoids.rst", "datasets/plot_ornstein_uhlenbeck.rst", "datasets/plot_pbf.rst", "datasets/plot_prinz.rst", "datasets/plot_quadruple_well.rst", "datasets/plot_quadruple_well_asymmetric.rst", "datasets/plot_sqrt_model.rst", "datasets/plot_swissroll_model.rst", "datasets/plot_time_quintuple_well.rst", "datasets/plot_tmatrix_1d.rst", "datasets/plot_triple_well_1d.rst", "datasets/plot_triple_well_2d.rst", "datasets/sg_execution_times.rst", "examples/index.rst", "examples/plot_ck_test.rst", "examples/plot_clustering_comparison.rst", "examples/plot_contour2d_from_xyz.rst", "examples/plot_density.rst", "examples/plot_energy_surface.rst", "examples/plot_implied_timescales.rst", "examples/plot_kcca_bickley.rst", "examples/plot_kcca_projection.rst", "examples/plot_network.rst", "examples/plot_pcca_drunkard.rst", "examples/plot_sindy_rossler_attractor.rst", "examples/plot_tpt_gross_net_flux.rst", "examples/plot_tram.rst", "examples/plot_vamp_pbf_projection.rst", "examples/plot_vamp_vs_tica_vs_pca.rst", "examples/sg_execution_times.rst", "imprint.rst", "index_deepdimreduction.rst", "index_dev.rst", "index_dimreduction.rst", "index_examples.rst", "index_msm.rst", "license.rst", "notebooks/clustering.ipynb", "notebooks/dmd.ipynb", "notebooks/edmd.ipynb", "notebooks/examples/ala2-example.ipynb", "notebooks/examples/coherence-bickley-jet.ipynb", "notebooks/examples/msm-prinz.ipynb", "notebooks/examples/sqrt-model-dimrx.ipynb", "notebooks/hmm.ipynb", "notebooks/kcca.ipynb", "notebooks/kedmd.ipynb", "notebooks/mlmsm.ipynb", "notebooks/pcca.ipynb", "notebooks/sindy.ipynb", "notebooks/tae.ipynb", "notebooks/tica.ipynb", "notebooks/tpt.ipynb", "notebooks/tram.ipynb", "notebooks/transition-counting.ipynb", "notebooks/vamp.ipynb", "notebooks/vampnets.ipynb"], "titles": ["<em>class</em> Dataset", "<em>class</em> Estimator", "<em>class</em> Model", "<em>class</em> Transformer", "<em>class</em> Concatenation", "<em>class</em> Identity", "<em>class</em> Monomials", "<em>class</em> Observable", "<em>class</em> BoxDiscretization", "<em>class</em> BoxDiscretizationModel", "<em>class</em> ClusterModel", "<em>class</em> KMeans", "<em>class</em> KMeansModel", "<em>class</em> MetricRegistry", "<em>class</em> MiniBatchKMeans", "<em>class</em> RegularSpace", "<em>function</em> kmeans_plusplus", "<em>data</em> metrics", "<em>class</em> Covariance", "<em>class</em> CovarianceModel", "<em>class</em> KoopmanWeightingEstimator", "<em>class</em> KoopmanWeightingModel", "<em>function</em> abc_flow", "<em>function</em> bickley_jet", "<em>function</em> birth_death_chain", "<em>function</em> custom_ode", "<em>function</em> custom_sde", "<em>function</em> double_well_2d", "<em>function</em> double_well_discrete", "<em>function</em> drunkards_walk", "<em>function</em> ellipsoids", "<em>function</em> ornstein_uhlenbeck", "<em>function</em> position_based_fluids", "<em>function</em> prinz_potential", "<em>function</em> quadruple_well", "<em>function</em> quadruple_well_asymmetric", "<em>function</em> sqrt_model", "<em>function</em> swissroll_model", "<em>function</em> time_dependent_quintuple_well", "<em>function</em> tmatrix_metropolis1d", "<em>function</em> triple_well_1d", "<em>function</em> triple_well_2d", "<em>class</em> CovarianceKoopmanModel", "<em>class</em> DMD", "<em>class</em> DMDModel", "<em>class</em> EDMD", "<em>class</em> EDMDModel", "<em>class</em> KVAD", "<em>class</em> KVADModel", "<em>class</em> KernelCCA", "<em>class</em> KernelCCAModel", "<em>class</em> KernelEDMD", "<em>class</em> KernelEDMDModel", "<em>class</em> TICA", "<em>class</em> TransferOperatorModel", "<em>class</em> VAMP", "<em>function</em> blocksplit_trajs", "<em>function</em> cvsplit_trajs", "<em>class</em> TAE", "<em>class</em> TAEModel", "<em>class</em> TVAE", "<em>class</em> TVAEEncoder", "<em>class</em> TVAEModel", "<em>class</em> VAMPNet", "<em>class</em> VAMPNetModel", "<em>function</em> covariances", "<em>function</em> koopman_matrix", "<em>function</em> kvad_score", "<em>function</em> sym_inverse", "<em>function</em> vamp_score", "<em>function</em> vampnet_loss", "<em>function</em> vamp_score", "<em>function</em> vamp_score_cv", "<em>function</em> vamp_score_data", "<em>class</em> GaussianKernel", "<em>class</em> GeneralizedGaussianKernel", "<em>class</em> Kernel", "<em>class</em> LaplacianKernel", "<em>class</em> PolynomialKernel", "<em>class</em> TorchGaussianKernel", "<em>function</em> is_torch_kernel", "<em>class</em> PCCAModel", "<em>class</em> ReactiveFlux", "<em>class</em> TransitionCountEstimator", "<em>class</em> TransitionCountModel", "<em>function</em> compute_connected_sets", "<em>function</em> compute_dtrajs_effective", "<em>function</em> compute_effective_stride", "<em>function</em> count_states", "<em>class</em> BayesianHMM", "<em>class</em> BayesianHMMPosterior", "<em>class</em> DiscreteOutputModel", "<em>class</em> GaussianOutputModel", "<em>class</em> HiddenMarkovModel", "<em>class</em> MaximumLikelihoodHMM", "<em>class</em> OutputModel", "<em>function</em> metastable_from_data", "<em>function</em> metastable_from_msm", "<em>function</em> random_guess", "<em>function</em> from_data", "<em>class</em> AugmentedMSM", "<em>class</em> AugmentedMSMEstimator", "<em>class</em> BayesianMSM", "<em>class</em> BayesianMSMPosterior", "<em>class</em> KoopmanReweightedMSM", "<em>class</em> MarkovStateModel", "<em>class</em> MarkovStateModelCollection", "<em>class</em> MaximumLikelihoodMSM", "<em>class</em> OOMReweightedMSM", "<em>class</em> TRAM", "<em>class</em> TRAMDataset", "<em>class</em> TRAMModel", "<em>function</em> number_of_states", "<em>function</em> pcca", "<em>function</em> reactive_flux", "<em>function</em> compute_index_states", "<em>function</em> indices_by_distribution", "<em>function</em> indices_by_sequence", "<em>function</em> indices_by_state", "deeptime.markov.tools.analysis.committor", "deeptime.markov.tools.analysis.committor_sensitivity", "deeptime.markov.tools.analysis.correlation", "deeptime.markov.tools.analysis.eigenvalue_sensitivity", "<em>function</em> eigenvalues", "deeptime.markov.tools.analysis.eigenvector_sensitivity", "<em>function</em> eigenvectors", "deeptime.markov.tools.analysis.expectation", "deeptime.markov.tools.analysis.expectation_sensitivity", "deeptime.markov.tools.analysis.expected_counts", "deeptime.markov.tools.analysis.expected_counts_stationary", "deeptime.markov.tools.analysis.fingerprint_correlation", "deeptime.markov.tools.analysis.fingerprint_relaxation", "deeptime.markov.tools.analysis.hitting_probability", "<em>function</em> is_connected", "<em>function</em> is_rate_matrix", "<em>function</em> is_reversible", "<em>function</em> is_transition_matrix", "deeptime.markov.tools.analysis.mfpt", "deeptime.markov.tools.analysis.mfpt_sensitivity", "deeptime.markov.tools.analysis.pcca_memberships", "<em>function</em> rdl_decomposition", "deeptime.markov.tools.analysis.relaxation", "<em>function</em> stationary_distribution", "deeptime.markov.tools.analysis.stationary_distribution_sensitivity", "deeptime.markov.tools.analysis.timescale_sensitivity", "<em>function</em> timescales", "deeptime.markov.tools.estimation.bootstrap_counts", "deeptime.markov.tools.estimation.bootstrap_trajectories", "deeptime.markov.tools.estimation.connected_sets", "deeptime.markov.tools.estimation.count_matrix", "deeptime.markov.tools.estimation.error_perturbation", "deeptime.markov.tools.estimation.is_connected", "deeptime.markov.tools.estimation.largest_connected_set", "deeptime.markov.tools.estimation.largest_connected_submatrix", "deeptime.markov.tools.estimation.log_likelihood", "deeptime.markov.tools.estimation.prior_const", "deeptime.markov.tools.estimation.prior_neighbor", "deeptime.markov.tools.estimation.prior_rev", "deeptime.markov.tools.estimation.rate_matrix", "deeptime.markov.tools.estimation.tmatrix_cov", "deeptime.markov.tools.estimation.tmatrix_sampler", "deeptime.markov.tools.estimation.transition_matrix", "deeptime.markov.tools.flux.coarsegrain", "deeptime.markov.tools.flux.flux_consumers", "deeptime.markov.tools.flux.flux_matrix", "deeptime.markov.tools.flux.flux_producers", "deeptime.markov.tools.flux.flux_production", "deeptime.markov.tools.flux.mfpt", "deeptime.markov.tools.flux.pathways", "deeptime.markov.tools.flux.rate", "deeptime.markov.tools.flux.to_netflux", "deeptime.markov.tools.flux.total_flux", "<em>exception</em> ZeroRankError", "<em>function</em> drop_nan_rows", "<em>function</em> eig_corr", "<em>function</em> eigs", "<em>function</em> is_diagonal_matrix", "<em>function</em> is_square_matrix", "<em>function</em> schatten_norm", "<em>function</em> sort_eigs", "<em>function</em> spd_eig", "<em>function</em> spd_inv", "<em>function</em> spd_inv_split", "<em>function</em> spd_inv_sqrt", "<em>function</em> spd_truncated_svd", "<em>class</em> Energy2dPlot", "<em>class</em> Network", "<em>function</em> plot_adjacency", "<em>function</em> plot_ck_test", "<em>function</em> plot_contour2d_from_xyz", "<em>function</em> plot_density", "<em>function</em> plot_energy2d", "<em>function</em> plot_flux", "<em>function</em> plot_implied_timescales", "<em>function</em> plot_markov_model", "<em>class</em> SINDy", "<em>class</em> SINDyModel", "<em>class</em> STLSQ", "<em>class</em> EnergyLandscape2d", "<em>class</em> QuantityStatistics", "<em>class</em> ProgressCallback", "<em>function</em> supports_progress_interface", "<em>function</em> confidence_interval", "<em>class</em> ConcatDataset", "<em>class</em> TimeLaggedConcatDataset", "<em>class</em> TimeLaggedDataset", "<em>class</em> TrajectoriesDataset", "<em>class</em> TrajectoryDataset", "<em>function</em> timeshifted_split", "<em>class</em> cached_property", "<em>function</em> deprecated_argument", "<em>function</em> plotting_function", "<em>function</em> energy2d", "<em>function</em> handle_n_jobs", "<em>function</em> handle_progress_bar", "<em>function</em> module_available", "<em>function</em> atleast_nd", "<em>function</em> is_timelagged_dataset", "<em>function</em> to_dataset", "<em>class</em> ChapmanKolmogorovTest", "<em>class</em> ImpliedTimescales", "<em>function</em> ck_test", "<em>function</em> implied_timescales", "<em>class</em> WhiteningTransform", "<em>function</em> covar", "<em>function</em> covars", "<em>function</em> moments_XX", "<em>function</em> moments_XXXY", "<em>function</em> moments_block", "<em>class</em> BickleyJet", "<em>class</em> BirthDeathChain", "<em>class</em> CustomSystem", "<em>class</em> DoubleWellDiscrete", "<em>class</em> DrunkardsWalk", "<em>class</em> Ellipsoids", "<em>class</em> PBFSimulator", "<em>class</em> TimeDependentSystem", "<em>class</em> TimeIndependentSystem", "deeptime.base", "deeptime.basis", "deeptime.clustering", "deeptime.covariance", "deeptime.data", "deeptime.decomposition", "deeptime.kernels", "deeptime.markov", "deeptime.markov.hmm", "deeptime.markov.tools", "deeptime.numeric", "deeptime.plots", "deeptime.sindy", "deeptime.util", "Table Of Contents", "Datasets", "Arnold-Beltrami-Childress flow", "Bickley Jet", "Birth-death chain model", "Custom ODEs", "Custom SDEs", "Double-well 2D", "Double-well discrete", "Drunkard\u2019s walk", "Ellipsoids dataset", "One-dimensional Ornstein-Uhlenbeck process", "Position-based fluids", "One-dimensional Prinz potential", "Quadruple-well", "Asymmetric Quadruple-well", "Sqrt model", "Swissroll model", "Time-dependent quintuple well", "Metropolis chain in 1D energy landscape", "Triple-well 1D", "Triple-well 2D", "Computation times", "General examples", "Chapman-Kolmogorov test", "Clustering methods comparison", "Plotting two-dimensional contours from xyz", "Plotting two-dimensional densities from xy", "Energy surface", "Implied timescales", "Kernel CCA on the Bickley jet to find coherent sets", "Kernel CCA on the sqrt-Model to transform data", "Network plots", "PCCA+ on the Drunkard\u2019s walk example", "Identification of the Rossler system with SINDy", "Gross and net flux on the Drunkard\u2019s walk example", "TRAM on a 1D double well", "VAMP on Position Based Fluids", "VAMP vs. TICA vs. PCA", "Computation times", "Imprint", "Deep dim reduction", "For developers", "Dimension reduction", "Examples", "Markov state models", "Software License", "Clustering", "DMD", "EDMD", "VAMPNets on Alanine Dipeptide", "Coherent set comparison on Bickley jet", "MSM on Prinz potential", "Dimension reduction of double-wedge dataset", "Hidden Markov Models", "Kernel VAMP / kernel CCA", "Kernel EDMD", "Maximum-likelihood MSMs", "Coarse-graining with PCCA+", "SINDy", "Time-lagged autoencoders", "TICA", "Transition path theory", "TRAM", "Transition counting", "VAMP / time-lagged CCA", "VAMPNets"], "terms": {"deeptim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 133, 134, 135, 136, 140, 142, 145, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318], "base": [0, 1, 2, 3, 8, 11, 14, 23, 32, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 60, 63, 65, 66, 69, 71, 72, 73, 76, 82, 83, 93, 100, 101, 102, 104, 105, 106, 108, 109, 110, 158, 160, 174, 180, 181, 182, 183, 186, 187, 189, 190, 192, 200, 212, 218, 229, 234, 235, 239, 252, 253, 274, 275, 279, 280, 284, 288, 291, 292, 294, 295, 296, 297, 298, 302, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 119, 121, 123, 125, 126, 130, 131, 132, 135, 137, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 210, 212, 213, 214, 216, 218, 220, 221, 222, 223, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 255, 261, 262, 270, 285, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318], "superclass": [0, 2, 12, 14, 95], "It": [0, 8, 10, 12, 15, 22, 25, 26, 31, 32, 34, 35, 40, 42, 45, 46, 53, 54, 55, 61, 69, 70, 71, 75, 84, 93, 94, 105, 110, 121, 130, 158, 168, 186, 192, 194, 195, 196, 216, 221, 223, 235, 294, 295, 299, 300, 301, 302, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318], "i": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 247, 257, 258, 269, 270, 277, 283, 285, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "an": [0, 1, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 64, 65, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 121, 126, 130, 131, 141, 147, 148, 154, 158, 174, 177, 186, 187, 188, 189, 192, 193, 194, 195, 196, 210, 214, 216, 217, 220, 221, 224, 225, 226, 227, 228, 233, 234, 235, 245, 246, 251, 268, 269, 281, 282, 283, 286, 290, 294, 295, 297, 298, 299, 301, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "abstract": [0, 1, 3, 95, 294], "requir": [0, 18, 20, 43, 80, 84, 85, 87, 89, 93, 94, 96, 102, 105, 107, 110, 160, 216, 221, 235, 243, 293, 295, 298, 299, 300, 302, 306, 309, 313, 316, 318], "implement": [0, 9, 10, 11, 12, 13, 14, 17, 18, 22, 23, 27, 31, 34, 35, 41, 49, 51, 55, 61, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 89, 91, 95, 100, 102, 104, 105, 106, 107, 113, 119, 147, 158, 161, 195, 196, 200, 201, 218, 229, 235, 236, 237, 244, 252, 277, 293, 294, 295, 297, 299, 303, 306, 313, 314, 317], "__len__": [0, 217, 218, 303], "obtain": [0, 25, 33, 42, 53, 55, 84, 90, 92, 93, 94, 95, 97, 100, 103, 104, 105, 106, 108, 110, 149, 186, 191, 192, 193, 194, 199, 209, 223, 281, 283, 294, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317], "its": [0, 10, 11, 12, 14, 53, 55, 58, 61, 71, 82, 87, 100, 104, 105, 106, 110, 140, 158, 161, 174, 186, 190, 220, 233, 288, 294, 295, 298, 299, 300, 302, 303, 304, 306, 309, 310, 314, 317], "length": [0, 10, 11, 12, 14, 25, 26, 29, 42, 56, 63, 72, 81, 83, 84, 91, 92, 93, 95, 100, 104, 105, 106, 108, 109, 110, 116, 140, 146, 147, 173, 186, 196, 205, 208, 217, 218, 229, 231, 232, 233, 236, 237, 257, 270, 272, 278, 279, 280, 281, 298, 301, 303, 304, 314, 315, 316], "__getitem__": [0, 217, 218, 303], "one": [0, 1, 6, 8, 9, 11, 14, 15, 18, 20, 25, 29, 30, 31, 33, 40, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 64, 71, 72, 81, 83, 84, 88, 89, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 133, 136, 137, 147, 158, 161, 186, 195, 196, 219, 224, 225, 226, 227, 228, 229, 231, 233, 236, 237, 246, 277, 286, 292, 294, 295, 297, 298, 299, 300, 301, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318], "sever": [0, 61, 94, 100, 104, 105, 106, 114, 297, 316], "item": [0, 204, 303], "setflag": [0, 110, 203, 204, 205, 206, 207], "set": [0, 1, 2, 6, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 27, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 72, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 120, 132, 137, 138, 139, 146, 147, 148, 152, 153, 154, 161, 162, 168, 171, 172, 186, 188, 192, 194, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 212, 216, 220, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 252, 275, 285, 286, 291, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318], "writeabl": [0, 110, 203, 204, 205, 206, 207], "state": [0, 7, 9, 24, 25, 26, 28, 29, 30, 33, 36, 37, 38, 41, 42, 46, 48, 50, 52, 53, 54, 61, 63, 72, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127, 130, 131, 132, 133, 137, 138, 139, 141, 148, 153, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 186, 192, 194, 208, 212, 221, 229, 230, 231, 232, 233, 234, 236, 237, 245, 246, 247, 252, 256, 261, 268, 269, 271, 277, 278, 281, 283, 284, 285, 288, 294, 295, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "util": [0, 42, 53, 55, 61, 63, 64, 68, 90, 93, 100, 103, 104, 105, 106, 185, 188, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 229, 231, 236, 237, 244, 247, 248, 249, 252, 280, 281, 294, 295, 298, 302, 303, 305, 312, 318], "data": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 89, 92, 93, 94, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 139, 147, 158, 161, 188, 189, 190, 191, 193, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 212, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "timelaggeddataset": [0, 204, 207, 218, 252, 303], "A": [0, 1, 2, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 72, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 117, 119, 120, 127, 131, 132, 133, 134, 135, 136, 140, 141, 147, 151, 158, 160, 161, 164, 167, 168, 169, 170, 171, 176, 184, 186, 187, 192, 193, 194, 196, 197, 208, 213, 214, 216, 218, 230, 231, 232, 233, 235, 295, 297, 298, 299, 300, 301, 304, 306, 308, 309, 310, 313, 314, 316], "pair": [0, 43, 45, 47, 49, 51, 82, 110, 133, 140, 162, 163, 164, 165, 166, 170, 171, 175, 208, 230, 300, 313], "instantan": [0, 18, 19, 42, 47, 48, 52, 55, 58, 60, 63, 64, 65, 66, 73, 174, 205, 207, 218, 312, 313, 317], "timelag": [0, 18, 23, 63, 64, 205, 218], "timelaggedconcatdataset": [0, 205, 252], "concaten": [0, 11, 107, 203, 206, 207, 218, 252, 259, 266, 267, 273, 278, 279, 280, 281, 302, 304, 305, 306, 317], "trajectorydataset": [0, 205, 206, 252, 302, 305, 312, 318], "trajectori": [0, 9, 10, 11, 12, 14, 18, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 44, 47, 53, 55, 56, 57, 59, 62, 72, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 137, 145, 146, 147, 149, 206, 207, 208, 218, 224, 225, 226, 227, 229, 231, 232, 234, 235, 236, 237, 252, 257, 258, 259, 263, 265, 266, 267, 268, 269, 270, 272, 273, 278, 279, 280, 281, 288, 289, 290, 295, 299, 301, 302, 303, 304, 305, 306, 308, 309, 312, 313, 315, 316, 317, 318], "lagtim": [0, 18, 19, 20, 42, 43, 45, 47, 49, 51, 53, 55, 72, 83, 84, 86, 87, 89, 90, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 146, 149, 188, 206, 207, 208, 218, 219, 220, 221, 276, 278, 280, 281, 288, 289, 290, 295, 302, 303, 304, 305, 306, 309, 310, 313, 315, 316, 317, 318], "trajectoriesdataset": [0, 205, 207, 218, 252, 302], "multipl": [0, 14, 42, 53, 55, 58, 60, 88, 93, 100, 104, 105, 106, 109, 140, 146, 147, 206, 207, 208, 216, 224, 225, 229, 231, 236, 237, 315], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 30, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 125, 142, 147, 149, 158, 160, 161, 174, 180, 181, 182, 183, 184, 186, 189, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 217, 219, 220, 221, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 244, 246, 275, 288, 291, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318], "write": [0, 110, 203, 204, 205, 206, 207, 252, 311], "true": [0, 11, 13, 17, 18, 19, 42, 46, 48, 50, 52, 53, 54, 55, 56, 61, 64, 65, 68, 71, 72, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 118, 119, 120, 121, 123, 124, 125, 133, 134, 135, 136, 142, 145, 146, 147, 148, 149, 151, 152, 153, 160, 161, 164, 174, 176, 178, 187, 188, 191, 192, 193, 197, 198, 202, 203, 204, 205, 206, 207, 212, 216, 219, 221, 224, 225, 226, 227, 228, 229, 233, 254, 256, 259, 260, 265, 266, 267, 270, 271, 272, 273, 276, 279, 280, 283, 285, 286, 299, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318], "flag": [0, 84, 93, 110, 203, 204, 205, 206, 207], "contain": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 28, 30, 42, 43, 45, 47, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 64, 66, 69, 71, 81, 82, 83, 84, 89, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 139, 140, 148, 166, 173, 186, 187, 188, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 219, 220, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 276, 295, 296, 298, 301, 308, 309, 313, 314, 315, 316, 317], "arrai": [0, 8, 9, 10, 11, 12, 14, 16, 18, 22, 25, 26, 27, 31, 33, 35, 38, 41, 42, 64, 65, 68, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 89, 90, 91, 92, 93, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 164, 166, 173, 177, 186, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 212, 216, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 247, 254, 258, 259, 260, 266, 267, 273, 277, 284, 286, 294, 299, 303, 305, 306, 309, 310, 313, 314, 316], "model": [1, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 25, 27, 28, 30, 31, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 72, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 139, 146, 147, 149, 154, 158, 160, 161, 164, 168, 170, 171, 192, 193, 194, 195, 196, 197, 219, 220, 221, 222, 232, 233, 234, 247, 252, 253, 261, 274, 275, 276, 281, 282, 284, 286, 288, 289, 291, 294, 295, 296, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "none": [1, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 30, 32, 36, 37, 42, 43, 45, 47, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 121, 123, 125, 126, 129, 130, 131, 135, 137, 140, 141, 142, 145, 146, 149, 153, 158, 159, 160, 161, 171, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 209, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 283, 288, 294, 298, 309, 313, 317], "all": [1, 3, 8, 11, 12, 14, 15, 18, 20, 23, 42, 45, 53, 55, 61, 72, 73, 76, 82, 84, 89, 91, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 132, 139, 146, 147, 148, 149, 160, 166, 168, 173, 175, 180, 184, 186, 190, 192, 194, 197, 204, 207, 212, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 238, 292, 294, 295, 298, 299, 300, 301, 309, 310, 312, 313, 314, 315, 316, 317], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 294, 295, 298, 299, 303, 305, 307, 308, 309, 313, 317, 318], "option": [1, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 30, 32, 36, 37, 38, 39, 42, 43, 44, 45, 47, 49, 51, 53, 54, 55, 58, 60, 61, 63, 64, 66, 68, 71, 72, 73, 78, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 123, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 168, 171, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 208, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 294, 298, 299, 300, 306, 309, 311, 313, 314, 316, 317], "default": [1, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 72, 73, 78, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 121, 142, 146, 148, 151, 152, 153, 158, 160, 161, 168, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 208, 212, 216, 218, 220, 221, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 294, 295, 306, 311, 313, 314, 317], "which": [1, 6, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 27, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 51, 53, 54, 55, 58, 60, 61, 63, 64, 66, 72, 74, 75, 76, 77, 78, 79, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 117, 121, 137, 140, 141, 143, 145, 146, 161, 162, 173, 175, 176, 178, 179, 184, 186, 187, 189, 190, 192, 193, 194, 195, 196, 199, 204, 205, 208, 212, 219, 229, 233, 234, 235, 243, 244, 245, 246, 247, 276, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318], "can": [1, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 41, 42, 43, 45, 46, 47, 51, 53, 55, 58, 59, 60, 61, 63, 64, 70, 71, 72, 73, 79, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 119, 121, 128, 130, 133, 135, 146, 147, 148, 149, 151, 152, 153, 158, 160, 168, 175, 179, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 199, 201, 205, 208, 209, 213, 217, 219, 220, 221, 223, 224, 225, 229, 230, 232, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 282, 286, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "us": [1, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 75, 81, 82, 83, 84, 86, 89, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 121, 123, 125, 130, 133, 139, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 158, 160, 161, 162, 164, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 204, 205, 208, 212, 213, 216, 220, 221, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 240, 243, 244, 245, 247, 251, 260, 276, 286, 287, 288, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "initi": [1, 8, 11, 14, 15, 16, 18, 20, 22, 23, 27, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 83, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 128, 141, 158, 195, 196, 229, 231, 233, 235, 236, 237, 252, 277, 286, 288, 303, 306, 311, 313, 314, 315, 317], "In": [1, 11, 12, 15, 18, 19, 22, 30, 42, 43, 45, 49, 53, 55, 58, 61, 72, 84, 90, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 133, 135, 147, 158, 184, 186, 187, 189, 190, 208, 213, 217, 218, 220, 229, 231, 234, 235, 236, 237, 284, 286, 293, 297, 298, 299, 300, 301, 302, 304, 306, 307, 309, 312, 313, 314, 315, 316, 317, 318], "case": [1, 8, 11, 14, 15, 19, 24, 26, 30, 42, 47, 53, 55, 58, 60, 63, 64, 72, 74, 75, 76, 77, 78, 79, 80, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 125, 135, 175, 179, 184, 186, 187, 188, 189, 190, 208, 218, 220, 229, 230, 231, 234, 236, 237, 246, 278, 279, 294, 295, 299, 301, 306, 307, 309, 312, 313, 314, 315, 316, 317], "capabl": [1, 22, 27, 31, 33, 34, 35, 38, 41, 46, 252], "onlin": [1, 18, 65, 292, 295, 299], "learn": [1, 11, 14, 20, 42, 49, 53, 55, 58, 60, 63, 71, 72, 89, 94, 99, 101, 105, 107, 195, 196, 286, 293, 295, 303, 307, 309, 311, 312, 313, 317, 318], "e": [1, 6, 18, 23, 24, 26, 30, 33, 39, 42, 46, 48, 50, 52, 54, 55, 61, 63, 71, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 121, 126, 128, 129, 130, 131, 137, 141, 149, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 176, 186, 187, 189, 190, 192, 193, 194, 196, 205, 208, 212, 218, 219, 229, 233, 235, 288, 293, 294, 295, 297, 298, 299, 300, 302, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "updat": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 33, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197, 200, 201, 235, 254, 270, 294, 299], "thi": [1, 2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 125, 133, 135, 136, 139, 146, 147, 149, 157, 158, 160, 161, 168, 174, 176, 177, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 208, 211, 212, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 277, 278, 279, 281, 282, 283, 285, 286, 287, 288, 290, 292, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "resum": [1, 11, 14], "process": [1, 9, 10, 12, 20, 26, 27, 28, 31, 34, 35, 38, 40, 41, 42, 53, 55, 63, 71, 72, 82, 90, 94, 96, 100, 101, 103, 104, 105, 106, 107, 114, 119, 121, 130, 131, 133, 137, 141, 147, 158, 164, 168, 170, 171, 193, 216, 220, 232, 243, 249, 253, 274, 293, 295, 297, 299, 300, 301, 302, 306, 307, 309, 310, 312, 313, 314, 316, 317, 318], "attribut": [1, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 33, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 74, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 186, 192, 195, 196, 199, 201, 203, 204, 205, 206, 207, 209, 217, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237], "fetch_model": [1, 8, 11, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 83, 89, 94, 101, 102, 107, 108, 109, 195, 277, 278, 282, 283, 286, 289, 290, 294, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318], "yield": [1, 6, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 30, 32, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 62, 63, 65, 71, 72, 74, 75, 76, 77, 78, 79, 83, 89, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 184, 186, 187, 195, 218, 220, 223, 229, 230, 231, 233, 234, 236, 237, 295, 299, 301, 304, 306, 313, 317, 318], "fit": [1, 8, 11, 12, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 64, 72, 83, 89, 91, 92, 93, 94, 95, 101, 102, 107, 108, 109, 195, 196, 197, 277, 278, 282, 283, 286, 289, 290, 294, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318], "wa": [1, 9, 10, 11, 12, 14, 15, 19, 20, 21, 32, 42, 43, 44, 46, 47, 48, 50, 52, 53, 55, 71, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 121, 137, 145, 158, 161, 185, 186, 189, 190, 192, 208, 214, 223, 294, 297, 298, 300, 307, 309, 313, 315, 316, 317], "call": [1, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 83, 89, 90, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 133, 136, 146, 147, 160, 185, 195, 197, 199, 200, 216, 221, 233, 294, 297, 298, 299, 306, 308, 313, 314, 316, 317], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 254, 258, 269, 270, 286, 288, 294, 299, 303, 305, 307, 309, 313, 314, 315], "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 191, 193, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 252, 294, 297, 299, 306, 312, 317], "kwarg": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 83, 89, 90, 94, 101, 102, 103, 107, 108, 109, 193, 195, 199, 223], "": [1, 2, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 30, 33, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 72, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 119, 120, 121, 122, 124, 127, 130, 131, 133, 138, 141, 143, 144, 147, 148, 150, 151, 152, 153, 161, 180, 182, 184, 185, 186, 192, 194, 195, 196, 197, 216, 226, 228, 229, 231, 233, 235, 236, 237, 253, 259, 266, 267, 269, 273, 274, 275, 288, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318], "intern": [1, 8, 11, 14, 15, 18, 20, 22, 27, 31, 33, 34, 35, 38, 41, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 69, 71, 83, 89, 91, 92, 93, 94, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 195, 234, 235, 295, 299, 314], "overwrit": [1, 8, 47, 100, 104, 105, 106, 109, 192, 194], "wai": [1, 8, 11, 15, 23, 47, 72, 109, 196, 235, 294, 299, 314, 317], "everi": [1, 8, 15, 47, 55, 61, 82, 93, 100, 104, 105, 106, 109, 110, 111, 146, 147, 160, 180, 182, 288, 299, 306, 317], "autonom": [1, 8, 47], "instanc": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 26, 27, 29, 31, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 185, 195, 196, 197, 205, 207, 220, 221, 232, 303, 306, 309, 313, 316, 317, 318], "sometim": [1, 8, 47, 83, 299, 300, 310, 313, 317], "partial_fit": [1, 8, 14, 15, 18, 20, 47, 53, 55, 63, 294, 295, 299], "avail": [1, 8, 11, 13, 14, 15, 16, 17, 18, 42, 43, 47, 51, 53, 55, 72, 82, 83, 89, 90, 93, 94, 96, 97, 100, 104, 105, 106, 116, 118, 147, 213, 215, 219, 220, 229, 231, 236, 237, 294, 295, 297, 299, 302, 306, 313, 315, 316, 317], "get": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 72, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 162, 195, 196, 197, 204, 209, 235, 286, 299, 300, 302, 303, 306, 309, 312, 315], "array_lik": [1, 3, 4, 5, 6, 7, 8, 11, 14, 15, 18, 20, 24, 43, 45, 47, 49, 51, 53, 55, 58, 59, 60, 62, 63, 64, 72, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 117, 119, 120, 132, 149, 160, 161, 168, 171, 195, 216, 223, 229, 230, 231, 236, 237], "addit": [1, 8, 11, 14, 15, 18, 20, 30, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 71, 83, 89, 93, 94, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 173, 195, 223, 224, 225, 233, 234, 236, 237, 298, 315, 317], "self": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 172, 195, 196, 197, 200, 229, 294, 303], "refer": [1, 8, 11, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 32, 33, 41, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 71, 72, 81, 82, 83, 84, 89, 91, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 119, 121, 130, 131, 133, 137, 139, 141, 147, 148, 149, 151, 152, 153, 154, 158, 160, 161, 162, 164, 167, 168, 169, 170, 171, 191, 192, 194, 195, 197, 229, 233, 235, 292, 293, 294, 295, 297, 298, 299, 300, 301, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "fit_fetch": [1, 8, 11, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 72, 83, 89, 94, 101, 102, 107, 108, 109, 195, 276, 278, 280, 281, 288, 302, 303, 304, 305, 315], "subsequ": [1, 8, 9, 11, 13, 14, 15, 17, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 83, 89, 93, 94, 96, 101, 102, 107, 108, 109, 195, 212, 294, 299, 305, 307, 313, 314], "fetch": [1, 8, 11, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 72, 83, 89, 94, 100, 101, 102, 104, 105, 106, 107, 108, 109, 195, 294, 299, 302, 313, 316], "argument": [1, 8, 11, 14, 15, 18, 20, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 83, 84, 89, 90, 93, 94, 99, 101, 102, 103, 105, 107, 108, 109, 173, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 210, 213, 216, 218, 232, 235, 295, 298, 306, 309, 313, 314, 318], "get_param": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197], "deep": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197, 252, 302, 303, 305, 312, 318], "fals": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 116, 118, 119, 120, 123, 125, 133, 134, 135, 136, 140, 145, 148, 149, 151, 152, 153, 160, 161, 164, 174, 176, 178, 180, 182, 183, 190, 192, 195, 196, 197, 199, 202, 208, 211, 216, 221, 224, 225, 226, 227, 228, 229, 230, 233, 234, 236, 255, 259, 262, 264, 265, 266, 267, 269, 273, 276, 284, 289, 290, 301, 302, 303, 304, 306, 312, 314, 316, 317, 318], "param": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197, 305, 307], "name": [1, 2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197, 199, 215, 299, 306, 309, 311], "map": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 31, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 189, 190, 195, 196, 197, 229, 233, 234, 246, 278, 293, 299, 300, 303, 306, 308, 312, 313, 316, 317], "valu": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 121, 125, 126, 127, 128, 129, 131, 141, 150, 155, 156, 157, 158, 162, 163, 164, 165, 166, 168, 170, 171, 174, 178, 184, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 202, 212, 213, 229, 230, 234, 235, 283, 294, 295, 299, 306, 307, 310, 311, 313, 314, 316, 317, 318], "string": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 158, 186, 192, 194, 195, 196, 200, 235, 309, 318], "ani": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 133, 173, 187, 195, 196, 202, 206, 216, 254, 255, 264, 270, 292, 298, 299, 303, 306, 307, 310, 315, 317, 318], "set_param": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197], "work": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197, 210, 216, 243, 293, 298, 302, 310, 311, 315, 318], "simpl": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197, 216, 267, 288, 306, 315], "well": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 25, 27, 28, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 76, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 125, 195, 196, 197, 201, 218, 232, 252, 253, 274, 275, 278, 291, 296, 297, 298, 300, 301, 302, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317], "nest": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197], "object": [1, 2, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 25, 26, 28, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 67, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 158, 160, 164, 177, 186, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 217, 220, 222, 235, 251, 252, 277, 292, 297, 298, 299, 305, 306, 307, 309, 313, 314, 315], "pipelin": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197, 295, 302, 313], "latter": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197, 299, 317], "have": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 129, 140, 151, 161, 162, 163, 165, 173, 190, 195, 196, 197, 208, 212, 216, 224, 225, 226, 227, 229, 231, 233, 235, 236, 237, 294, 298, 299, 302, 309, 311, 312, 313, 315, 316], "form": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 25, 26, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 149, 174, 195, 196, 197, 206, 257, 258, 277, 298, 299, 300, 306, 307, 308, 311, 313, 314, 317], "compon": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 73, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 133, 148, 151, 152, 153, 184, 195, 196, 197, 223, 276, 289, 290, 295, 299, 307, 310, 311, 313, 317], "__": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 195, 196, 197], "so": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 30, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 133, 135, 159, 168, 184, 195, 196, 197, 213, 216, 221, 235, 294, 295, 297, 298, 299, 308, 312, 313, 314, 315, 317, 318], "possibl": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 29, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 168, 192, 194, 195, 196, 197, 212, 218, 224, 225, 226, 227, 228, 233, 235, 292, 295, 297, 299, 306, 307, 310, 313, 317, 318], "each": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 72, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 134, 136, 139, 140, 146, 147, 148, 159, 166, 168, 173, 174, 186, 192, 194, 195, 196, 197, 208, 212, 219, 220, 221, 223, 224, 225, 226, 227, 229, 231, 235, 236, 237, 294, 297, 298, 299, 302, 304, 306, 309, 310, 311, 313, 314, 315, 316, 317], "dict": [1, 2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 186, 187, 189, 190, 191, 194, 195, 196, 197, 236, 237, 267, 278, 279, 280, 303, 304, 305], "properti": [1, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 74, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 133, 136, 162, 186, 195, 196, 199, 203, 204, 205, 206, 207, 209, 219, 220, 221, 229, 230, 231, 232, 233, 234, 235, 236, 237, 294, 300, 304, 309, 311, 313, 316, 318], "has_model": [1, 8, 11, 14, 15, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 83, 89, 94, 101, 102, 107, 108, 109, 195], "bool": [1, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 24, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 68, 72, 80, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 119, 120, 123, 124, 125, 133, 134, 135, 136, 140, 142, 145, 148, 149, 151, 152, 153, 160, 161, 174, 176, 177, 178, 180, 183, 187, 188, 190, 191, 193, 195, 197, 199, 201, 202, 208, 212, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 283], "report": [1, 8, 11, 14, 15, 16, 18, 20, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 83, 89, 94, 101, 102, 107, 108, 109, 195, 299, 314], "whether": [1, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 24, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 63, 64, 65, 68, 72, 80, 83, 84, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 118, 142, 148, 149, 151, 152, 153, 176, 177, 180, 183, 187, 188, 190, 191, 193, 195, 197, 199, 201, 208, 211, 212, 215, 217, 219, 220, 221, 229, 230, 231, 233, 236, 237, 298, 309, 311, 313, 317], "assum": [1, 8, 11, 14, 15, 18, 20, 26, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 71, 81, 83, 84, 89, 93, 94, 96, 101, 102, 105, 106, 107, 108, 109, 110, 113, 146, 147, 178, 195, 196, 199, 212, 218, 223, 233, 295, 297, 300, 313, 315, 317, 318], "otherwis": [1, 8, 11, 14, 15, 18, 20, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 61, 63, 71, 72, 80, 83, 84, 86, 89, 93, 94, 95, 96, 101, 102, 105, 107, 108, 109, 110, 111, 124, 125, 133, 134, 135, 136, 151, 161, 176, 186, 187, 191, 192, 195, 212, 218, 298, 306, 313, 314, 316, 317, 318], "shortcut": [1, 8, 11, 14, 15, 18, 20, 42, 43, 45, 47, 49, 51, 53, 55, 58, 60, 63, 83, 89, 94, 101, 102, 107, 108, 109, 195, 219], "copi": [2, 9, 10, 12, 19, 21, 42, 44, 46, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 81, 82, 84, 90, 91, 92, 93, 95, 100, 102, 103, 104, 105, 106, 107, 111, 196, 197, 209, 216, 224, 225, 226, 227, 228, 229, 255, 295, 298, 305], "make": [2, 9, 10, 12, 16, 19, 21, 42, 44, 46, 48, 50, 52, 54, 59, 61, 62, 63, 64, 81, 82, 83, 84, 90, 91, 92, 93, 95, 96, 97, 99, 100, 103, 104, 105, 106, 111, 154, 162, 192, 194, 196, 229, 294, 295, 298, 299, 303, 305, 309, 310, 312, 313, 314, 316, 317], "new": [2, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 42, 44, 46, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 82, 84, 90, 91, 92, 93, 94, 95, 100, 103, 104, 105, 106, 107, 111, 147, 188, 194, 196, 205, 207, 216, 229, 238, 252, 294, 298, 299, 302, 311, 317], "estim": [2, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 69, 71, 72, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 142, 191, 193, 195, 196, 197, 198, 212, 219, 221, 228, 235, 238, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 297, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 318], "__call__": [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 20, 21, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 83, 200, 223, 229, 231, 236, 237, 303], "arg": [3, 9, 10, 11, 12, 14, 20, 21, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 83, 90, 101, 103, 107, 109, 173, 199, 200, 220, 233], "function": [3, 9, 10, 11, 12, 14, 20, 21, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 81, 83, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 119, 146, 147, 149, 158, 164, 195, 196, 197, 200, 229, 231, 236, 237, 247, 252, 282, 294, 295, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317], "input": [3, 4, 5, 6, 7, 9, 11, 14, 16, 18, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 63, 71, 72, 83, 84, 86, 89, 93, 94, 96, 100, 104, 105, 106, 107, 108, 109, 110, 114, 146, 161, 172, 173, 178, 180, 184, 195, 196, 197, 204, 208, 214, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 235, 293, 301, 312, 313, 315, 317, 318], "basi": [4, 5, 6, 7, 10, 19, 21, 42, 45, 46, 47, 53, 54, 55, 69, 196, 252, 295, 301, 305, 311, 313, 317], "obs1": [4, 121, 130], "callabl": [4, 16, 25, 26, 42, 45, 46, 47, 48, 50, 52, 53, 54, 55, 58, 60, 61, 63, 72, 73, 102, 187, 196, 210, 221, 229, 231, 236, 237, 305], "ndarrai": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 26, 32, 36, 37, 39, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 202, 205, 206, 207, 208, 212, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 294], "obs2": [4, 121, 130], "oper": [4, 20, 21, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 58, 60, 61, 63, 64, 69, 71, 100, 104, 105, 106, 108, 221, 229, 233, 235, 293, 295, 297, 298, 300, 301, 307, 308, 313, 314, 317, 318], "evalu": [4, 5, 6, 7, 11, 16, 22, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 42, 52, 53, 55, 58, 60, 61, 63, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 93, 95, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 146, 150, 186, 195, 196, 199, 221, 223, 229, 231, 235, 236, 237, 283, 288, 295, 299, 302, 303, 306, 307, 308, 309, 314, 315, 317, 318], "f_1": [4, 150, 311, 317], "circ": [4, 293], "f_2": [4, 311], "x": [4, 5, 6, 7, 11, 12, 15, 18, 21, 22, 23, 25, 26, 27, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 50, 52, 53, 54, 55, 58, 60, 65, 66, 74, 75, 76, 77, 78, 79, 100, 104, 105, 106, 111, 119, 121, 130, 131, 137, 141, 149, 150, 184, 188, 189, 190, 192, 195, 196, 197, 198, 208, 212, 218, 223, 224, 225, 226, 227, 228, 229, 230, 235, 257, 258, 259, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 279, 283, 286, 288, 290, 295, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "where": [4, 6, 7, 9, 10, 11, 12, 18, 25, 26, 27, 30, 33, 38, 42, 46, 53, 54, 55, 72, 74, 75, 77, 78, 88, 89, 91, 93, 95, 100, 104, 105, 106, 107, 111, 112, 115, 116, 117, 118, 146, 147, 158, 174, 178, 197, 212, 218, 234, 235, 283, 284, 295, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317], "ar": [4, 8, 10, 11, 12, 14, 15, 18, 19, 20, 21, 23, 29, 32, 36, 37, 38, 39, 42, 43, 53, 55, 56, 58, 60, 61, 62, 63, 64, 66, 68, 71, 72, 75, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 119, 123, 125, 129, 130, 131, 136, 139, 140, 147, 148, 149, 158, 160, 161, 163, 165, 168, 173, 174, 175, 178, 180, 181, 182, 183, 184, 186, 187, 192, 193, 194, 196, 197, 199, 202, 204, 208, 211, 212, 216, 218, 220, 221, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 246, 247, 276, 277, 283, 284, 285, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "observ": [4, 5, 6, 30, 36, 37, 42, 47, 48, 50, 52, 53, 54, 55, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 108, 110, 111, 117, 121, 126, 127, 130, 131, 141, 146, 147, 150, 154, 159, 160, 219, 221, 223, 234, 246, 252, 262, 268, 276, 283, 293, 295, 297, 299, 301, 302, 303, 305, 306, 309, 310, 312, 313, 314, 317, 318], "first": [4, 15, 18, 22, 23, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 41, 42, 46, 55, 56, 58, 60, 63, 81, 82, 84, 89, 96, 100, 104, 105, 106, 107, 109, 110, 111, 113, 119, 123, 125, 133, 137, 138, 142, 145, 148, 149, 151, 152, 153, 167, 174, 181, 182, 183, 186, 187, 196, 202, 217, 223, 226, 227, 228, 230, 245, 294, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 311, 312, 313, 314, 317, 318], "second": [4, 6, 15, 18, 19, 58, 60, 63, 93, 100, 104, 105, 106, 107, 108, 109, 110, 111, 121, 130, 186, 208, 225, 227, 228, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 299, 311, 313, 314, 317], "n": [4, 5, 6, 7, 8, 11, 14, 15, 18, 19, 20, 21, 24, 29, 33, 42, 44, 45, 46, 48, 50, 52, 53, 54, 55, 61, 65, 69, 72, 73, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 125, 128, 129, 130, 131, 132, 133, 137, 139, 146, 147, 149, 158, 160, 162, 174, 175, 179, 180, 181, 182, 183, 184, 186, 187, 192, 194, 199, 205, 208, 212, 216, 219, 223, 225, 227, 228, 230, 232, 233, 234, 235, 283, 293, 295, 297, 300, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317], "d": [4, 5, 6, 7, 9, 10, 11, 12, 15, 20, 21, 24, 25, 26, 27, 32, 33, 34, 35, 39, 40, 41, 43, 52, 69, 74, 75, 76, 77, 78, 79, 89, 91, 92, 95, 105, 109, 121, 125, 130, 131, 140, 141, 149, 154, 158, 161, 184, 207, 216, 223, 230, 235, 257, 258, 293, 295, 297, 298, 299, 301, 303, 305, 306, 308, 311, 312, 315], "np": [4, 5, 6, 7, 9, 10, 11, 12, 16, 18, 22, 25, 26, 27, 31, 33, 34, 35, 38, 41, 42, 43, 53, 55, 56, 57, 58, 59, 60, 63, 64, 72, 83, 84, 85, 91, 92, 93, 100, 102, 104, 105, 106, 107, 111, 115, 117, 118, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 185, 186, 195, 196, 202, 208, 216, 218, 223, 229, 231, 236, 237, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 294, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "dimension": [4, 5, 6, 7, 8, 10, 11, 12, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 40, 41, 47, 54, 55, 63, 69, 92, 107, 186, 189, 190, 191, 212, 223, 230, 233, 234, 235, 249, 253, 261, 274, 275, 280, 290, 291, 295, 296, 299, 301, 303, 305, 306, 308, 310, 312, 313, 314, 317, 318], "point": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 22, 25, 26, 27, 29, 31, 33, 34, 35, 38, 41, 42, 55, 61, 71, 74, 75, 76, 77, 78, 79, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 109, 121, 134, 135, 136, 147, 149, 160, 196, 223, 224, 225, 226, 227, 229, 231, 233, 235, 236, 237, 254, 259, 266, 267, 273, 293, 297, 299, 300, 301, 306, 307, 308, 310, 311, 312, 313, 314, 317], "out": [4, 5, 6, 7, 15, 29, 61, 106, 110, 131, 141, 161, 196, 197, 223, 233, 246, 261, 270, 276, 283, 286, 288, 297, 298, 300, 318], "result": [4, 5, 6, 7, 11, 12, 14, 16, 23, 28, 42, 43, 53, 56, 61, 83, 84, 89, 90, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 111, 158, 161, 185, 188, 192, 194, 196, 198, 202, 218, 219, 221, 223, 234, 251, 295, 299, 305, 306, 307, 310, 313, 316, 317], "p": [4, 5, 6, 7, 20, 21, 24, 29, 30, 36, 37, 39, 42, 45, 53, 55, 78, 81, 89, 93, 94, 100, 104, 105, 106, 108, 113, 119, 121, 128, 130, 131, 133, 135, 136, 141, 154, 159, 160, 164, 168, 170, 171, 178, 186, 192, 194, 212, 223, 230, 233, 234, 256, 284, 297, 300, 301, 305, 306, 307, 309, 310, 312, 313, 314, 316, 317], "transform": [4, 5, 6, 7, 9, 10, 11, 12, 14, 19, 20, 21, 36, 37, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 73, 83, 195, 196, 223, 229, 233, 235, 239, 252, 268, 269, 275, 277, 278, 280, 281, 282, 288, 290, 291, 293, 296, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 312, 313, 315, 317, 318], "int": [6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 49, 51, 53, 55, 56, 57, 58, 60, 61, 63, 71, 72, 73, 78, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 158, 159, 160, 161, 162, 163, 165, 168, 174, 175, 184, 186, 189, 190, 191, 193, 196, 197, 200, 206, 207, 208, 212, 213, 216, 218, 220, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 294, 299, 302, 303, 304, 312, 313, 317, 318], "number": [6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 49, 51, 53, 55, 57, 58, 60, 61, 63, 72, 73, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 123, 125, 128, 129, 130, 131, 133, 139, 140, 141, 142, 145, 146, 147, 158, 160, 161, 168, 169, 173, 174, 175, 186, 191, 193, 197, 200, 202, 208, 212, 213, 216, 220, 222, 229, 231, 232, 233, 234, 235, 236, 237, 261, 277, 295, 297, 298, 299, 302, 304, 306, 308, 310, 311, 313, 314, 315], "datapoint": [6, 299, 300, 305, 307], "mathbf": [6, 11, 42, 45, 55, 100, 104, 105, 106, 137, 174, 299, 308, 313], "mathbb": [6, 7, 18, 26, 29, 42, 43, 45, 46, 48, 50, 52, 54, 55, 74, 75, 76, 77, 78, 79, 92, 95, 100, 104, 105, 106, 119, 121, 126, 128, 129, 130, 131, 133, 137, 141, 150, 159, 160, 184, 233, 234, 235, 257, 258, 293, 295, 297, 300, 301, 306, 307, 309, 310, 311, 312, 314, 316, 317], "r": [6, 7, 23, 26, 29, 42, 43, 45, 49, 53, 54, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 92, 95, 96, 97, 100, 101, 102, 104, 105, 106, 109, 111, 113, 114, 119, 125, 139, 140, 147, 161, 174, 178, 181, 182, 183, 184, 196, 197, 199, 219, 229, 233, 234, 235, 257, 258, 262, 293, 294, 295, 297, 300, 301, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318], "uniqu": [6, 93, 109, 110, 303, 309, 314], "most": [6, 82, 84, 90, 93, 101, 102, 107, 109, 147, 158, 161, 184, 299, 306, 309, 313, 314, 316], "degre": [6, 55, 61, 78, 157, 195, 286, 293, 301, 305, 310, 311], "mean": [6, 11, 12, 14, 16, 18, 19, 22, 27, 31, 34, 35, 36, 37, 41, 42, 53, 55, 61, 62, 63, 65, 71, 72, 82, 89, 91, 92, 93, 95, 96, 100, 102, 104, 105, 106, 109, 111, 137, 138, 167, 177, 186, 193, 197, 199, 201, 216, 223, 224, 225, 226, 227, 228, 229, 231, 236, 237, 252, 277, 294, 295, 297, 298, 302, 303, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317], "mapsto": [6, 23, 36, 37, 45, 46, 189, 229, 312, 317], "left": [6, 8, 9, 11, 23, 33, 38, 39, 41, 42, 53, 55, 58, 60, 64, 72, 74, 75, 77, 93, 96, 100, 104, 105, 106, 111, 124, 125, 135, 137, 140, 142, 149, 150, 154, 156, 157, 158, 159, 160, 164, 178, 186, 187, 191, 192, 194, 196, 229, 289, 299, 301, 304, 305, 311, 312, 317], "prod_": [6, 89, 111, 154, 159, 160, 309], "1": [6, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 66, 69, 71, 72, 74, 75, 78, 79, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 177, 178, 182, 183, 186, 188, 192, 194, 195, 196, 197, 200, 202, 208, 212, 213, 216, 218, 219, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "_d": [6, 299], "k_d": 6, "sum": [6, 12, 24, 42, 60, 71, 81, 93, 100, 104, 105, 106, 107, 110, 111, 116, 134, 136, 197, 226, 227, 277, 283, 299, 304, 314, 315, 317], "leq": [6, 24, 134, 157, 314], "right": [6, 8, 9, 11, 23, 25, 26, 33, 38, 39, 41, 42, 53, 55, 74, 75, 77, 93, 96, 100, 104, 105, 106, 111, 124, 125, 135, 137, 139, 140, 149, 150, 154, 156, 157, 158, 159, 160, 164, 178, 196, 229, 231, 236, 237, 265, 278, 284, 287, 289, 292, 298, 299, 304, 305, 311, 313, 314, 317], "numpi": [6, 22, 25, 26, 27, 31, 33, 34, 35, 38, 41, 42, 43, 47, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 68, 91, 92, 93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 173, 185, 186, 196, 216, 247, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "shape": [6, 9, 11, 16, 18, 19, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 38, 41, 53, 55, 68, 83, 91, 92, 93, 101, 109, 110, 117, 118, 123, 125, 137, 145, 149, 158, 160, 177, 186, 187, 189, 190, 195, 196, 197, 198, 202, 206, 207, 212, 216, 220, 229, 231, 234, 235, 236, 237, 258, 259, 262, 266, 267, 268, 270, 273, 283, 300, 301, 302, 303, 304, 305, 307, 310, 312, 313, 314, 315, 317, 318], "n_test_point": [6, 229, 231, 236, 237], "n_monomi": 6, "size": [6, 10, 14, 18, 22, 25, 26, 27, 29, 31, 33, 34, 35, 38, 40, 41, 53, 55, 56, 61, 79, 84, 85, 90, 92, 93, 100, 101, 103, 104, 105, 106, 109, 110, 111, 147, 148, 160, 174, 185, 186, 192, 194, 196, 206, 207, 208, 229, 231, 233, 235, 236, 237, 254, 270, 277, 281, 284, 287, 294, 299, 300, 301, 303, 308, 313, 314, 316], "maximum": [6, 11, 14, 15, 72, 82, 83, 84, 89, 92, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 109, 111, 158, 161, 168, 186, 193, 197, 220, 232, 233, 252, 277, 297, 299, 306, 315, 316], "must": [6, 11, 15, 18, 20, 24, 25, 26, 29, 42, 53, 55, 58, 60, 61, 63, 72, 75, 78, 90, 92, 93, 94, 95, 100, 102, 104, 105, 106, 107, 116, 121, 123, 125, 130, 131, 140, 142, 145, 174, 177, 178, 186, 196, 205, 206, 207, 208, 229, 231, 233, 235, 236, 237, 298, 306, 309, 312, 313, 317, 318], "posit": [6, 10, 15, 23, 25, 26, 32, 53, 55, 61, 63, 68, 84, 102, 107, 133, 166, 174, 180, 181, 182, 183, 184, 186, 187, 192, 194, 206, 207, 213, 217, 229, 235, 253, 274, 275, 278, 279, 284, 291, 296, 302, 303, 311, 313, 314], "dimens": [6, 7, 8, 11, 12, 14, 18, 19, 23, 25, 26, 32, 36, 42, 46, 47, 48, 50, 52, 53, 54, 55, 58, 60, 63, 75, 92, 109, 110, 111, 184, 202, 207, 208, 212, 216, 223, 229, 231, 234, 236, 237, 252, 294, 299, 300, 303, 304, 313, 314, 316, 317], "exampl": [6, 10, 12, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 41, 53, 61, 83, 84, 91, 92, 93, 100, 102, 104, 105, 106, 107, 110, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 186, 195, 208, 216, 218, 233, 234, 242, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 294, 299, 302, 304, 306, 307, 308, 309, 313, 315, 316, 318], "given": [6, 8, 11, 12, 15, 18, 26, 27, 31, 34, 35, 36, 37, 40, 41, 42, 53, 55, 56, 58, 61, 63, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 89, 91, 92, 93, 94, 95, 96, 97, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 141, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 169, 186, 192, 194, 195, 197, 202, 216, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 297, 298, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317], "three": [6, 10, 22, 23, 82, 100, 104, 105, 106, 278, 299, 303, 304, 306, 309, 311, 317], "test": [6, 11, 22, 27, 31, 33, 34, 35, 38, 41, 42, 53, 57, 71, 72, 80, 83, 89, 90, 93, 100, 103, 104, 105, 106, 109, 110, 135, 188, 197, 200, 211, 219, 221, 229, 231, 235, 236, 237, 251, 252, 254, 275, 283, 286, 291, 296, 302, 303, 317, 318], "import": [6, 12, 13, 17, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 38, 41, 53, 55, 100, 102, 104, 105, 106, 107, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 185, 186, 215, 238, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 294, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "random": [6, 10, 11, 14, 16, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 41, 53, 56, 57, 72, 92, 98, 102, 147, 185, 208, 229, 231, 233, 234, 236, 237, 254, 270, 277, 281, 294, 299, 300, 301, 303, 306, 307, 308, 313, 314], "normal": [6, 10, 26, 30, 53, 83, 91, 100, 102, 104, 105, 106, 107, 125, 140, 161, 197, 212, 233, 235, 281, 284, 285, 294, 300, 301, 303, 305, 306, 308, 310, 313, 314, 315, 317], "3": [6, 10, 22, 23, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 45, 49, 51, 53, 55, 61, 72, 82, 89, 92, 94, 96, 100, 104, 105, 106, 107, 109, 110, 114, 119, 134, 136, 140, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 164, 186, 196, 208, 218, 229, 235, 254, 256, 257, 258, 259, 266, 269, 272, 274, 276, 277, 278, 279, 280, 282, 284, 285, 286, 288, 289, 290, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "up": [6, 22, 27, 31, 32, 33, 34, 35, 38, 41, 42, 71, 100, 104, 105, 106, 109, 116, 134, 136, 147, 192, 194, 235, 299, 301, 302, 303, 305, 307, 311, 314], "two": [6, 11, 14, 15, 23, 27, 29, 30, 34, 35, 36, 38, 41, 42, 43, 49, 61, 63, 72, 74, 75, 76, 77, 78, 79, 83, 84, 87, 89, 93, 94, 96, 100, 102, 104, 105, 106, 107, 108, 110, 119, 121, 130, 149, 189, 190, 191, 212, 226, 227, 228, 229, 233, 234, 235, 249, 275, 276, 280, 288, 290, 291, 295, 296, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318], "0": [6, 10, 11, 14, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 53, 55, 56, 58, 60, 61, 63, 72, 78, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 168, 170, 174, 177, 184, 186, 188, 192, 193, 194, 196, 197, 199, 202, 208, 212, 216, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "2": [6, 10, 11, 12, 15, 22, 23, 26, 27, 30, 31, 33, 34, 35, 38, 40, 41, 42, 43, 45, 49, 51, 53, 55, 58, 60, 61, 63, 66, 71, 72, 73, 74, 75, 81, 83, 89, 92, 93, 94, 96, 97, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 123, 125, 130, 131, 133, 134, 136, 139, 140, 142, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 160, 161, 164, 177, 183, 185, 186, 187, 188, 194, 195, 197, 202, 208, 212, 213, 216, 217, 218, 219, 223, 225, 227, 229, 232, 233, 234, 235, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "expect": [6, 11, 14, 42, 55, 61, 93, 100, 101, 102, 104, 105, 106, 110, 111, 127, 128, 129, 131, 137, 141, 186, 197, 252, 303, 306, 307, 308, 310, 312, 313, 314, 317], "y": [6, 22, 23, 36, 37, 38, 41, 43, 45, 53, 55, 58, 60, 65, 66, 67, 74, 75, 76, 77, 78, 79, 121, 130, 131, 137, 141, 188, 189, 190, 195, 196, 197, 198, 208, 212, 218, 219, 223, 224, 225, 226, 227, 228, 229, 235, 259, 262, 266, 267, 268, 270, 272, 273, 286, 290, 295, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 317, 318], "g": [6, 18, 42, 45, 46, 48, 50, 51, 52, 54, 61, 74, 75, 76, 77, 78, 79, 80, 84, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 133, 137, 187, 189, 190, 192, 193, 194, 196, 218, 282, 290, 293, 294, 295, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 317, 318], "third": [6, 10, 109, 110, 111, 161, 317], "itself": [6, 61, 106, 235, 294, 299, 308, 311, 317], "assert_almost_equ": 6, "get_feature_nam": 6, "input_featur": [6, 195, 196, 311], "list": [6, 8, 11, 13, 15, 16, 18, 25, 26, 29, 42, 43, 47, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 132, 137, 138, 141, 148, 149, 162, 168, 171, 173, 186, 192, 193, 194, 195, 196, 197, 199, 203, 204, 206, 207, 208, 218, 219, 220, 221, 222, 228, 232, 233, 235, 298, 299, 304, 309, 314], "str": [6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 42, 43, 44, 45, 53, 55, 58, 60, 61, 63, 66, 68, 69, 70, 71, 72, 73, 83, 84, 86, 89, 90, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 142, 158, 161, 174, 175, 179, 180, 181, 182, 183, 186, 188, 189, 192, 194, 196, 199, 210, 215, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237], "see": [6, 11, 12, 14, 15, 16, 18, 19, 32, 42, 43, 44, 45, 47, 49, 51, 53, 55, 60, 61, 63, 64, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 86, 89, 90, 91, 93, 96, 101, 103, 104, 107, 110, 119, 147, 162, 167, 170, 175, 185, 189, 191, 192, 194, 195, 196, 197, 198, 212, 216, 218, 219, 225, 227, 232, 234, 235, 276, 278, 279, 285, 287, 288, 289, 293, 294, 297, 299, 300, 307, 311, 313, 315, 316, 317, 318], "get_feature_names_out": [6, 195, 196], "featur": [6, 30, 42, 46, 47, 48, 50, 52, 53, 54, 55, 58, 63, 101, 195, 196, 197, 234, 239, 303, 307, 308, 311, 313, 317, 318], "If": [6, 8, 11, 13, 14, 15, 16, 17, 18, 33, 42, 43, 45, 53, 55, 56, 58, 61, 71, 72, 82, 84, 89, 90, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 119, 120, 123, 124, 125, 126, 129, 133, 135, 145, 146, 147, 149, 158, 160, 161, 162, 174, 175, 178, 185, 186, 187, 191, 192, 194, 196, 197, 199, 202, 206, 207, 212, 218, 219, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 292, 294, 297, 298, 299, 300, 302, 306, 309, 311, 313, 314, 316, 317, 318], "replac": [6, 53, 55, 89, 94, 102, 107, 108, 116, 118, 210, 299, 307], "feature_nam": 6, "correspond": [6, 21, 28, 42, 53, 55, 61, 64, 69, 73, 74, 75, 76, 77, 78, 79, 82, 84, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 125, 131, 133, 140, 142, 148, 152, 153, 157, 164, 168, 178, 195, 205, 216, 218, 220, 221, 229, 233, 251, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318], "seri": [7, 12, 18, 42, 53, 55, 63, 71, 72, 89, 90, 101, 105, 107, 147, 205, 206, 207, 234, 240, 241, 294, 295, 297, 309, 310, 313, 317, 318], "vector": [7, 10, 18, 21, 25, 26, 42, 43, 48, 53, 79, 82, 92, 93, 95, 100, 102, 104, 105, 106, 107, 114, 119, 121, 123, 125, 126, 128, 129, 130, 131, 132, 135, 137, 139, 140, 141, 142, 145, 150, 158, 160, 161, 184, 197, 229, 230, 231, 236, 237, 300, 305, 309, 310, 311, 312, 313], "t": [7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 58, 60, 61, 63, 65, 72, 73, 74, 75, 76, 77, 78, 79, 83, 89, 91, 92, 93, 94, 95, 96, 100, 102, 104, 105, 106, 108, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 154, 158, 159, 160, 161, 162, 164, 167, 169, 178, 182, 185, 189, 190, 195, 196, 205, 207, 208, 219, 221, 224, 225, 226, 227, 228, 229, 230, 232, 235, 247, 254, 258, 259, 262, 263, 266, 267, 268, 269, 270, 273, 277, 278, 279, 280, 282, 283, 286, 288, 290, 293, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318], "time": [7, 11, 18, 19, 20, 22, 23, 26, 27, 28, 29, 31, 32, 34, 35, 38, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 121, 126, 130, 131, 137, 138, 141, 144, 145, 146, 147, 158, 167, 169, 174, 184, 195, 196, 204, 205, 206, 207, 208, 217, 218, 219, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 297, 298, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318], "psi": [7, 42, 45, 46, 53, 55, 295, 302], "k": [7, 10, 11, 12, 14, 16, 23, 26, 42, 45, 46, 48, 50, 51, 52, 54, 55, 66, 69, 74, 75, 76, 77, 78, 79, 90, 91, 92, 93, 95, 100, 101, 103, 104, 105, 106, 109, 110, 111, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 140, 141, 142, 144, 145, 149, 150, 158, 159, 175, 179, 180, 184, 212, 221, 223, 226, 227, 228, 229, 252, 258, 277, 288, 294, 295, 300, 301, 304, 306, 307, 308, 309, 311, 313, 314, 315, 317], "space": [7, 8, 10, 15, 23, 24, 30, 42, 47, 51, 53, 54, 55, 63, 71, 72, 76, 84, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 110, 113, 119, 121, 130, 131, 141, 161, 191, 195, 196, 223, 229, 230, 231, 233, 234, 236, 237, 252, 277, 282, 283, 288, 295, 297, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 317], "cluster": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 53, 81, 96, 97, 105, 113, 139, 229, 252, 275, 276, 278, 280, 281, 282, 283, 288, 291, 294, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 310, 313, 314, 315, 318], "dim": [8, 11, 16, 25, 26, 42, 47, 53, 55, 71, 72, 73, 100, 104, 105, 106, 184, 223, 252, 257, 258, 290, 294, 299, 302, 303, 305, 313, 317, 318], "n_box": [8, 9, 299, 305], "v0": [8, 9, 304], "v1": [8, 9, 304], "box": [8, 9, 32, 235, 252, 305, 317], "discret": [8, 9, 10, 11, 12, 14, 15, 23, 28, 30, 36, 37, 39, 57, 72, 82, 83, 84, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 146, 147, 149, 164, 169, 196, 232, 233, 234, 240, 245, 246, 252, 253, 268, 274, 283, 288, 294, 295, 297, 301, 304, 305, 306, 308, 312, 313, 315, 317, 318], "euclidean": [8, 10, 11, 13, 14, 15, 16, 17, 53, 102, 107, 161, 288, 299, 313, 317], "span": [8, 300], "grid": [8, 29, 188, 219, 233, 261, 262, 276, 303, 305, 307, 314, 318], "linspac": [8, 257, 259, 262, 265, 266, 267, 268, 271, 272, 273, 288, 290, 301, 303, 304, 305, 307, 308, 311, 312, 313, 315, 318], "along": [8, 149, 199, 233, 235, 313, 314], "axi": [8, 23, 93, 188, 192, 199, 208, 216, 229, 233, 258, 259, 266, 267, 273, 277, 278, 279, 280, 294, 299, 302, 311, 313, 315], "center": [8, 9, 10, 11, 12, 14, 15, 16, 139, 192, 194, 256, 277, 288, 294, 299, 302, 303, 304, 305, 310, 315], "bound": [8, 24, 61, 106, 109, 110, 147, 158, 186, 199, 202, 219, 233, 298, 305, 307, 313], "either": [8, 29, 30, 42, 53, 55, 61, 63, 93, 102, 107, 110, 233, 234, 235, 295, 298, 311, 313, 314, 316, 317], "user": [8, 11, 61, 82, 109, 110, 186, 192, 194, 292, 298, 299, 306, 311, 312, 313, 315, 317, 318], "from": [8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 27, 30, 31, 33, 34, 35, 38, 41, 42, 45, 46, 53, 55, 56, 61, 63, 71, 72, 81, 82, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 167, 168, 169, 170, 173, 182, 184, 185, 186, 191, 192, 194, 195, 196, 197, 202, 206, 207, 208, 209, 216, 224, 225, 226, 227, 228, 230, 232, 235, 245, 247, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318], "per": [8, 9, 10, 11, 12, 13, 16, 17, 20, 23, 25, 26, 40, 63, 75, 84, 89, 91, 92, 93, 95, 107, 110, 111, 116, 118, 160, 169, 188, 189, 190, 192, 193, 221, 235, 259, 266, 267, 273, 299, 313, 314, 317], "singl": [8, 61, 83, 89, 101, 107, 133, 146, 147, 151, 192, 194, 207, 216, 218, 229, 236, 298, 299, 306, 312, 313, 317], "integ": [8, 11, 15, 42, 53, 55, 82, 83, 84, 93, 100, 101, 103, 104, 105, 106, 107, 109, 110, 114, 117, 119, 120, 132, 148, 152, 171, 196, 213, 233, 234, 299, 313, 314, 317], "lower": [8, 9, 63, 71, 93, 108, 158, 199, 202, 219, 285, 295, 299, 305, 306, 313, 314, 317], "vertex": [8, 9], "upper": [8, 9, 147, 157, 199, 202, 219, 256, 305, 314], "boxdiscretizationmodel": [8, 252], "cluster_cent": [9, 10, 12, 277, 288, 299, 304, 305, 310, 315], "produc": [9, 18, 33, 36, 37, 42, 43, 44, 48, 50, 55, 59, 61, 62, 81, 82, 83, 87, 102, 107, 158, 163, 165, 171, 186, 196, 208, 298, 302, 305, 306, 312, 313, 315], "boxdiscret": [9, 252, 299, 304, 305], "hot": 9, "n_job": [9, 10, 11, 12, 14, 15, 16, 22, 23, 27, 31, 32, 33, 34, 35, 38, 41, 72, 83, 213, 229, 231, 235, 236, 237, 254, 255, 264, 277, 282, 289, 299, 301, 307, 308, 315, 317], "For": [9, 10, 11, 12, 15, 16, 18, 30, 32, 42, 53, 55, 60, 61, 63, 81, 83, 84, 89, 93, 96, 107, 109, 110, 115, 116, 117, 118, 133, 137, 146, 147, 149, 168, 187, 195, 197, 232, 235, 252, 288, 289, 298, 299, 300, 301, 303, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "frame": [9, 10, 11, 12, 14, 15, 18, 23, 42, 83, 84, 93, 100, 104, 105, 106, 146, 207, 232, 235, 269, 270, 288, 294, 295, 297, 302, 303, 304, 305, 310, 313, 317], "index": [9, 10, 12, 18, 81, 88, 91, 92, 93, 95, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 115, 116, 117, 118, 124, 143, 163, 165, 202, 216, 220, 230], "closest": [9, 10, 12], "job": [9, 10, 12, 14, 15, 16, 72, 213, 229, 231, 235, 236, 237, 312], "assign": [9, 10, 11, 12, 14, 15, 16, 63, 81, 91, 92, 93, 95, 96, 97, 100, 102, 104, 105, 106, 113, 119, 139, 186, 224, 225, 226, 227, 233, 235, 277, 278, 283, 285, 294, 297, 299, 302, 303, 310, 313, 314], "discrete_trajectori": [9, 10, 11, 12, 14, 101, 234, 290, 313], "denot": [9, 10, 12, 42, 53, 55, 92, 95, 100, 104, 105, 106, 119, 307, 308, 313, 314, 317], "transform_onehot": 9, "encod": [9, 55, 58, 59, 60, 62, 196, 229, 312], "one_hot": 9, "were": [9, 10, 12, 42, 84, 90, 100, 102, 104, 105, 106, 110, 187, 193, 195, 196, 219, 233, 292, 307, 310, 311, 313, 314, 315, 317], "converg": [9, 10, 11, 12, 14, 83, 94, 101, 102, 107, 109, 110, 161, 299, 315, 316, 317], "also": [9, 10, 11, 12, 14, 15, 18, 42, 43, 53, 55, 56, 61, 63, 64, 71, 74, 75, 76, 77, 78, 79, 83, 84, 90, 93, 100, 103, 104, 105, 106, 107, 109, 133, 136, 147, 161, 179, 186, 194, 195, 199, 200, 209, 216, 224, 225, 226, 227, 228, 233, 235, 286, 293, 294, 297, 298, 299, 300, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318], "indic": [9, 10, 11, 12, 16, 83, 84, 90, 93, 100, 102, 103, 104, 105, 106, 109, 110, 111, 115, 116, 117, 118, 123, 125, 140, 145, 149, 165, 192, 194, 196, 200, 216, 226, 227, 228, 292, 297, 302, 303, 306, 313, 316], "creat": [9, 10, 12, 14, 22, 27, 30, 31, 32, 33, 34, 35, 38, 41, 61, 84, 90, 101, 103, 107, 188, 189, 190, 193, 206, 207, 208, 216, 218, 224, 225, 226, 227, 228, 235, 247, 277, 292, 295, 299, 302, 303, 304, 306, 312, 313, 314, 316, 317, 318], "manual": [9, 10, 12, 84], "doe": [9, 10, 12, 18, 43, 58, 60, 63, 80, 81, 93, 94, 100, 102, 104, 105, 106, 111, 113, 162, 214, 216, 224, 225, 229, 231, 236, 237, 298, 299, 303, 307, 309, 312, 314, 317], "stem": [9, 10, 12, 42, 106, 290, 317], "directli": [9, 10, 11, 12, 13, 17, 32, 53, 55, 100, 102, 104, 105, 106, 107, 108, 192, 194, 198, 224, 225, 229, 245, 290, 295, 299, 302, 306, 309, 311, 314, 316, 317], "metric": [9, 10, 11, 12, 13, 14, 15, 16, 252, 288], "relat": [9, 10, 12, 49, 53, 84, 140, 293, 295, 297, 306, 307, 313, 314, 315, 317], "via": [9, 10, 11, 12, 23, 26, 33, 36, 37, 63, 82, 100, 101, 104, 105, 106, 109, 110, 128, 135, 139, 140, 173, 187, 191, 193, 196, 218, 285, 286, 294, 297, 299, 301, 302, 306, 309, 310, 314], "registri": [9, 10, 11, 12, 13, 14, 15, 16, 17], "n_cluster": [9, 10, 11, 12, 14, 15, 16, 276, 277, 278, 280, 281, 282, 299, 301, 303, 304, 305, 307, 308, 310, 315], "gener": [10, 11, 15, 16, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 56, 75, 82, 89, 91, 92, 93, 95, 100, 102, 104, 105, 106, 107, 115, 119, 121, 123, 125, 130, 131, 140, 142, 145, 146, 147, 149, 154, 158, 160, 161, 174, 186, 197, 208, 229, 230, 231, 232, 234, 236, 237, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 313, 314, 317, 318], "store": [10, 12, 61, 83, 89, 90, 101, 103, 105, 109, 110, 111, 196, 199, 299, 315], "comput": [10, 12, 15, 18, 19, 20, 21, 39, 42, 45, 51, 53, 55, 61, 65, 66, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 158, 160, 161, 164, 168, 169, 170, 171, 174, 175, 178, 181, 182, 183, 186, 195, 196, 199, 202, 212, 219, 221, 222, 223, 224, 225, 226, 227, 228, 233, 247, 287, 294, 295, 297, 298, 299, 300, 303, 306, 307, 308, 309, 310, 313, 314, 315, 317], "should": [10, 11, 12, 13, 14, 17, 18, 25, 26, 42, 53, 55, 58, 60, 61, 63, 64, 72, 73, 83, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 173, 186, 193, 195, 196, 200, 222, 223, 233, 290, 294, 295, 299, 300, 306, 309, 313, 316, 317], "match": [10, 18, 43, 61, 75, 92, 101, 161, 206, 207, 300], "let": [10, 55, 61, 149, 302, 303, 305, 306, 307, 308, 310, 311, 318], "u": [10, 21, 42, 55, 108, 110, 149, 158, 184, 197, 230, 234, 259, 265, 266, 267, 268, 273, 298, 299, 300, 303, 305, 306, 307, 308, 310, 312, 313, 314, 315, 317, 318], "artifici": [10, 71, 83, 235], "just": [10, 43, 83, 102, 147, 186, 214, 231, 233, 236, 237, 299, 301, 309, 311, 314, 316, 317], "canon": [10, 42, 49, 295, 307, 317], "c_1": 10, "top": [10, 18, 23, 32, 36, 37, 42, 45, 46, 48, 50, 52, 54, 55, 71, 75, 78, 93, 100, 104, 105, 106, 184, 196, 224, 225, 226, 227, 228, 229, 294, 295, 301, 304, 305, 306, 307, 308, 311, 313, 317], "c_2": 10, "c_3": 10, "we": [10, 11, 25, 26, 33, 36, 55, 61, 81, 93, 100, 102, 104, 105, 106, 107, 109, 110, 114, 129, 147, 149, 164, 186, 212, 230, 235, 251, 276, 280, 283, 284, 286, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318], "five": 10, "sampl": [10, 14, 18, 25, 26, 36, 37, 56, 63, 71, 72, 83, 84, 87, 89, 90, 91, 92, 93, 95, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 146, 147, 157, 160, 189, 190, 193, 197, 199, 202, 212, 219, 220, 221, 222, 232, 245, 252, 262, 268, 269, 277, 288, 290, 297, 299, 307, 308, 313, 314, 315, 316, 317], "around": [10, 32, 38, 55, 89, 216, 270, 288, 306, 309, 315], "ey": 10, "loc": [10, 256, 305], "scale": [10, 26, 42, 43, 53, 55, 100, 104, 105, 106, 110, 130, 131, 144, 145, 174, 186, 187, 190, 192, 194, 229, 279, 281, 284, 299, 300, 303], "01": [10, 55, 100, 104, 105, 106, 119, 125, 140, 161, 259, 270, 273, 274, 286, 288, 305], "5": [10, 11, 14, 18, 22, 23, 25, 26, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 53, 55, 58, 60, 72, 91, 92, 100, 104, 105, 106, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 145, 154, 174, 188, 208, 218, 219, 229, 234, 235, 254, 256, 257, 258, 259, 260, 261, 264, 265, 270, 271, 272, 276, 277, 282, 283, 284, 285, 287, 288, 289, 290, 291, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "print": [10, 23, 61, 100, 102, 104, 105, 106, 108, 149, 161, 186, 192, 194, 196, 208, 218, 261, 286, 292, 294, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "max_it": [11, 14, 197, 299, 315], "500": [11, 30, 31, 33, 40, 101, 254, 258, 265, 268, 269, 270, 272, 276, 289, 299, 300, 303, 304, 305, 307, 312, 313, 318], "toler": [11, 12, 14, 100, 102, 104, 105, 106, 107, 114, 134, 135, 136, 158, 161, 163, 165, 184], "1e": [11, 14, 19, 20, 22, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 42, 47, 49, 53, 55, 63, 66, 67, 68, 69, 70, 71, 73, 94, 100, 102, 104, 105, 106, 107, 109, 134, 135, 136, 161, 163, 165, 174, 180, 181, 182, 183, 186, 192, 194, 257, 258, 265, 270, 272, 278, 279, 280, 282, 284, 287, 288, 300, 302, 303, 305, 307, 308, 310, 312, 313, 314, 318], "05": [11, 14, 33, 36, 37, 41, 101, 107, 163, 165, 186, 197, 256, 284, 286, 287, 288, 302, 306, 314], "init_strategi": [11, 14, 109, 277, 288, 299, 315], "fixed_se": [11, 14, 277, 299, 310, 315], "initial_cent": [11, 14, 299], "progress": [11, 16, 42, 63, 89, 90, 93, 94, 100, 102, 103, 104, 105, 106, 109, 110, 161, 200, 201, 214, 221, 233, 288, 299, 302, 305, 315, 318], "minim": [11, 15, 45, 110, 132, 158, 192, 194, 197, 233, 298, 299, 305, 307, 314], "cost": [11, 12, 14, 299], "c": [11, 13, 17, 22, 23, 36, 37, 45, 55, 78, 85, 100, 104, 105, 106, 110, 121, 128, 129, 130, 131, 133, 137, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 170, 171, 174, 197, 200, 212, 223, 226, 228, 229, 255, 261, 269, 277, 282, 283, 286, 298, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 316], "sum_": [11, 12, 55, 100, 104, 105, 106, 128, 134, 137, 149, 150, 154, 158, 162, 297, 299, 311, 314], "_j": [11, 42, 299, 313], "s_i": [11, 12, 100, 104, 105, 106, 299, 314, 315], "boldsymbol": [11, 42, 55, 100, 104, 105, 106, 299], "mu_i": [11, 12, 42, 123, 125, 126, 135, 145, 160, 299, 313], "mass": [11, 27, 33, 235, 259, 299], "associ": [11, 61, 91, 92, 93, 95, 106, 158, 298, 299, 301, 307, 308, 313, 314, 317], "outcom": [11, 299], "veri": [11, 15, 20, 83, 101, 102, 107, 108, 109, 192, 194, 216, 235, 295, 297, 299, 310, 311], "depend": [11, 38, 55, 63, 79, 80, 83, 84, 100, 104, 105, 106, 111, 131, 141, 184, 186, 196, 211, 212, 216, 221, 229, 231, 236, 237, 246, 252, 253, 274, 284, 297, 299, 304, 306, 307, 310, 314, 315, 316, 317], "particular": [11, 12, 19, 20, 30, 42, 55, 61, 92, 93, 95, 96, 100, 102, 104, 105, 106, 184, 186, 193, 213, 217, 220, 284, 293, 297, 298, 299, 300, 306, 316, 317], "offer": [11, 23, 101, 102, 204, 251, 292, 294, 297, 299, 306, 309, 310, 312, 313, 314, 318], "uniform": [11, 14, 22, 25, 27, 29, 31, 33, 34, 35, 38, 41, 89, 93, 94, 98, 147, 185, 186, 192, 195, 196, 233, 252, 254, 270, 277, 300, 301, 303, 306, 308, 313, 314, 315], "pick": [11, 229, 236, 299, 301, 302, 307], "uniformli": [11, 18, 23, 146, 229, 299, 306, 307, 308], "over": [11, 12, 14, 18, 23, 42, 53, 55, 61, 66, 79, 83, 84, 88, 93, 97, 100, 101, 102, 104, 105, 106, 109, 110, 111, 113, 116, 146, 147, 161, 189, 190, 212, 220, 271, 285, 288, 294, 297, 299, 301, 302, 304, 306, 309, 310, 311, 313, 315, 316], "provid": [11, 13, 14, 17, 42, 53, 55, 61, 63, 72, 76, 82, 83, 84, 87, 90, 93, 94, 100, 104, 105, 106, 107, 109, 110, 175, 176, 186, 189, 190, 191, 208, 213, 218, 223, 229, 231, 236, 237, 246, 292, 293, 295, 297, 298, 299, 306, 311, 312, 313, 316, 317, 318], "former": [11, 61, 72, 299], "tri": [11, 61, 94, 142, 235, 299, 309, 312, 314], "find": [11, 15, 29, 53, 63, 84, 90, 96, 110, 123, 233, 235, 247, 275, 291, 293, 295, 296, 298, 299, 303, 307, 311, 313, 314, 317, 318], "cover": [11, 297, 298, 299, 314], "spatial": [11, 28, 232, 299, 304], "configur": [11, 20, 53, 55, 58, 60, 63, 83, 90, 100, 102, 104, 105, 106, 107, 299, 303, 304, 313], "dataset": [11, 12, 23, 27, 28, 29, 30, 34, 35, 38, 41, 53, 109, 110, 203, 204, 205, 206, 207, 208, 217, 218, 233, 252, 254, 255, 259, 260, 263, 265, 266, 267, 272, 273, 274, 277, 282, 283, 295, 299, 300, 302, 303, 307, 312, 313, 315, 317, 318], "more": [11, 15, 28, 30, 32, 53, 61, 82, 83, 84, 89, 90, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 133, 147, 163, 165, 178, 184, 187, 192, 194, 195, 196, 197, 204, 216, 232, 235, 288, 289, 294, 295, 299, 300, 306, 310, 311, 313, 314], "less": [11, 14, 25, 26, 42, 110, 116, 118, 149, 161, 192, 194, 232, 299, 306, 314], "detail": [11, 18, 32, 42, 53, 61, 69, 83, 89, 90, 94, 103, 108, 119, 160, 161, 195, 197, 232, 289, 293, 294, 295, 298, 306, 307, 309, 310, 313, 314], "amount": [11, 53, 55, 186, 193, 295, 313], "iter": [11, 12, 14, 61, 82, 89, 90, 93, 94, 101, 102, 103, 107, 109, 114, 142, 161, 196, 197, 200, 208, 214, 220, 235, 299, 306, 314, 315], "befor": [11, 14, 32, 53, 61, 72, 83, 93, 96, 100, 102, 104, 105, 106, 107, 109, 135, 161, 174, 180, 181, 182, 183, 197, 216, 229, 230, 233, 308, 313, 314], "stop": [11, 12, 14, 93, 94, 100, 104, 105, 106, 232, 233, 289, 314], "dure": [11, 14, 15, 16, 19, 60, 63, 84, 101, 104, 119, 235, 276, 295, 298, 299, 307], "float": [11, 12, 14, 15, 19, 20, 21, 22, 25, 26, 27, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 47, 48, 49, 51, 53, 55, 58, 60, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 89, 90, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 126, 134, 135, 136, 150, 154, 155, 156, 157, 158, 161, 163, 165, 167, 168, 169, 171, 174, 178, 180, 181, 182, 183, 184, 186, 188, 192, 193, 194, 196, 197, 198, 199, 202, 212, 219, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 283, 303, 305, 313, 317], "when": [11, 12, 14, 18, 53, 55, 56, 61, 62, 80, 83, 84, 89, 90, 91, 93, 94, 96, 100, 101, 102, 104, 105, 106, 109, 110, 137, 147, 158, 168, 192, 194, 195, 196, 197, 208, 216, 221, 224, 225, 226, 227, 228, 232, 235, 238, 294, 295, 297, 298, 299, 306, 313, 314, 315, 316, 317, 318], "rel": [11, 12, 14, 101, 102, 107, 141, 161, 163, 165, 192, 194, 299, 313], "chang": [11, 12, 14, 58, 60, 61, 63, 83, 84, 101, 102, 106, 107, 109, 161, 224, 225, 226, 227, 228, 229, 292, 298, 303, 309, 317], "inertia": [11, 12, 299, 303], "smaller": [11, 12, 20, 53, 55, 84, 110, 116, 118, 180, 181, 182, 183, 307, 314], "than": [11, 12, 14, 15, 20, 30, 53, 55, 82, 84, 87, 93, 94, 100, 104, 105, 106, 108, 110, 116, 118, 119, 121, 123, 125, 130, 131, 140, 142, 145, 149, 174, 180, 181, 182, 183, 184, 229, 231, 232, 234, 235, 236, 237, 294, 295, 298, 299, 300, 302, 303, 306, 307, 310, 313, 314, 315, 317], "determin": [11, 18, 20, 45, 53, 55, 83, 84, 93, 100, 101, 102, 104, 105, 106, 142, 147, 160, 175, 177, 186, 187, 196, 197, 208, 299, 301, 306, 309, 313], "how": [11, 12, 18, 42, 61, 92, 94, 95, 107, 196, 213, 216, 233, 246, 276, 278, 279, 280, 281, 286, 287, 288, 294, 295, 301, 302, 307, 308, 309, 311, 312, 313, 315, 316, 317], "being": [11, 27, 34, 35, 40, 41, 45, 61, 68, 100, 104, 105, 106, 119, 184, 233, 298, 310, 311, 314, 315, 318], "chosen": [11, 30, 109, 299, 302, 311, 315], "seed": [11, 14, 16, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 41, 56, 57, 72, 98, 100, 104, 105, 106, 229, 231, 233, 234, 236, 237, 259, 261, 262, 266, 267, 272, 273, 277, 290, 299, 301, 303, 305, 308, 310, 313, 314, 317], "42": [11, 22, 27, 31, 33, 34, 35, 38, 41, 259, 273, 288, 301, 305, 308], "thread": [11, 14, 15, 23, 32, 213, 235, 312], "core": [11, 83, 213, 293, 297], "note": [11, 14, 36, 37, 39, 42, 43, 53, 55, 58, 60, 61, 63, 71, 74, 75, 76, 77, 78, 79, 80, 82, 84, 93, 94, 100, 102, 104, 105, 106, 111, 114, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 192, 194, 196, 197, 216, 229, 230, 235, 243, 286, 294, 295, 299, 302, 307, 310, 311, 313, 317], "ignor": [11, 14, 20, 53, 55, 58, 59, 60, 61, 62, 64, 88, 89, 91, 92, 94, 100, 104, 105, 106, 115, 158, 195, 196, 197, 202, 218, 276, 299, 313, 314], "pass": [11, 14, 15, 20, 43, 45, 47, 51, 53, 55, 58, 59, 60, 61, 62, 63, 83, 90, 93, 99, 102, 103, 158, 173, 192, 194, 195, 196, 197, 199, 286, 298, 299, 311, 313, 315], "algorithm": [11, 13, 14, 15, 17, 18, 53, 55, 93, 94, 96, 97, 108, 133, 147, 148, 151, 152, 153, 158, 160, 175, 187, 197, 233, 235, 240, 241, 243, 245, 294, 295, 299, 306, 310, 311, 313], "bar": [11, 29, 42, 55, 63, 83, 93, 100, 104, 105, 106, 109, 110, 147, 191, 200, 201, 214, 221, 233, 256, 260, 299, 302, 314, 315, 316, 317, 318], "tqdm": [11, 42, 63, 89, 93, 100, 104, 105, 106, 109, 110, 200, 221, 288, 299, 302, 303, 305, 315, 318], "interfac": [11, 74, 75, 76, 77, 78, 79, 95, 109, 110, 125, 201, 294, 298, 299, 300, 301, 306, 309, 310, 311, 312, 313, 317, 318], "check": [11, 61, 93, 100, 104, 105, 106, 108, 109, 110, 114, 133, 134, 135, 136, 142, 151, 173, 176, 177, 180, 201, 215, 217, 251, 302, 306, 311], "supports_progress_interfac": [11, 109, 110, 200, 252], "david": [11, 16, 299], "arthur": [11, 16, 299], "sergei": [11, 16, 299], "vassilvitskii": [11, 16, 299], "advantag": [11, 16, 299, 313, 317], "care": [11, 16, 61, 299], "technic": [11, 16, 61, 299], "stanford": [11, 16, 299], "2006": [11, 16, 114, 164, 299, 314], "kmeansmodel": [11, 14, 252], "minibatchkmean": [11, 12, 252, 299], "current": [11, 14, 15, 18, 20, 33, 42, 46, 48, 50, 52, 53, 54, 55, 58, 60, 61, 63, 72, 83, 84, 89, 91, 92, 93, 94, 95, 100, 102, 104, 105, 106, 107, 117, 170, 187, 191, 215, 229, 233, 251, 294, 297, 306, 309, 314, 317], "yet": [11, 14, 15, 89, 93, 94, 97, 101, 108, 294], "latest": [11, 14, 15, 49, 83, 195, 294], "callback_init_cent": [11, 14], "callback_loop": [11, 14], "perform": [11, 14, 15, 16, 18, 19, 20, 32, 42, 43, 55, 58, 60, 61, 63, 64, 71, 72, 80, 90, 93, 94, 100, 101, 102, 103, 104, 105, 106, 114, 139, 174, 176, 180, 181, 182, 183, 197, 219, 221, 233, 235, 294, 295, 298, 299, 301, 302, 303, 306, 309, 312, 314, 315, 317], "supersed": [11, 14, 208], "onc": [11, 16, 61, 93, 100, 104, 105, 106, 112, 233, 254, 255, 264, 269, 270, 286, 299, 311], "non": [11, 14, 15, 16, 42, 53, 55, 61, 63, 78, 83, 89, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 130, 131, 132, 134, 136, 141, 142, 159, 161, 180, 213, 216, 235, 297, 313, 317], "neg": [11, 15, 16, 63, 78, 83, 88, 100, 104, 105, 106, 107, 115, 132, 134, 136, 166, 197, 213, 216, 229, 231, 235, 236, 237, 303], "fit_transform": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 63, 83, 276, 305], "fit_opt": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 63, 83], "transform_opt": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 63, 83], "simultan": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 63, 83, 213], "access": [11, 13, 14, 17, 20, 28, 33, 43, 45, 47, 51, 53, 55, 58, 60, 61, 63, 83, 100, 102, 104, 105, 106, 294, 306, 309, 310, 313, 314, 316, 317], "keyword": [11, 14, 20, 43, 45, 47, 51, 53, 55, 58, 60, 61, 63, 83, 90, 99, 102, 103, 107, 188, 189, 190, 191, 193, 196, 197, 200, 210, 235], "output": [11, 14, 20, 30, 42, 43, 45, 47, 51, 53, 55, 58, 60, 61, 63, 83, 91, 92, 93, 94, 95, 96, 97, 98, 99, 174, 194, 223, 235, 245, 252, 302, 303, 304, 305, 306, 309, 312, 317], "kw": [11, 14, 20, 21, 42, 46, 48, 50, 53, 54, 55, 58, 60, 83, 90, 101, 102, 107, 108, 109, 200, 220, 231, 235], "respect": [11, 12, 14, 26, 29, 36, 37, 42, 53, 55, 61, 71, 82, 85, 100, 104, 105, 106, 107, 109, 111, 133, 135, 140, 157, 160, 186, 187, 192, 229, 233, 235, 288, 292, 294, 299, 302, 307, 308, 309, 311, 313, 316, 317], "scikit": [11, 14, 20, 53, 55, 63, 89, 94, 99, 101, 107, 196, 311], "compat": [11, 14, 20, 44, 53, 55, 58, 61, 63, 64, 89, 94, 101, 107, 108, 229, 231, 236, 237, 298, 311], "clustermodel": [11, 12, 14, 15, 252, 288], "implicitli": [11, 14, 42, 102, 107], "choic": [11, 14, 42, 53, 71, 107, 109, 221, 298, 299, 313, 316, 317], "fix": [11, 14, 16, 32, 53, 84, 94, 100, 101, 104, 105, 106, 107, 137, 160, 180, 182, 229, 231, 235, 236, 237, 277, 299, 306, 307, 313, 317], "reproduc": [11, 14, 16, 30, 51, 100, 102, 104, 105, 106, 229, 231, 234, 236, 237, 277, 298, 299, 308, 317], "conjunct": [11, 14, 53, 55, 80, 186], "need": [11, 14, 43, 45, 61, 109, 110, 111, 196, 216, 229, 231, 236, 237, 277, 298, 299, 311, 312, 313, 315, 316, 317], "becaus": [11, 14, 89, 100, 101, 102, 104, 105, 106, 107, 108, 109, 147, 160, 197, 224, 225, 226, 227, 228, 235, 294, 295, 310, 315, 317], "parallel": [11, 14, 30, 72, 110, 213, 229, 231, 234, 236, 237, 314], "execut": [11, 14, 63, 109, 274, 291, 294, 298], "caus": [11, 14, 88, 92, 96, 97, 292], "determinist": [11, 14, 32, 229, 231, 235, 236, 237, 312], "behaviour": [11, 14], "again": [11, 14, 89, 235, 299, 307, 312, 313, 315], "strategi": [11, 14, 109, 277, 299, 315], "guess": [11, 14, 16, 93, 94, 96, 97, 99, 252, 306, 307, 310], "getter": [11, 14, 15, 18, 20, 42, 53, 55, 58, 60, 63, 74, 79, 83, 102, 107, 110, 111, 186, 209, 219, 229, 230], "setter": [11, 14, 15, 18, 20, 42, 53, 55, 58, 60, 63, 83, 102, 107, 186, 209, 229], "overrid": [11, 14, 18, 20, 83, 94], "max": [11, 14, 83, 88, 111, 112, 158, 163, 164, 165, 170, 186, 224, 225, 226, 227, 228, 255, 256, 268, 270, 271, 284, 287, 288, 289, 290, 299, 301, 302, 303, 304, 305, 306, 308, 310, 312, 313, 314, 317, 318], "_clustering_bind": [11, 13, 14, 17], "subclass": [11, 14, 61, 298], "label": [11, 14, 82, 93, 100, 104, 105, 106, 114, 119, 120, 132, 171, 186, 188, 192, 194, 233, 256, 260, 261, 262, 271, 277, 283, 285, 286, 289, 290, 299, 300, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "actual": [11, 14, 42, 53, 55, 81, 83, 90, 93, 100, 104, 105, 106, 108, 114, 299, 310, 314, 316, 317], "criterion": [11, 12, 14, 94, 101, 109], "between": [11, 14, 15, 18, 22, 27, 29, 31, 33, 34, 35, 38, 39, 41, 42, 49, 61, 71, 82, 83, 84, 89, 91, 93, 94, 96, 100, 102, 104, 105, 106, 108, 110, 119, 133, 137, 162, 163, 164, 165, 166, 167, 169, 170, 171, 186, 195, 196, 229, 230, 231, 233, 236, 237, 246, 277, 297, 299, 300, 306, 307, 310, 312, 313, 314, 315, 316, 317], "consid": [11, 14, 15, 43, 53, 55, 61, 83, 84, 93, 100, 104, 105, 106, 107, 108, 110, 218, 224, 225, 226, 227, 228, 295, 297, 298, 300, 301, 307, 310, 313, 314, 316, 317], "inform": [12, 61, 104, 105, 110, 196, 246, 288, 292, 298, 299, 301, 306, 308, 313, 316, 317], "procedur": [12, 20, 65, 83, 89, 93, 96, 97, 147, 295, 306, 316, 317], "pleas": [12, 32, 42, 53, 55, 60, 61, 89, 125, 192, 194, 294, 298, 313, 317, 318], "document": [12, 61, 175, 290, 298, 312, 313, 315, 317], "coincid": [12, 89, 91, 93, 94, 300], "criterium": [12, 101, 315], "construct": [12, 53, 61, 84, 93, 106, 109, 110, 114, 119, 137, 145, 161, 162, 164, 167, 169, 186, 311, 312, 313, 314, 315], "pure": [12, 135], "met": [12, 15], "kmean": [12, 14, 16, 252, 276, 277, 278, 280, 281, 282, 283, 299, 301, 302, 303, 305, 307, 308, 310, 315, 318], "score": [12, 19, 42, 48, 58, 60, 63, 64, 69, 70, 71, 72, 73, 83, 94, 100, 104, 105, 106, 196, 197, 252, 293, 295, 302, 305, 307, 311, 318], "dtype": [12, 18, 58, 59, 60, 61, 62, 63, 64, 88, 91, 92, 93, 96, 103, 180, 181, 182, 183, 186, 205, 207, 226, 227, 228, 232, 283, 288, 299, 302, 303, 315, 316], "doubl": [12, 27, 28, 61, 232, 252, 253, 274, 275, 291, 296], "entri": [12, 18, 61, 93, 96, 102, 107, 120, 139, 148, 173, 174, 226, 227, 228, 307, 308, 311], "squar": [12, 42, 68, 71, 100, 102, 104, 105, 106, 177, 197, 223, 299, 304, 305, 311, 312, 314, 317], "distanc": [12, 15, 32, 42, 53, 55, 71, 83, 105, 235, 277, 299, 313, 317], "train": [12, 14, 42, 57, 58, 60, 61, 63, 70, 71, 72, 93, 195, 197, 286, 299, 302, 303, 305, 306, 307, 308, 312, 317, 318], "loop": [12, 216, 254, 255, 264, 269, 270, 303], "onli": [13, 17, 18, 20, 29, 42, 53, 55, 56, 61, 63, 72, 81, 83, 84, 89, 90, 93, 94, 96, 97, 100, 101, 102, 104, 105, 106, 107, 110, 123, 125, 133, 142, 145, 147, 159, 160, 174, 186, 187, 192, 193, 194, 210, 216, 218, 226, 227, 228, 229, 231, 233, 235, 236, 237, 292, 295, 297, 298, 299, 300, 306, 307, 310, 311, 313, 314, 316, 317], "custom": [13, 17, 25, 26, 32, 61, 72, 252, 253, 274], "regist": [13, 17, 61, 299], "through": [13, 15, 17, 42, 53, 55, 58, 59, 60, 61, 62, 63, 64, 90, 103, 199, 229, 233, 299, 305, 306, 310, 312, 313, 315, 317], "instanti": [13, 17, 100, 286, 306, 309, 311, 317], "rather": [13, 17, 30, 100, 104, 105, 106, 119, 234, 310, 313, 314], "singleton": [13, 17, 84], "ad": [13, 15, 17, 61, 63, 68, 96, 157, 233, 235, 252, 299], "mai": [13, 17, 33, 43, 45, 49, 51, 61, 72, 93, 102, 107, 108, 109, 110, 147, 163, 165, 184, 192, 194, 196, 197, 208, 212, 216, 298, 299, 302, 315, 318], "link": [13, 17, 292, 298], "against": [13, 17, 42, 58, 60, 61, 93, 110, 221, 311], "librari": [13, 17, 195, 196, 251, 286, 295, 298, 311], "directori": [13, 17, 294, 299], "capi_includ": [13, 17, 299], "inc_clust": [13, 17, 299], "expos": [13, 17, 294], "your": [13, 17, 61, 100, 102, 104, 105, 106, 146, 147, 224, 225, 226, 227, 228, 252, 276, 298, 303, 307, 317], "like": [13, 17, 25, 26, 30, 53, 61, 63, 90, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 121, 146, 147, 162, 185, 197, 202, 221, 230, 235, 245, 294, 295, 299, 301, 305, 306, 309, 312, 313, 314, 315, 317], "includ": [13, 17, 42, 53, 55, 61, 85, 93, 100, 104, 105, 106, 163, 165, 221, 292, 294, 297, 298, 299, 301, 314], "register_clust": [13, 17, 299], "h": [13, 17, 22, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 43, 51, 132, 147, 154, 160, 229, 231, 235, 236, 237, 257, 258, 265, 270, 272, 278, 279, 280, 295, 299, 300, 301, 303, 307, 308], "pybind11_modul": [13, 17, 299], "m": [13, 17, 23, 27, 29, 32, 33, 39, 42, 43, 45, 46, 48, 50, 52, 53, 54, 55, 61, 68, 81, 89, 91, 93, 100, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 181, 182, 183, 205, 216, 224, 225, 226, 227, 228, 229, 230, 233, 235, 277, 295, 299, 300, 306, 308, 310, 315, 317], "doc": [13, 17, 61, 209, 294, 299, 300, 301, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318], "modul": [13, 17, 58, 59, 60, 61, 62, 63, 64, 215, 238, 247, 253, 294, 312, 315, 318], "auto": [13, 17, 18, 65, 121, 130, 140, 161, 186, 192, 194, 224, 225, 226, 227, 228, 299, 312], "custommodul": [13, 17], "def_submodul": [13, 17, 299], "registerclusteringimplement": [13, 17, 299], "bind": [13, 17, 200, 247, 292, 299], "compil": [13, 17, 299], "extens": [13, 17, 235, 236, 237, 299], "renam": [13, 17], "appropri": [13, 17, 42, 64, 94, 147, 299, 303, 310, 311, 313, 318], "impl": [13, 74], "add": [13, 15, 61, 233, 294, 303, 314], "tupl": [13, 29, 53, 55, 61, 63, 66, 90, 93, 103, 109, 115, 116, 117, 118, 146, 161, 185, 186, 217, 218, 233, 295, 312], "batch_siz": [14, 299, 302, 303, 305, 312, 318], "100": [14, 22, 25, 27, 28, 31, 33, 34, 35, 38, 41, 53, 55, 61, 89, 102, 128, 129, 158, 185, 189, 190, 191, 198, 212, 232, 255, 258, 262, 266, 268, 270, 271, 277, 278, 279, 280, 286, 288, 289, 295, 299, 301, 302, 303, 305, 306, 307, 309, 311, 312, 314, 315, 317, 318], "mini": [14, 252, 302], "batch": [14, 53, 55, 58, 60, 63, 79, 252, 303], "fashion": [14, 18, 295, 299], "descript": [14, 18, 42, 60, 83, 89, 107, 108, 119, 200, 232, 316], "remain": [14, 42, 53, 55, 96, 97, 147, 174, 202, 292, 298, 309, 314], "whole": [14, 61, 84, 160, 161, 235, 295, 299], "repeatedli": 14, "thu": [14, 53, 93, 108, 295, 308, 315, 317], "line": [14, 61, 186, 233, 298, 312, 317], "usual": [14, 89, 294, 295, 299, 300, 301, 302, 315], "mix": [14, 53, 89, 100, 104, 105, 106, 192, 194, 222, 313], "overwritten": [14, 197], "dmin": [15, 277, 299], "max_cent": [15, 277, 299], "1000": [15, 22, 23, 27, 31, 33, 34, 35, 38, 41, 82, 89, 92, 94, 109, 168, 208, 262, 265, 266, 270, 281, 282, 288, 290, 299, 305, 312, 313, 314, 317, 318], "least": [15, 72, 110, 112, 197, 216, 299, 306, 311, 313, 316], "other": [15, 45, 61, 110, 160, 205, 216, 292, 293, 298, 299, 306, 307, 308, 309, 310, 313, 316, 317], "accord": [15, 21, 42, 71, 83, 93, 100, 104, 105, 106, 107, 113, 116, 117, 118, 140, 148, 149, 159, 161, 186, 187, 192, 212, 229, 231, 233, 236, 237, 284, 292, 299, 303, 305, 312, 315], "voronoi": [15, 297, 299], "partion": [15, 299], "regular": [15, 42, 47, 49, 51, 60, 63, 66, 67, 68, 69, 73, 96, 97, 100, 104, 105, 106, 197, 223, 235, 252, 277, 303, 305, 307, 308], "similar": [15, 18, 61, 123, 125, 145, 216, 298, 299, 303, 317], "hartigan": [15, 299], "leader": [15, 299], "consist": [15, 61, 93, 94, 96, 97, 109, 115, 116, 117, 118, 158, 197, 213, 235, 246, 295, 299, 311, 314, 315, 316, 317], "ha": [15, 20, 24, 32, 42, 55, 61, 79, 82, 83, 84, 91, 93, 96, 100, 102, 104, 105, 106, 107, 114, 115, 116, 117, 118, 119, 123, 133, 134, 135, 136, 147, 151, 160, 161, 172, 173, 186, 187, 193, 196, 201, 230, 233, 235, 292, 298, 299, 301, 304, 305, 306, 309, 310, 311, 314, 315, 316, 317], "greater": [15, 42, 53, 55, 71, 100, 104, 105, 106, 110, 121, 123, 125, 130, 131, 140, 142, 145, 174, 299, 306, 310, 313], "becom": [15, 168, 216, 299, 313, 317], "partit": [15, 42, 71, 82, 212, 299, 317], "minimum": [15, 56, 72, 85, 87, 93, 108, 110, 197, 212, 216, 277, 299, 315, 317], "threshold": [15, 42, 84, 90, 93, 94, 96, 101, 108, 110, 197, 224, 225, 226, 227, 228, 233, 286, 310, 311, 317], "termin": 15, "jan": [15, 33, 89, 93, 96, 97, 105, 108, 149, 161, 295, 297, 299, 306], "hendrik": [15, 33, 89, 93, 96, 97, 105, 108, 149, 161, 295, 297, 299, 306], "prinz": [15, 33, 89, 93, 96, 97, 105, 108, 149, 154, 161, 252, 253, 274, 297, 299, 306], "hao": [15, 20, 21, 33, 42, 47, 53, 55, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 149, 161, 293, 295, 297, 299, 306, 309, 313, 315, 316, 317, 318], "wu": [15, 20, 21, 33, 42, 47, 53, 55, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 149, 154, 160, 161, 293, 295, 297, 299, 306, 309, 313, 315, 316, 317, 318], "marco": [15, 33, 41, 149, 161, 297, 299, 301], "sarich": [15, 33, 41, 149, 154, 161, 297, 299, 301], "bettina": [15, 33, 89, 149, 161, 297, 299, 306], "keller": [15, 33, 89, 149, 154, 161, 297, 299, 306], "martin": [15, 33, 149, 161, 297, 299, 317], "senn": [15, 33, 149, 154, 161, 297, 299], "held": [15, 18, 33, 149, 154, 161, 297, 298, 299], "john": [15, 33, 89, 94, 105, 109, 121, 130, 131, 141, 149, 161, 297, 299, 306], "chodera": [15, 33, 89, 105, 109, 121, 130, 131, 141, 149, 154, 161, 297, 299, 306], "christof": [15, 33, 41, 51, 82, 114, 119, 149, 161, 295, 297, 299, 301, 308, 314, 317], "sch": [15, 33, 41, 45, 51, 82, 114, 119, 149, 161, 295, 297, 299, 301, 308, 309, 310, 314, 317], "\u00fc": [15, 20, 21, 32, 33, 41, 45, 51, 53, 72, 82, 105, 108, 114, 119, 149, 161, 235, 295, 297, 299, 301, 308, 309, 310, 313, 314, 317], "tte": [15, 33, 41, 45, 51, 82, 114, 119, 149, 161, 295, 297, 299, 301, 308, 309, 310, 314, 317], "frank": [15, 20, 21, 33, 42, 53, 55, 58, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 114, 119, 121, 130, 131, 141, 149, 161, 292, 293, 295, 297, 299, 306, 307, 309, 312, 313, 314, 315, 316, 317, 318], "No": [15, 20, 21, 33, 42, 53, 55, 58, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 114, 119, 121, 130, 131, 141, 149, 161, 293, 295, 297, 299, 306, 309, 312, 313, 314, 315, 316, 317, 318], "\u00e9": [15, 20, 21, 33, 42, 53, 55, 58, 63, 71, 72, 83, 89, 93, 96, 97, 100, 101, 102, 105, 107, 108, 109, 111, 114, 119, 121, 130, 131, 141, 149, 161, 293, 295, 297, 299, 306, 309, 312, 313, 314, 315, 316, 317, 318], "markov": [15, 28, 30, 33, 39, 41, 42, 53, 55, 63, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 133, 134, 135, 136, 140, 142, 145, 186, 194, 221, 230, 232, 233, 234, 252, 261, 271, 276, 278, 280, 281, 284, 285, 287, 288, 295, 298, 299, 301, 302, 303, 304, 309, 310, 313, 314, 315, 316, 317, 318], "molecular": [15, 20, 21, 33, 41, 42, 51, 53, 55, 58, 63, 71, 72, 100, 101, 105, 109, 111, 149, 154, 160, 161, 293, 297, 299, 301, 308, 312, 313, 315, 317, 318], "kinet": [15, 20, 21, 33, 42, 53, 55, 58, 63, 71, 72, 81, 89, 93, 96, 97, 100, 104, 105, 106, 109, 111, 121, 130, 131, 141, 149, 154, 161, 293, 297, 299, 306, 310, 312, 313, 315, 317, 318], "valid": [15, 29, 33, 42, 58, 60, 63, 71, 72, 74, 79, 93, 100, 104, 105, 106, 134, 136, 149, 154, 161, 188, 219, 220, 221, 222, 233, 252, 281, 292, 297, 299, 302, 303, 312, 317, 318], "journal": [15, 20, 21, 33, 42, 43, 45, 49, 51, 53, 55, 63, 71, 72, 83, 89, 93, 96, 97, 102, 105, 107, 108, 109, 114, 133, 148, 149, 151, 152, 153, 158, 161, 233, 235, 295, 297, 299, 300, 301, 306, 307, 308, 309, 313, 314, 316, 317, 318], "chemic": [15, 20, 21, 33, 42, 51, 53, 55, 71, 72, 83, 89, 93, 96, 97, 102, 105, 108, 109, 149, 161, 295, 297, 299, 306, 308, 309, 313, 314, 316, 317], "physic": [15, 20, 21, 23, 33, 51, 53, 72, 83, 89, 93, 96, 97, 102, 105, 108, 109, 114, 149, 161, 229, 295, 297, 299, 306, 308, 309, 311, 313, 314, 316, 317], "134": [15, 33, 149, 154, 161, 288, 295, 297, 299, 313], "17": [15, 30, 33, 83, 89, 102, 105, 109, 149, 161, 262, 276, 277, 281, 288, 290, 297, 299, 302, 303, 305, 306, 309, 313, 314, 316, 317, 318], "174105": [15, 33, 149, 154, 161, 297, 299], "2011": [15, 33, 89, 105, 121, 130, 131, 141, 149, 154, 161, 295, 297, 299, 306, 313], "wilei": [15, 147, 299], "son": [15, 299], "inc": [15, 200, 288, 298, 299], "1975": [15, 299], "onto": [15, 23, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 61, 82, 93, 100, 103, 104, 105, 106, 162, 189, 190, 233, 243, 293, 300, 313, 314, 317, 318], "carri": [15, 19, 161, 318], "choos": [15, 26, 298, 299, 307, 314, 315], "centroid": 15, "calcul": [15, 84, 89, 93, 96, 97, 100, 104, 105, 106, 109, 110, 111, 137, 197, 306, 315], "larger": [15, 87, 147, 184, 234, 235, 295, 302, 313, 314], "equal": [15, 18, 25, 26, 42, 53, 56, 57, 64, 71, 72, 81, 91, 92, 93, 95, 100, 104, 105, 106, 109, 110, 111, 115, 116, 117, 118, 167, 177, 218, 232, 262, 267, 276, 284, 290, 299, 301, 302, 303, 313, 317], "superse": 15, "exist": [15, 18, 55, 61, 81, 96, 97, 133, 188, 203, 216, 233, 294, 300, 309, 310], "cutoff": [15, 20, 42, 47, 53, 55, 66, 68, 69, 174, 180, 181, 182, 183, 193, 313], "reach": [15, 93, 94, 100, 104, 105, 106, 110, 119, 133, 233, 235, 299, 314], "taken": [15, 42, 93, 96, 100, 104, 105, 106, 158, 186, 195, 196, 216, 298, 313, 314, 315], "account": [15, 42, 71, 96, 186, 303, 307, 313], "you": [15, 53, 55, 61, 81, 84, 89, 93, 94, 96, 97, 100, 102, 104, 105, 106, 125, 146, 147, 162, 212, 224, 225, 292, 294, 298, 299], "might": [15, 64, 80, 82, 83, 93, 96, 100, 104, 105, 106, 168, 220, 224, 225, 226, 227, 228, 235, 292, 295, 310, 314, 315, 317], "alia": [15, 61], "allow": [15, 25, 26, 28, 61, 110, 178, 298, 303, 306, 315, 317], "callback": [16, 63, 102, 109, 200, 201], "n_dim": [16, 234], "n_center": 16, "_metric": 17, "metricregistri": [17, 252], "compute_c00": [18, 19], "compute_c0t": [18, 19, 305], "compute_ctt": [18, 19], "remove_data_mean": 18, "revers": [18, 42, 53, 71, 83, 89, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 123, 125, 135, 140, 145, 157, 158, 159, 160, 161, 230, 295, 298, 303, 306, 309, 310, 313, 314, 316, 317], "bessels_correct": [18, 19], "sparse_mod": [18, 224, 225, 226, 227, 228], "ncov": [18, 20, 53, 55, 295], "diag_onli": [18, 226, 227, 228], "potenti": [18, 26, 27, 28, 33, 34, 35, 38, 40, 41, 42, 43, 46, 48, 50, 52, 53, 54, 55, 63, 71, 83, 111, 214, 220, 229, 231, 232, 235, 236, 237, 245, 252, 253, 259, 266, 267, 270, 272, 273, 274, 278, 288, 299, 300, 301, 302, 308, 314, 315, 316, 317], "lag": [18, 19, 20, 22, 27, 31, 34, 35, 41, 42, 45, 47, 53, 55, 56, 58, 59, 60, 62, 63, 65, 66, 73, 83, 84, 86, 87, 89, 93, 94, 96, 100, 102, 104, 105, 106, 107, 108, 109, 110, 130, 131, 137, 145, 146, 149, 158, 174, 204, 205, 207, 208, 217, 218, 219, 252, 276, 281, 293, 295, 297, 302, 304, 307, 308, 313, 315, 316, 318], "mathrm": [18, 23, 25, 26, 27, 33, 34, 35, 38, 39, 40, 41, 42, 53, 55, 70, 75, 82, 84, 89, 92, 93, 95, 96, 100, 101, 102, 104, 105, 106, 109, 111, 176, 186, 212, 221, 229, 233, 257, 258, 299, 300, 301, 304, 306, 308, 309, 310, 313, 314, 317, 318], "cov": [18, 42, 71, 150, 159, 305, 317], "x_t": [18, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 42, 46, 48, 50, 52, 53, 54, 55, 100, 104, 105, 106, 119, 208, 226, 227, 228, 230, 257, 258, 293, 295, 297, 301, 305, 306, 308, 312, 313, 314, 316, 317, 318], "y_t": [18, 227, 228, 306, 307, 318], "contigu": [18, 147], "block": [18, 56, 72, 147, 208, 295, 312], "timeseri": [18, 53, 55, 91, 94, 95, 102, 107, 206, 207, 245, 289, 293, 297, 299, 313, 314, 317, 318], "propos": 18, "here": [18, 26, 53, 55, 102, 107, 108, 114, 146, 158, 164, 185, 235, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 310, 312, 313, 314, 316, 317, 318], "geq": [18, 119, 136, 178, 295, 300, 312, 314], "correl": [18, 19, 42, 49, 53, 55, 71, 83, 87, 89, 93, 94, 96, 100, 102, 104, 105, 106, 109, 110, 130, 131, 146, 147, 174, 295, 307, 313, 317], "part": [18, 42, 61, 71, 82, 111, 157, 192, 194, 229, 231, 236, 237, 283, 292, 298, 302, 307, 313, 317], "shift": [18, 19, 42, 53, 55, 56, 64, 69, 83, 107, 109, 110, 186, 208, 212, 295, 300, 313, 315, 316], "chunk": [18, 19, 20, 208], "subtract": [18, 197, 223], "free": [18, 42, 53, 109, 110, 111, 288, 298, 313, 315, 317], "symmetr": [18, 19, 28, 53, 100, 104, 105, 106, 123, 125, 145, 174, 180, 181, 182, 183, 184, 225, 227, 232, 295, 313], "defin": [18, 25, 26, 33, 42, 45, 53, 55, 61, 69, 75, 81, 82, 93, 100, 102, 104, 105, 106, 110, 113, 119, 126, 132, 145, 150, 155, 156, 157, 162, 164, 170, 174, 186, 192, 194, 197, 229, 231, 236, 237, 252, 257, 258, 294, 295, 298, 300, 301, 302, 303, 305, 307, 308, 310, 311, 312, 313, 314, 315, 318], "sum_t": [18, 226, 227, 228, 313], "moment": [18, 19, 20, 102, 225, 226, 227, 228, 295, 309, 313], "matric": [18, 24, 42, 45, 53, 55, 56, 63, 65, 66, 72, 79, 83, 84, 89, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 136, 142, 146, 157, 158, 159, 160, 161, 174, 194, 218, 223, 230, 247, 277, 295, 299, 300, 304, 307, 308, 309, 311, 313, 315, 316, 317], "bessel": [18, 19], "correct": [18, 19, 83, 93, 108, 109, 110, 130, 131, 292, 297, 316], "order": [18, 43, 53, 55, 56, 61, 81, 82, 84, 85, 89, 94, 96, 100, 102, 104, 105, 106, 107, 110, 113, 123, 125, 146, 147, 161, 178, 179, 196, 224, 225, 226, 227, 228, 233, 293, 302, 304, 307, 311, 313, 314, 317, 318], "unbias": [18, 111, 161, 297, 315], "dens": [18, 72, 83, 100, 104, 105, 106, 149, 160, 161, 224, 225, 226, 227, 228, 247], "alwai": [18, 61, 84, 161, 197, 208, 216, 224, 225, 226, 227, 228, 295, 310, 316], "mode": [18, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 61, 63, 66, 67, 68, 69, 70, 72, 74, 79, 83, 84, 96, 102, 105, 107, 108, 110, 142, 224, 225, 226, 227, 228, 235, 295, 298, 300, 301, 303, 308, 313, 316, 317], "automat": [18, 81, 93, 96, 102, 113, 160, 187, 192, 194, 224, 225, 226, 227, 228], "spars": [18, 24, 82, 83, 84, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 119, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 168, 186, 187, 195, 197, 224, 225, 226, 227, 228, 230, 247, 311], "depth": [18, 20, 133, 148, 151, 152, 153, 295], "storag": [18, 20, 61, 295], "combin": [18, 81, 100, 101, 111, 130, 131, 196, 295, 297, 298, 307, 311, 315, 317], "statist": [18, 42, 49, 53, 55, 83, 84, 89, 90, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 146, 147, 158, 160, 199, 226, 227, 228, 252, 297, 306, 307, 309, 314, 316, 317], "weight": [18, 20, 21, 42, 53, 55, 58, 60, 61, 63, 71, 82, 84, 91, 92, 93, 95, 100, 101, 104, 105, 106, 108, 111, 148, 151, 152, 153, 186, 190, 192, 194, 197, 212, 224, 225, 226, 227, 228, 233, 235, 261, 277, 280, 285, 287, 299, 313, 314, 317], "pairwis": [18, 313], "describ": [18, 20, 23, 38, 39, 53, 54, 55, 81, 82, 89, 91, 96, 97, 100, 104, 105, 106, 107, 109, 111, 114, 141, 154, 213, 218, 219, 234, 235, 293, 294, 297, 299, 301, 302, 306, 313, 314, 317], "restrict": [18, 53, 55, 71, 84, 90, 91, 92, 93, 95, 96, 100, 102, 103, 104, 105, 106, 107, 110, 160, 161, 223, 226, 227, 228, 298, 309, 316], "diagon": [18, 42, 63, 93, 129, 134, 140, 176, 186, 187, 226, 227, 228, 299], "autocorrel": [18, 53, 55, 100, 104, 105, 106, 121, 130, 147, 226, 227, 228, 313], "covariancemodel": [18, 21, 42, 48, 53, 55, 71, 252, 313], "toni": [18, 53, 313], "f": [18, 25, 26, 42, 45, 46, 48, 50, 52, 54, 55, 100, 104, 105, 106, 108, 111, 147, 150, 154, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 229, 230, 231, 233, 236, 237, 254, 257, 258, 259, 260, 265, 266, 267, 268, 272, 273, 277, 278, 279, 283, 284, 285, 287, 289, 290, 295, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318], "chan": 18, "gene": 18, "howard": 18, "golub": 18, "randal": 18, "j": [18, 24, 29, 42, 43, 58, 61, 74, 75, 76, 77, 78, 79, 89, 91, 100, 104, 105, 106, 110, 111, 119, 123, 124, 133, 134, 137, 139, 143, 149, 150, 154, 155, 157, 158, 159, 160, 162, 164, 186, 195, 197, 230, 233, 235, 288, 293, 295, 297, 300, 303, 309, 310, 311, 312, 313, 314, 315, 316], "levequ": 18, "formula": 18, "varianc": [18, 42, 53, 55, 61, 62, 71, 100, 104, 105, 106, 110, 150, 234, 312, 313, 315, 317], "compstat": 18, "1982": [18, 299], "5th": [18, 282], "symposium": 18, "toulous": 18, "30": [18, 36, 42, 51, 55, 63, 71, 72, 105, 107, 233, 267, 288, 292, 295, 302, 303, 304, 308, 309, 312, 314, 317, 318], "41": [18, 40, 147, 288], "springer": [18, 22, 49, 297, 307, 317], "final": [18, 20, 53, 55, 110, 299, 303, 304, 315], "aggreg": [18, 20, 158, 310, 311], "n_split": [18, 208], "column_select": [18, 226, 227, 228], "element": [18, 63, 81, 88, 92, 93, 100, 102, 104, 105, 106, 107, 115, 116, 118, 124, 129, 134, 136, 143, 158, 180, 182, 186, 192, 194, 197, 199, 202, 217, 228, 235, 311, 316], "same": [18, 21, 24, 42, 46, 48, 50, 52, 53, 54, 55, 56, 61, 63, 72, 84, 101, 109, 110, 111, 158, 161, 173, 186, 190, 205, 208, 212, 235, 277, 294, 298, 299, 300, 303, 314, 316, 317], "anoth": [18, 30, 119, 147, 218, 246, 295, 309, 310, 313], "arbitrari": [18, 100, 101, 104, 105, 106, 108, 232, 317], "possess": [18, 22, 27, 29, 31, 33, 34, 35, 38, 41, 46, 200, 221, 233, 303, 313, 317], "accept": [18, 61, 71, 216, 298], "re": [18, 53, 61, 93, 94, 96, 97, 100, 104, 105, 106, 108, 141, 174, 216, 276, 309, 313, 314, 315], "factor": [18, 27, 33, 83, 84, 109, 110, 111, 186, 295, 316], "koopmanestim": 18, "split": [18, 43, 56, 57, 72, 82, 100, 104, 105, 106, 208, 295, 302, 312, 318], "column": [18, 42, 100, 104, 105, 106, 125, 140, 174, 179, 180, 195, 224, 225, 226, 227, 228, 235, 310, 311, 313], "term": [18, 63, 105, 119, 130, 133, 196, 230, 233, 235, 298, 306, 307, 311, 314, 315], "increment": [18, 71, 109, 200, 315], "except": [18, 72, 88, 91, 92, 95, 100, 104, 105, 106, 158, 192, 194, 197, 252, 294, 298, 316, 317], "cannot": [18, 81, 89, 93, 310, 312, 314, 318], "appli": [18, 19, 21, 42, 44, 46, 48, 50, 52, 53, 54, 55, 56, 61, 74, 75, 76, 77, 78, 79, 84, 94, 100, 104, 105, 106, 196, 206, 207, 208, 229, 232, 235, 245, 298, 307, 308, 310, 311, 313, 315, 317], "is_lag": 18, "big": [18, 307], "tempor": [18, 23, 43, 54, 72, 218, 301, 313], "differ": [18, 42, 53, 61, 89, 100, 102, 104, 105, 106, 109, 110, 192, 194, 209, 219, 221, 239, 284, 290, 295, 298, 299, 304, 305, 306, 309, 311, 312, 313, 315, 317], "select": [18, 30, 42, 45, 47, 49, 71, 83, 84, 90, 93, 96, 106, 107, 108, 111, 124, 147, 158, 161, 206, 207, 233, 234, 252, 301, 306, 311, 313, 314, 317, 318], "remov": [18, 19, 20, 42, 61, 65, 71, 72, 104, 107, 173, 180, 181, 182, 183, 184, 223, 224, 225, 226, 227, 228, 270, 314, 316], "covari": [19, 20, 21, 36, 37, 42, 48, 53, 55, 66, 71, 100, 102, 104, 105, 106, 150, 159, 223, 224, 225, 226, 227, 228, 234, 252, 277, 295, 299, 305, 307, 308, 313, 317], "cov_00": [19, 42, 65, 317], "cov_0t": [19, 42, 65, 317], "cov_tt": [19, 42, 65, 317], "mean_0": [19, 42, 317], "mean_t": [19, 42, 317], "data_mean_remov": [19, 71], "influenc": [19, 184, 197, 235, 313], "effect": [19, 42, 58, 60, 61, 71, 82, 83, 84, 86, 87, 89, 93, 94, 96, 102, 107, 108, 109, 110, 170, 175, 186, 187, 193, 206, 207, 235, 276, 281, 297, 298, 309, 314, 316], "vamp": [19, 42, 53, 63, 64, 69, 71, 73, 100, 104, 105, 106, 252, 275, 291, 295, 296, 302, 318], "whiten": [19, 21, 42, 53, 55, 223, 305, 317], "epsilon": [19, 20, 42, 47, 49, 51, 53, 55, 63, 66, 67, 68, 69, 70, 71, 73, 100, 104, 105, 106, 174, 180, 181, 182, 183, 235, 282, 303, 305, 307, 308, 313], "10": [19, 22, 23, 26, 28, 29, 31, 34, 35, 38, 41, 42, 45, 51, 53, 55, 58, 71, 72, 96, 100, 104, 105, 106, 108, 121, 141, 148, 151, 152, 153, 155, 156, 157, 158, 161, 174, 180, 181, 182, 183, 192, 194, 229, 232, 235, 256, 261, 262, 264, 269, 277, 279, 281, 285, 287, 288, 289, 292, 293, 295, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318], "qr": [19, 174, 180, 181, 182, 183, 300], "pca": [19, 53, 275, 291, 296], "rank": [19, 42, 43, 49, 53, 55, 104, 108, 172, 174, 180, 181, 182, 183, 184, 301, 313, 317], "defici": 19, "reduc": [19, 42, 55, 91, 180, 181, 182, 183, 184, 206, 207, 299, 301, 306, 315], "truncat": [19, 20, 43, 47, 48, 68, 158, 174, 180, 181, 182, 183, 300, 301, 317], "numer": [19, 32, 42, 43, 45, 53, 55, 92, 139, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 192, 194, 223, 235, 252, 286, 295, 298, 300, 311, 313, 314, 317], "spd_inv_sqrt": [19, 223, 252], "decomposit": [19, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 82, 96, 97, 100, 104, 105, 106, 140, 168, 174, 180, 181, 182, 183, 184, 252, 278, 282, 283, 285, 289, 290, 295, 297, 300, 301, 302, 303, 305, 307, 308, 312, 313, 317, 318], "whitened_data": 19, "06": [20, 42, 47, 49, 53, 55, 63, 66, 67, 68, 69, 70, 73, 107, 194, 288, 302, 313], "inf": [20, 53, 55, 119, 130, 131, 145, 230, 307, 314], "koopman": [20, 21, 42, 45, 46, 48, 50, 52, 53, 54, 55, 63, 66, 69, 71, 100, 104, 105, 106, 108, 221, 293, 295, 301, 308, 317, 318], "plug": 20, "6": [20, 23, 35, 40, 42, 45, 47, 49, 53, 55, 63, 66, 69, 73, 100, 104, 105, 106, 107, 134, 154, 161, 194, 208, 218, 229, 232, 235, 255, 261, 264, 268, 269, 271, 272, 274, 285, 286, 287, 288, 292, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "eigenvalu": [20, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 55, 63, 66, 68, 69, 71, 72, 90, 100, 103, 104, 105, 106, 121, 122, 125, 135, 140, 141, 142, 145, 158, 174, 175, 179, 180, 181, 182, 183, 252, 295, 300, 301, 307, 308, 309, 313], "norm": [20, 26, 42, 53, 55, 100, 102, 104, 105, 106, 107, 140, 161, 174, 178, 179, 180, 181, 182, 183, 197, 258, 284, 285, 287, 299, 305, 310, 314], "infin": 20, "collaps": 20, "while": [20, 61, 89, 93, 94, 96, 110, 224, 225, 226, 227, 228, 233, 295, 299, 303, 306, 309, 314, 315, 317], "end": [20, 22, 23, 24, 30, 36, 37, 39, 41, 53, 55, 61, 96, 99, 100, 104, 105, 106, 119, 137, 155, 156, 157, 164, 168, 216, 225, 227, 228, 229, 230, 233, 234, 294, 298, 299, 302, 303, 305, 307, 311, 312, 313, 314, 316, 317], "after": [20, 42, 43, 46, 48, 50, 52, 53, 54, 55, 61, 63, 68, 83, 84, 93, 96, 100, 104, 105, 106, 109, 110, 128, 129, 183, 199, 208, 216, 299, 306, 309, 315, 316, 317], "been": [20, 84, 91, 93, 100, 104, 105, 106, 107, 119, 196, 233, 298, 299, 302, 311, 314, 317], "felik": [20, 21, 53, 72, 105, 108, 295, 297, 313, 317], "ske": [20, 21, 53, 72, 105, 108, 295, 297, 313, 317], "fabian": [20, 21, 53, 83, 89, 100, 101, 102, 109, 111, 161, 297, 309, 313, 315, 316, 317], "paul": [20, 21, 53, 83, 89, 100, 101, 102, 109, 111, 133, 137, 160, 161, 297, 309, 313, 315, 316, 317], "stefan": [20, 21, 51, 53, 295, 307, 308, 313], "klu": [20, 21, 45, 51, 53, 295, 307, 308, 313], "ter": [20, 21, 53, 313, 317], "koltai": [20, 21, 45, 53, 313, 317], "variat": [20, 21, 42, 47, 49, 53, 55, 60, 62, 63, 71, 72, 100, 104, 105, 106, 107, 147, 252, 293, 295, 307, 309, 313, 317, 318], "slow": [20, 21, 53, 58, 72, 100, 104, 105, 106, 109, 147, 192, 194, 243, 293, 295, 301, 308, 312, 313, 317], "collect": [20, 21, 22, 53, 58, 60, 63, 84, 93, 106, 107, 109, 111, 199, 259, 266, 267, 270, 273, 283, 293, 297, 309, 311, 312, 313, 316], "variabl": [20, 21, 53, 58, 109, 110, 173, 195, 196, 208, 293, 302, 307, 311, 312, 313], "short": [20, 21, 53, 108, 114, 119, 162, 164, 167, 169, 207, 275, 296, 297, 313, 314], "off": [20, 21, 42, 53, 55, 93, 100, 104, 105, 106, 114, 119, 134, 162, 164, 167, 169, 174, 186, 232, 277, 295, 299, 310, 313, 314, 317], "equilibrium": [20, 21, 42, 53, 55, 89, 93, 94, 96, 97, 100, 104, 105, 106, 107, 108, 109, 114, 119, 121, 126, 129, 130, 131, 141, 162, 164, 167, 169, 290, 295, 297, 302, 313, 314, 315, 317], "simul": [20, 21, 22, 23, 24, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 53, 55, 71, 72, 82, 93, 100, 101, 104, 105, 106, 107, 108, 110, 114, 119, 121, 130, 131, 141, 147, 158, 162, 164, 167, 168, 169, 170, 171, 196, 231, 232, 233, 235, 236, 237, 256, 264, 271, 286, 288, 289, 295, 297, 303, 304, 306, 309, 311, 313, 314, 315, 317], "146": [20, 21, 53, 108, 133, 148, 151, 152, 153, 288, 297, 309, 313], "15": [20, 21, 23, 37, 53, 100, 104, 105, 106, 158, 186, 195, 197, 229, 255, 274, 276, 277, 284, 285, 287, 288, 299, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "154104": [20, 21, 53, 313], "2017": [20, 21, 53, 100, 101, 108, 297, 313], "koopmanweightingmodel": [20, 252], "koopman_model": [20, 71, 100, 104, 105, 106], "u_const": 21, "koopman_oper": 21, "whitening_transform": 21, "modifi": [21, 54, 61, 109, 111, 235, 298, 303], "pc": 21, "reweight": [21, 100, 104, 105, 106, 108, 109, 288, 315, 317], "constant": [21, 26, 42, 63, 68, 69, 71, 100, 104, 105, 106, 111, 155, 196, 197, 212, 224, 225, 226, 227, 228, 235, 308], "offset": [21, 84, 93, 267, 283], "const_weight_input": 21, "weights_input": 21, "001": [22, 27, 31, 34, 35, 38, 40, 94, 155, 156], "n_step": [22, 25, 26, 27, 30, 31, 33, 34, 35, 38, 40, 41, 93, 100, 102, 104, 105, 106, 229, 231, 232, 233, 234, 235, 236, 237, 254, 257, 258, 259, 261, 264, 265, 266, 267, 270, 271, 272, 273, 278, 279, 280, 288, 289, 290, 303, 308, 309, 310, 313, 314, 315, 317], "10000": [22, 27, 34, 35, 38, 41, 108, 259, 267, 268, 273, 277, 288, 299, 301, 302, 308, 312, 315, 318], "arnold": [22, 253, 274], "beltrami": [22, 253, 274], "childress": [22, 253, 274], "flow": [22, 253, 274, 317], "od": [22, 25, 253, 274, 286], "begin": [22, 23, 24, 30, 36, 37, 39, 41, 53, 55, 96, 100, 104, 105, 106, 119, 137, 155, 156, 157, 164, 168, 216, 225, 227, 228, 229, 230, 233, 234, 298, 306, 307, 311, 313, 314, 316, 317], "align": [22, 23, 39, 41, 53, 55, 100, 104, 105, 106, 225, 227, 228, 229, 313, 314, 317], "dot": [22, 140, 150, 195, 196, 289, 299, 305, 307, 308, 311, 317], "sin": [22, 23, 37, 38, 229, 234], "z": [22, 51, 137, 189, 229, 268, 278, 286, 302, 303, 305, 307, 308, 312, 318], "co": [22, 23, 37, 38, 229, 234], "b": [22, 82, 89, 91, 93, 100, 102, 104, 105, 106, 109, 110, 111, 114, 119, 120, 121, 130, 147, 154, 155, 156, 157, 160, 164, 167, 168, 169, 170, 230, 235, 256, 286, 298, 301, 303, 309, 311, 314, 315], "domain": [22, 23, 229, 235, 295, 297, 301, 303, 307, 313], "omega": [22, 23, 229], "pi": [22, 23, 38, 93, 100, 104, 105, 106, 119, 158, 164, 167, 169, 229, 234, 254, 306, 309, 310], "sqrt": [22, 27, 31, 33, 34, 36, 38, 42, 53, 102, 123, 125, 145, 253, 274, 275, 291, 296, 299, 305, 308, 312, 313, 318], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 82, 171, 186, 187, 188, 189, 190, 191, 192, 193, 194, 212, 221, 222, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 294, 298, 299, 317], "code": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 59, 80, 109, 187, 188, 189, 190, 191, 192, 193, 194, 212, 221, 222, 236, 237, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 298, 299, 312], "png": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 187, 188, 189, 190, 191, 192, 193, 194, 212, 221, 222], "hire": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 187, 188, 189, 190, 191, 192, 193, 194, 212, 221, 222], "pdf": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 187, 188, 189, 190, 191, 192, 193, 194, 212, 221, 222, 262], "integr": [22, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 55, 61, 147, 196, 229, 231, 236, 237, 286, 301, 308], "step": [22, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 40, 41, 42, 53, 55, 58, 60, 63, 89, 93, 100, 102, 104, 105, 106, 108, 109, 121, 128, 129, 130, 133, 137, 145, 147, 149, 158, 160, 169, 188, 196, 219, 229, 231, 232, 233, 234, 235, 236, 237, 261, 281, 288, 295, 299, 301, 302, 303, 304, 306, 307, 308, 311, 313, 314, 316, 317, 318], "rung": [22, 25], "kutta": [22, 25], "That": [22, 27, 31, 34, 35, 41, 89, 310, 311, 314], "system": [22, 25, 26, 27, 31, 32, 33, 34, 35, 38, 40, 41, 42, 47, 54, 72, 104, 105, 114, 121, 130, 131, 141, 147, 161, 195, 196, 197, 212, 229, 231, 233, 235, 236, 237, 252, 254, 259, 265, 266, 267, 270, 272, 273, 275, 278, 279, 281, 291, 295, 296, 298, 300, 301, 302, 303, 304, 307, 308, 311, 313, 314, 315, 317, 318], "timeindependentsystem": [22, 27, 31, 33, 34, 35, 40, 41, 252], "dt": [22, 25, 26, 27, 28, 30, 31, 34, 35, 38, 41, 93, 100, 102, 104, 105, 106, 158, 232, 286, 311], "alreadi": [22, 27, 31, 33, 34, 35, 38, 41, 61, 66, 81, 82, 96, 97, 102, 104, 105, 110, 113, 188, 196, 199, 216, 218, 223, 229, 233, 298, 299, 300, 301, 303, 306, 309, 311, 312, 313, 314, 317, 318], "now": [22, 27, 31, 33, 34, 35, 38, 41, 107, 186, 229, 294, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 317, 318], "traj": [22, 25, 27, 31, 33, 34, 35, 38, 41, 56, 57, 72, 99, 107, 147, 257, 258, 259, 263, 265, 266, 267, 268, 269, 270, 271, 273, 276, 278, 279, 280, 281, 288, 301, 302, 305, 308, 312, 314, 315, 318], "assert": [22, 25, 26, 27, 30, 31, 33, 34, 35, 38, 41, 102], "condit": [22, 27, 31, 33, 34, 35, 38, 41, 55, 91, 110, 160, 196, 229, 231, 236, 237, 286, 297, 298, 302, 306, 308, 309, 310, 311, 313, 317], "Or": [22, 27, 31, 33, 34, 35, 38, 41, 72, 100, 104, 105, 106, 110, 302], "altern": [22, 27, 31, 33, 34, 35, 38, 41, 69, 107, 158, 208, 252, 306, 308], "forward": [22, 27, 31, 33, 34, 35, 38, 41, 42, 46, 48, 50, 52, 54, 55, 58, 61, 82, 93, 100, 104, 105, 106, 114, 119, 120, 121, 130, 133, 164, 193, 196, 228, 230, 284, 286, 289, 302, 303, 307, 308, 311, 312, 314, 317], "dynam": [22, 27, 31, 33, 34, 35, 38, 41, 42, 43, 44, 45, 47, 51, 53, 55, 71, 72, 93, 100, 104, 105, 106, 121, 130, 131, 141, 147, 195, 196, 197, 221, 229, 231, 236, 237, 295, 297, 299, 300, 301, 302, 307, 308, 309, 311, 313, 314, 317], "test_point": [22, 27, 31, 33, 34, 35, 38, 41, 229, 231, 236, 237], "53": [22, 27, 31, 33, 34, 35, 38, 41, 272, 288], "vladimir": 22, "On": [22, 43, 45, 295, 300, 313, 314], "topologi": 22, "steadi": 22, "ideal": 22, "fluid": [22, 32, 43, 235, 253, 274, 275, 291, 295, 296, 300, 313], "page": [22, 49, 292, 294, 307, 317], "25": [22, 32, 45, 233, 254, 269, 274, 288, 295, 299, 301, 303, 309, 313, 314, 315, 317], "28": [22, 43, 273, 274, 288, 295, 299, 300, 302, 303, 313, 314, 317], "1966": 22, "n_particl": [23, 229, 235, 255, 282, 307, 317], "bickleyjetdataset": 23, "bicklei": [23, 229, 252, 253, 274, 275, 291, 296, 307], "jet": [23, 229, 252, 253, 259, 267, 273, 274, 275, 288, 291, 296, 307, 315], "particl": [23, 27, 32, 33, 34, 35, 38, 41, 229, 235, 278, 279, 301, 303, 304, 308, 311, 317], "u_0": [23, 229], "4138": [23, 229], "frac": [23, 27, 33, 35, 38, 41, 42, 53, 55, 75, 100, 101, 104, 105, 106, 130, 131, 137, 145, 149, 150, 158, 169, 186, 197, 225, 227, 229, 235, 299, 300, 311, 313, 314], "dai": [23, 229], "l_0": [23, 229], "77": [23, 229, 288, 306, 314], "r_0": [23, 229], "371": [23, 229], "1446": [23, 229], "205": [23, 229, 288], "461": [23, 229], "ep": [23, 96, 97, 101, 184, 229, 302, 303, 305], "075": [23, 229], "4": [23, 31, 32, 33, 34, 35, 40, 41, 53, 58, 63, 72, 92, 100, 102, 104, 105, 106, 107, 128, 129, 136, 140, 142, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 208, 216, 218, 229, 233, 235, 255, 256, 257, 258, 264, 270, 274, 277, 282, 288, 289, 290, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "20": [23, 25, 121, 141, 154, 192, 194, 197, 229, 235, 259, 266, 269, 270, 273, 277, 278, 279, 280, 288, 289, 299, 301, 302, 303, 307, 308, 313, 314, 315, 317], "evolut": [23, 54, 141, 218, 254, 311], "401": [23, 229, 303], "timestep": [23, 101, 147, 195, 196, 232, 235, 303], "period": [23, 229, 303, 307, 317], "direct": [23, 61, 84, 85, 90, 93, 133, 148, 151, 152, 153, 161, 235, 277, 298, 307, 309, 310, 313, 314, 316, 317, 318], "wrap": [23, 61, 205, 236, 237, 294, 312], "surfac": [23, 185, 191, 229, 235, 275, 291, 296], "cylind": [23, 229], "pmatrix": [23, 30, 36, 37, 229, 234, 313], "cdot": [23, 27, 33, 66, 186, 218, 229, 234, 307, 317], "further": [23, 53, 55, 188, 295, 302, 313, 317], "dataspac": 23, "bin": [23, 28, 109, 110, 111, 212, 232, 256, 265, 271, 272, 277, 280, 288, 299, 302, 304, 308, 313, 315], "discontinu": 23, "introduc": [23, 32, 53, 83, 100, 104, 105, 106, 114, 295, 297, 300, 306, 309, 313, 314, 316], "2d": [23, 253, 274, 299], "treat": [23, 83, 91, 92, 95], "propag": [23, 25, 26, 42, 43, 46, 48, 50, 52, 53, 54, 55, 58, 60, 63, 93, 100, 104, 105, 106, 121, 130, 221, 235, 289, 295, 300, 301, 317], "bickleyjet": [23, 252, 303], "underli": [23, 43, 53, 84, 93, 100, 104, 105, 106, 110, 111, 234, 235, 286, 293, 294, 306, 310, 311, 313, 315, 316, 317], "last": [23, 24, 55, 100, 104, 105, 106, 119, 149, 229, 230, 294, 315], "endpoint": [23, 259, 266, 267, 273], "endpoints_dataset": [23, 282, 307], "radiu": [23, 26, 229, 258], "endpoints_3d": 23, "to_3d": [23, 229, 303], "endpoints_3d_clust": 23, "n_bin": [23, 111, 189, 190, 278, 279, 315], "alireza": [23, 229], "hadjighasem": [23, 229], "daniel": [23, 229], "karrasch": [23, 229], "hiroshi": [23, 229], "teramoto": [23, 229], "georg": [23, 53, 161, 229, 295, 313], "haller": [23, 229], "spectral": [23, 51, 81, 96, 97, 100, 104, 105, 106, 113, 139, 229, 295, 297, 300, 306, 308, 310, 313, 314, 317], "approach": [23, 42, 47, 51, 55, 63, 71, 72, 83, 100, 104, 105, 106, 107, 109, 110, 146, 147, 149, 229, 235, 295, 308, 309, 312, 316, 317, 318], "lagrangian": [23, 109, 229, 307], "vortex": [23, 229], "detect": [23, 229, 307], "review": [23, 53, 229, 295, 297, 313], "93": [23, 229, 288, 314], "063107": [23, 229], "2016": [23, 45, 53, 109, 111, 195, 197, 229, 297, 311, 313, 315], "q": [24, 42, 119, 230, 256, 285, 314], "birth": [24, 230, 253, 274], "death": [24, 230, 253, 274], "chain": [24, 30, 39, 90, 103, 128, 129, 160, 169, 199, 230, 234, 253, 274, 297, 309, 310, 316], "annihil": [24, 230], "creation": [24, 230], "probabl": [24, 29, 30, 39, 55, 63, 81, 82, 84, 89, 91, 92, 93, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 111, 114, 116, 119, 128, 132, 133, 135, 139, 142, 147, 154, 158, 160, 161, 188, 192, 194, 212, 219, 230, 233, 234, 252, 277, 284, 285, 297, 299, 302, 303, 306, 309, 310, 313, 316, 317], "transit": [24, 29, 30, 36, 37, 39, 56, 61, 81, 82, 83, 84, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 154, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 186, 187, 192, 194, 221, 230, 232, 233, 234, 246, 252, 260, 288, 295, 297, 299, 301, 304, 306, 308, 309, 310, 313, 315, 318], "matrix": [24, 29, 30, 36, 37, 39, 42, 43, 48, 53, 55, 56, 63, 65, 66, 68, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 192, 194, 195, 197, 221, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 245, 247, 295, 297, 299, 300, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318], "p_": [24, 39, 42, 89, 93, 111, 123, 125, 132, 136, 145, 154, 159, 160, 161, 164, 230, 233, 295, 297, 306, 309, 310, 313, 314, 316], "ij": [24, 42, 89, 91, 96, 109, 111, 119, 123, 125, 132, 133, 134, 135, 136, 145, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 170, 230, 233, 297, 307, 308, 309, 310, 314, 316], "q_i": [24, 164, 169, 230, 314], "text": [24, 96, 100, 104, 105, 106, 128, 150, 156, 157, 159, 192, 194, 200, 230, 233, 292, 302, 304, 305, 307, 310, 313, 314, 316, 317], "r_i": [24, 53, 109, 111, 121, 125, 130, 131, 135, 230, 313], "p_i": [24, 194, 230, 235], "zero": [24, 42, 61, 84, 89, 91, 92, 93, 95, 96, 97, 102, 107, 108, 109, 110, 134, 158, 159, 172, 174, 190, 197, 212, 218, 224, 225, 226, 227, 228, 235, 256, 258, 283, 288, 299, 304, 306, 308, 310, 314, 315, 317], "wise": [24, 158, 199, 202, 235, 311], "foral": [24, 155, 164, 297, 309, 314], "ldot": [24, 43, 45, 75, 100, 104, 105, 106, 176, 234, 235, 297, 299, 300, 301, 306, 309, 314, 317], "birthdeathchain": [24, 252], "rh": [25, 26, 257, 258], "definit": [25, 26, 63, 100, 104, 105, 106, 111, 114, 174, 180, 181, 182, 183, 184, 229, 231, 235, 236, 237, 298, 303], "ordinari": [25, 107, 174, 299, 306, 312], "differenti": [25, 26, 27, 31, 34, 35, 40, 41, 195, 196, 301, 308, 311], "equat": [25, 26, 27, 31, 34, 35, 40, 41, 42, 71, 100, 104, 105, 106, 111, 119, 195, 196, 197, 221, 250, 251, 300, 301, 308, 311], "hand": [25, 26, 93, 196, 229, 231, 236, 237, 278, 293, 299, 313, 317], "side": [25, 26, 58, 60, 196, 229, 231, 236, 237, 278, 298, 317], "sde": [25, 26, 38, 229, 231, 236, 237, 253, 274, 308], "record": [25, 26, 38, 61, 229, 235], "customsystem": [25, 26, 252], "some": [25, 26, 42, 43, 61, 63, 83, 93, 100, 101, 104, 105, 106, 197, 221, 229, 231, 236, 237, 246, 249, 275, 293, 294, 296, 300, 303, 305, 306, 311, 314, 315, 317], "exponenti": [25, 158, 317], "decai": [25, 302, 317], "def": [25, 26, 61, 254, 258, 269, 270, 283, 286, 288, 290, 294, 303, 305, 307, 315], "45": [25, 114, 119, 128, 260, 288, 300, 314], "With": [25, 245, 302, 303, 307, 309, 311, 314], "x0": [25, 26, 195, 196, 229, 231, 236, 237, 257, 270, 272, 278, 279, 280, 281, 286, 288, 300, 301, 303, 305, 307, 308, 311, 315], "50": [25, 158, 254, 257, 258, 260, 267, 270, 272, 281, 288, 289, 295, 302, 303, 304, 307, 308, 310, 313, 315, 318], "propagated_sampl": [25, 26], "sigma": [26, 27, 35, 40, 41, 42, 74, 75, 77, 79, 92, 101, 102, 258, 300, 301, 307, 308], "stochast": [26, 27, 31, 34, 35, 40, 41, 72, 91, 93, 98, 105, 106, 124, 125, 133, 136, 137, 142, 143, 147, 160, 161, 295, 297, 301, 306, 308, 309, 314, 317], "w_t": [26, 27, 34, 35, 38, 40, 41, 258, 301, 308], "prefactor": 26, "front": [26, 200], "wiener": [26, 27, 34, 35, 38, 40, 41], "euler": [26, 27, 31, 33, 34, 35, 41, 301, 308], "maruyama": [26, 27, 31, 33, 34, 35, 41, 301, 308], "Then": [26, 55, 83, 100, 104, 105, 106, 306, 313, 314], "forc": [26, 32, 35, 89, 96, 97, 111, 235, 306, 317], "harmon": [26, 288, 315], "spheric": [26, 235], "inclus": [26, 84, 216], "harmonic_sphere_forc": [26, 258], "dist_to_origin": [26, 258], "linalg": [26, 258, 300], "dist_to_spher": [26, 258], "els": [26, 101, 102, 107, 108, 109, 119, 140, 156, 157, 160, 161, 197, 229, 231, 236, 237, 258, 283, 302, 303, 304, 314, 318], "our": [26, 298, 300, 301, 302, 306, 307, 308, 312, 314, 315, 316, 318], "diag": [26, 42, 53, 75, 100, 104, 105, 106, 128, 176, 184, 258, 277, 299, 313, 317], "lambda": [26, 30, 72, 142, 234, 257, 258, 279, 288, 300, 303, 305, 307, 308, 315], "55": [26, 186, 260, 288, 314], "300": [26, 277, 286, 303], "temperature_factor": [27, 33, 259], "damp": [27, 33, 235], "live": [27, 29, 34, 35, 38, 41, 61, 233, 299, 304, 314], "landscap": [27, 33, 34, 35, 38, 39, 40, 41, 198, 212, 249, 253, 259, 266, 272, 273, 274, 301, 304], "subject": [27, 34, 35, 38, 41, 58, 60, 298, 301], "nabla": [27, 33, 34, 35, 38, 40, 41, 301, 308], "v": [27, 33, 34, 35, 38, 40, 41, 42, 55, 150, 180, 197, 259, 266, 267, 270, 272, 273, 275, 283, 291, 296, 300, 301, 302, 304, 307, 308, 309, 317], "kt": [27, 33, 39, 280], "x_1": [27, 34, 35, 45, 306, 307, 308, 311], "x_2": [27, 34, 35, 308, 311], "temperatur": [27, 33, 34, 38, 100, 104, 105, 106, 288, 302, 308, 315], "mcmc": [28, 160, 232], "100000": [28, 94, 158, 256, 294], "vari": [28, 304], "qualiti": [28, 292, 299], "give": [28, 84, 102, 107, 110, 111, 147, 195, 196, 298, 310, 311, 314, 315, 316, 317], "opportun": 28, "synthet": [28, 30, 91, 92, 95, 100, 104, 105, 106, 313], "doublewelldiscret": [28, 252], "grid_siz": [29, 233, 261, 285, 287, 314], "bar_loc": [29, 233, 261, 285, 287, 314], "union": [29, 42, 53, 55, 58, 60, 61, 63, 71, 72, 79, 84, 86, 89, 93, 94, 96, 100, 102, 104, 105, 106, 107, 161, 186, 194, 218], "9": [29, 53, 63, 82, 91, 100, 104, 105, 106, 107, 108, 111, 119, 121, 123, 125, 126, 128, 129, 130, 131, 133, 135, 136, 137, 140, 141, 142, 145, 154, 192, 254, 255, 256, 257, 258, 260, 261, 263, 265, 268, 269, 271, 272, 274, 283, 285, 287, 288, 290, 293, 295, 297, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318], "home_loc": [29, 233, 261, 285, 287, 314], "drunkard": [29, 233, 253, 274, 275, 291, 296, 314], "plane": [29, 233, 299, 302], "take": [29, 42, 53, 55, 58, 61, 68, 72, 83, 84, 86, 93, 100, 102, 104, 105, 106, 109, 110, 128, 158, 186, 187, 191, 214, 233, 295, 299, 302, 306, 307, 313, 314, 315], "home": [29, 233, 276, 283, 307, 314], "absorb": [29, 233], "3x3": [29, 233], "corner": [29, 233], "ones": [29, 42, 53, 55, 61, 110, 233, 235, 299, 303, 310, 314, 315], "do": [29, 43, 84, 93, 100, 104, 105, 106, 110, 133, 158, 206, 207, 233, 298, 312, 315, 317], "lead": [29, 42, 55, 56, 64, 68, 83, 89, 96, 111, 180, 184, 186, 202, 224, 225, 226, 227, 228, 232, 233, 235, 295, 299, 300, 309, 310, 316], "nm": [29, 233], "jump": [29, 39, 82, 100, 104, 105, 106, 110, 114, 119, 158, 164, 168, 170, 171, 233, 284, 297, 300, 306, 309, 310, 312, 313, 314, 318], "identifi": [29, 233, 295, 302], "nj": [29, 233], "locat": [29, 33, 81, 93, 186, 216, 233, 279, 314], "coordin": [29, 33, 42, 53, 146, 149, 189, 190, 198, 212, 233, 265, 302, 313, 314, 315, 317], "drunkardswalk": [29, 252, 314], "lazi": [30, 234, 262, 310], "97": [30, 234, 262, 282, 288, 305, 309, 310, 313], "rotat": [30, 234, 304], "higher": [30, 42, 93, 234, 235, 299, 302, 303, 310], "msm": [30, 72, 81, 82, 83, 84, 87, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 186, 187, 194, 212, 230, 233, 234, 246, 252, 256, 271, 276, 278, 280, 281, 284, 285, 287, 288, 297, 302, 303, 305, 306, 310, 314, 315, 316, 318], "stai": [30, 96, 97, 110, 234, 303, 308, 309, 313, 314], "continu": [30, 109, 196, 246, 297], "multivari": [30, 53, 234, 313], "distribut": [30, 42, 55, 63, 81, 82, 89, 91, 92, 93, 94, 96, 97, 100, 102, 104, 105, 106, 107, 111, 113, 116, 123, 125, 126, 129, 131, 137, 140, 141, 142, 143, 145, 147, 159, 160, 161, 164, 167, 169, 212, 229, 230, 232, 234, 256, 260, 277, 284, 285, 290, 298, 299, 300, 302, 304, 306, 308, 309, 310, 312, 313, 315, 317, 318], "act": [30, 235, 301, 317], "hidden": [30, 36, 37, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 246, 252, 268, 269, 312, 318], "gaussian": [30, 74, 75, 79, 92, 93, 94, 96, 97, 99, 234, 299, 305, 306, 307, 308, 312, 317], "benchmark": [30, 302, 303, 312, 318], "demonstr": [30, 107, 257, 258, 268, 269, 270, 276, 277, 278, 279, 281, 284, 300, 301, 309, 314, 315], "purpos": [30, 58, 60, 81, 93, 298, 299, 310, 315, 317, 318], "equip": [30, 63, 73, 234, 306, 317], "nois": [30, 108, 234, 300, 303], "half": [30, 42, 55, 61, 71, 234, 307, 314], "open": [30, 84, 234], "interv": [30, 84, 90, 101, 102, 103, 188, 199, 202, 219, 234, 245, 254, 255, 269, 270, 303, 309, 313], "feature_trajectori": [30, 101, 290, 295, 313, 317], "ornstein": [31, 253, 274], "uhlenbeck": [31, 253, 274], "dx_t": [31, 38], "alpha": [31, 96, 150, 155, 156, 157, 197, 234, 256, 260, 269, 271, 286, 290, 300, 302, 304, 305, 309, 311, 313, 317], "beta": [31, 34, 38, 60, 150, 270, 308], "dw_t": [31, 38], "n_burn_in": [32, 89, 264, 289, 306], "5000": [32, 278, 279, 280, 283, 289, 299, 303, 310, 317], "initial_posit": [32, 235, 264], "pbf": [32, 235, 264, 317], "40": [32, 33, 53, 55, 129, 259, 260, 261, 267, 269, 288, 302, 303, 307, 314], "boundari": [32, 82, 119, 229, 232, 314, 317], "simplic": [32, 235, 314], "972": [32, 264, 274, 317], "interact": [32, 53, 235, 313], "equilibr": [32, 313, 317], "pbfsimul": [32, 252], "without": [32, 55, 61, 81, 93, 94, 100, 104, 105, 106, 110, 118, 222, 224, 225, 226, 227, 228, 292, 298, 309, 310, 314], "drift": [32, 235], "explicit": 32, "mile": [32, 235, 317], "macklin": [32, 235, 317], "matthia": [32, 235, 317], "ller": [32, 235, 317], "acm": [32, 235, 317], "transact": [32, 235, 299, 317], "graphic": [32, 235, 317], "tog": [32, 235, 317], "32": [32, 235, 288, 303, 310, 317], "12": [32, 53, 72, 102, 105, 109, 121, 130, 131, 134, 135, 136, 137, 141, 161, 163, 165, 235, 264, 284, 287, 288, 289, 299, 301, 302, 303, 305, 306, 307, 309, 310, 312, 313, 314, 316, 317, 318], "2013": [32, 41, 43, 53, 72, 81, 89, 93, 96, 97, 105, 113, 139, 147, 235, 295, 297, 300, 301, 306, 310, 312, 313, 317], "diffus": [33, 39], "quadrupl": [33, 34, 35, 253, 274, 308], "8": [33, 35, 40, 53, 100, 102, 104, 105, 106, 107, 109, 135, 161, 186, 235, 254, 255, 261, 264, 267, 271, 272, 274, 277, 282, 284, 285, 286, 287, 288, 289, 295, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "80": [33, 53, 158, 280, 288, 302, 303], "x_": [33, 42, 46, 48, 50, 52, 53, 54, 55, 100, 102, 104, 105, 106, 107, 109, 110, 111, 133, 149, 161, 197, 208, 230, 233, 293, 295, 297, 300, 301, 307, 312, 313, 314, 316, 317], "eta_t": 33, "sim": [33, 89, 234, 261, 285, 287, 299, 311, 314], "mathcal": [33, 55, 218, 221, 234, 295, 299, 300, 301, 306, 307, 309, 317], "minima": 33, "too": [33, 63, 68, 83, 84, 109, 110, 206, 207, 229, 236, 299, 306], "high": [33, 158, 205, 277, 295, 297, 299, 308, 314], "larg": [33, 72, 83, 89, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 168, 192, 194, 295, 299, 306, 314], "nan": [33, 173, 202, 220, 314], "energi": [33, 39, 109, 110, 111, 191, 198, 212, 229, 231, 236, 237, 253, 258, 265, 274, 275, 278, 288, 291, 296, 315], "73943019": 33, "22373758": 33, "26914935": 33, "67329635": 33, "invers": [34, 38, 42, 46, 48, 50, 52, 54, 63, 66, 68, 69, 81, 82, 93, 100, 104, 105, 106, 167, 181, 223, 233, 301, 304, 308, 314, 317], "asymmetr": [35, 253, 274], "16": [35, 61, 268, 272, 279, 284, 286, 288, 299, 302, 303, 304, 305, 306, 309, 312, 313, 314, 315, 317, 318], "2x_1": [35, 311], "3x_1": 35, "n_sampl": [36, 37, 53, 55, 89, 102, 195, 196, 197, 220, 268, 269, 281, 288, 305, 309, 312, 315, 318], "emiss": [36, 37, 268, 269, 306, 312, 318], "mask": [36, 197, 283], "metast": [36, 41, 81, 89, 93, 96, 97, 100, 104, 105, 106, 113, 139, 278, 285, 295, 297, 301, 306, 308, 310, 314, 317], "linearli": [36, 37, 233, 283, 305, 312, 313, 318], "separ": [36, 37, 53, 89, 90, 93, 96, 97, 103, 108, 199, 224, 225, 226, 227, 283, 292, 295, 299, 305, 306, 309, 310, 311, 312, 313, 318], "devic": [36, 37, 58, 59, 60, 61, 62, 63, 64, 302, 303, 312, 318], "sequenc": [36, 37, 53, 91, 92, 93, 117, 118, 220, 234, 304, 306, 309, 313, 314], "Its": [36, 37, 61, 102, 235, 317], "95": [36, 37, 90, 102, 103, 188, 193, 199, 202, 219, 288, 306, 313], "mu_0": [36, 37, 42, 317], "mu_1": [36, 37, 100, 104, 105, 106, 317], "015": 36, "afterward": [36, 37, 61, 317], "swissrol": [37, 253, 274], "90": [37, 288, 302, 304, 314], "7": [37, 53, 81, 82, 96, 97, 100, 102, 104, 105, 106, 107, 113, 114, 119, 125, 139, 147, 154, 158, 161, 164, 168, 170, 171, 256, 261, 282, 284, 285, 286, 287, 288, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "mu_2": 37, "mu_3": 37, "quintupl": [38, 253, 274], "slowli": [38, 53, 270, 313], "oscil": [38, 235, 270, 317], "origin": [38, 43, 53, 68, 84, 93, 114, 137, 230, 270, 285, 298, 300, 304, 306, 307, 314, 315, 317], "arctan": 38, "timedependentsystem": [38, 252], "start": [38, 56, 89, 93, 94, 96, 97, 100, 102, 104, 105, 106, 109, 119, 131, 137, 141, 147, 160, 168, 213, 230, 232, 233, 261, 289, 297, 299, 302, 304, 306, 312, 313, 314], "metropoli": [39, 253, 274], "neighbor": [39, 156, 235, 314], "1d": [39, 107, 253, 274, 275, 291, 296], "unit": [39, 42, 61, 82, 93, 100, 104, 105, 106, 108, 140, 198, 212, 216, 300, 305, 312, 314, 318], "min": [39, 45, 53, 55, 186, 268, 270, 284, 287, 288, 289, 290, 299, 302, 303, 304, 305, 312, 313, 314, 315, 317, 318], "e_": 39, "e_i": [39, 102, 107, 161], "tripl": [40, 41, 253, 274, 301], "75": [40, 186, 255, 284, 288], "24": [40, 41, 51, 58, 279, 288, 293, 299, 301, 303, 308, 312, 314, 317], "82": [40, 235, 288], "4251": 40, "27": [40, 259, 266, 274, 288, 299, 303, 314, 317], "5344": 40, "53128": 40, "24006": 40, "0684": 40, "found": [41, 47, 61, 83, 88, 89, 107, 108, 111, 294, 299, 303, 306, 307, 308, 316], "09": [41, 100, 104, 105, 106, 192, 288, 301], "3e": [41, 58, 288, 303, 305, 310, 314], "quad": [41, 43, 297, 298, 307, 308, 309], "5e": [41, 63, 288, 302], "volum": [41, 55, 186, 297, 301, 313, 314], "american": [41, 94, 158, 297, 301, 306, 314], "mathemat": [41, 94, 119, 297, 301, 306, 314], "soc": [41, 301, 314], "instantaneous_coeffici": 42, "singular_valu": [42, 48, 317], "timelagged_coeffici": 42, "rank_0": 42, "rank_t": 42, "var_cutoff": [42, 53, 55, 313], "instantaneous_ob": [42, 46, 48, 50, 52, 54], "_monomi": [42, 47, 53, 54, 55, 313], "ident": [42, 47, 53, 54, 55, 73, 82, 89, 93, 100, 104, 105, 106, 110, 214, 221, 252, 300, 301, 306, 307, 313], "timelagged_ob": [42, 46, 48, 50, 52, 54], "tau": [42, 46, 48, 50, 52, 53, 54, 55, 56, 83, 84, 89, 93, 100, 102, 104, 105, 106, 108, 109, 110, 121, 130, 131, 137, 145, 149, 158, 208, 221, 289, 293, 295, 302, 304, 307, 308, 309, 312, 313, 316, 317], "project": [42, 43, 46, 53, 55, 61, 89, 93, 96, 97, 105, 243, 254, 269, 286, 289, 290, 293, 294, 295, 298, 300, 301, 302, 303, 305, 306, 312, 313, 317, 318], "specif": [42, 74, 75, 76, 77, 78, 79, 147, 202, 208, 216, 294, 317], "singular": [42, 45, 48, 53, 55, 69, 71, 72, 100, 104, 105, 106, 178, 184, 282, 295, 303], "sigma_i": [42, 178, 317], "chi_1": [42, 317, 318], "approx": [42, 45, 184, 195, 196, 293, 311, 317], "chi_0": [42, 303, 317, 318], "full": [42, 56, 82, 84, 93, 100, 101, 102, 104, 105, 106, 107, 113, 147, 160, 161, 162, 164, 167, 169, 192, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 299, 313, 317, 318], "kind": [42, 58, 60, 61, 63, 65, 72, 102, 221, 284, 292, 294, 298, 309, 312, 314, 316], "tica": [42, 55, 252, 275, 291, 295, 296, 317], "basis_transform_forward": 42, "basis_transform_backward": 42, "output_dimens": [42, 46, 48, 50, 52, 54, 317], "transferoperatormodel": [42, 252], "coeffici": [42, 186, 195, 196, 197, 295, 311], "c_": [42, 53, 55, 66, 89, 96, 100, 104, 105, 106, 109, 111, 149, 154, 156, 158, 159, 160, 224, 225, 227, 228, 307, 309, 313, 314, 316, 317], "00": [42, 53, 55, 66, 100, 104, 105, 106, 140, 274, 288, 291, 313, 317], "0t": [42, 53, 55, 66, 313, 317], "tt": [42, 53, 55, 66, 313, 317], "structur": [42, 63, 161, 282, 294, 295, 298, 301, 303, 307, 313], "11": [42, 53, 55, 63, 71, 72, 100, 104, 105, 106, 147, 288, 293, 299, 302, 303, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318], "cut": [42, 53, 55, 174], "togeth": [42, 55, 131, 205, 244, 298, 310, 314], "futur": [42, 46, 48, 50, 52, 54, 55, 61, 298, 317], "backward": [42, 46, 48, 50, 52, 54, 55, 61, 82, 96, 100, 104, 105, 106, 114, 119, 120, 133, 142, 164, 167, 169, 228, 230, 289, 303, 307, 314, 317], "mapped_data": [42, 46, 48, 50, 52, 54], "ck_test": [42, 53, 55, 89, 90, 93, 94, 100, 102, 103, 104, 105, 106, 107, 188, 219, 252, 276, 302], "test_model": [42, 53, 55, 71, 89, 94, 102, 107, 221, 276, 317], "include_lag0": [42, 90, 93, 100, 103, 104, 105, 106, 221], "n_observ": [42, 53, 55], "phi": [42, 53, 55, 301, 302, 307, 308], "chapman": [42, 90, 93, 100, 103, 104, 105, 106, 188, 219, 221, 251, 275, 291, 296, 302], "kolmogorov": [42, 90, 93, 100, 103, 104, 105, 106, 188, 219, 221, 251, 275, 291, 296, 302], "encapsul": [42, 45, 47, 51, 58, 60, 63, 83, 191, 232], "limit": [42, 53, 55, 83, 100, 104, 105, 106, 109, 110, 188, 298, 314, 316], "input_dimens": 42, "express": [42, 128, 230, 298, 306, 317], "n_statist": 42, "progressbar": [42, 89, 214, 221], "chapmankolmogorovtest": [42, 93, 100, 104, 105, 106, 188, 221, 252], "langl": [42, 100, 104, 105, 106, 121, 125, 130, 131, 295, 307, 317], "g_": [42, 307, 308], "f_": [42, 110, 150, 162, 164, 170, 311, 314], "rangle_": [42, 121, 130, 307, 317], "rho_": 42, "empir": [42, 100, 104, 105, 106, 256, 260, 317], "predict": [42, 100, 101, 104, 105, 106, 188, 195, 196, 197, 219, 311], "th": [42, 93, 100, 104, 105, 106, 109, 110, 111, 122, 124, 144, 159, 195, 288, 294, 311, 315, 316], "power": [42, 93, 100, 104, 105, 106, 311, 317], "champan": 42, "compar": [42, 58, 60, 102, 107, 149, 161, 221, 295, 303, 305, 306, 314, 315, 317, 318], "static": [42, 83, 89, 101, 199, 206, 207, 220, 229, 233, 299, 306], "effective_output_dimens": 42, "rank0": 42, "rankt": 42, "lag_multipl": 42, "observables_mean_fre": 42, "statistics_mean_fre": 42, "approxim": [42, 45, 47, 49, 53, 54, 55, 56, 57, 71, 72, 87, 100, 104, 105, 106, 160, 181, 182, 183, 196, 252, 286, 295, 300, 301, 303, 308, 310, 313, 317, 318], "extrapol": [42, 317], "markovian": [42, 93, 221, 249, 295, 302], "unmodifi": 42, "averag": [42, 61, 71, 83, 100, 101, 104, 105, 106, 109, 110, 306, 316, 317], "window": [42, 56, 83, 84, 109, 110, 149, 158, 309, 316], "total": [42, 82, 84, 146, 147, 158, 167, 168, 169, 171, 197, 200, 201, 230, 235, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 314, 316], "_": [42, 55, 74, 75, 76, 77, 78, 79, 92, 100, 104, 105, 106, 119, 121, 126, 130, 131, 141, 158, 186, 221, 254, 278, 295, 299, 303, 304, 305, 307, 308, 310, 313, 314, 317], "sigma_": [42, 159, 313], "psi_": [42, 301], "phi_": 42, "q_": [42, 119, 314], "r_": [42, 259, 266, 267, 273], "mu_t": 42, "achiev": [42, 61, 299, 317], "hat": [42, 299, 300], "cross": [42, 65, 71, 72, 100, 104, 105, 106, 121, 130, 225, 307, 308, 314, 317], "typic": [42, 61, 71, 158, 308, 317], "vamp1": [42, 71, 100, 104, 105, 106], "rayleigh": [42, 71, 100, 104, 105, 106], "quotient": [42, 71, 100, 104, 105, 106], "vamp2": [42, 63, 69, 70, 71, 100, 104, 105, 106], "error": [42, 61, 71, 83, 84, 89, 100, 101, 104, 105, 106, 109, 146, 147, 150, 158, 306, 312, 314, 316, 317], "covariances_test": [42, 71], "realiz": [42, 71, 93, 100, 104, 105, 106, 146, 147, 309], "spd": [42, 180, 181, 182, 183], "mani": [42, 53, 94, 100, 104, 105, 106, 107, 196, 213, 235, 297, 306, 307, 309, 310, 312, 313], "33": [42, 61, 71, 264, 270, 274, 288, 303], "nonlinear": [42, 45, 50, 51, 55, 61, 63, 71, 72, 105, 107, 195, 197, 295, 300, 301, 303, 305, 307, 308, 309, 311, 312, 313, 317, 318], "scienc": [42, 45, 51, 55, 63, 71, 72, 100, 101, 105, 107, 109, 111, 114, 119, 121, 130, 131, 141, 195, 197, 295, 297, 301, 307, 308, 309, 311, 313, 314, 315, 317, 318], "23": [42, 53, 55, 63, 71, 72, 102, 105, 107, 109, 111, 192, 194, 197, 288, 291, 295, 297, 299, 303, 309, 313, 314, 315, 317, 318], "66": [42, 55, 63, 71, 72, 105, 107, 288, 295, 301, 309, 317, 318], "2020": [42, 47, 55, 63, 71, 72, 105, 107, 295, 309, 317, 318], "cecilia": [42, 53, 55, 71, 100, 101, 105, 108, 295, 297, 313, 317], "clementi": [42, 53, 55, 71, 100, 101, 105, 108, 295, 297, 313, 317], "theori": [42, 43, 47, 53, 55, 71, 82, 89, 100, 104, 105, 106, 108, 114, 119, 164, 168, 169, 170, 171, 235, 252, 293, 295, 297, 299, 300, 306, 313, 317], "5002": [42, 53, 55, 71, 105, 313, 317], "5011": [42, 53, 55, 71, 105, 313, 317], "2015": [42, 45, 51, 53, 55, 71, 72, 83, 89, 102, 105, 109, 161, 295, 301, 308, 309, 313, 314, 316, 317], "timescal": [42, 53, 87, 89, 90, 93, 94, 96, 100, 103, 104, 105, 106, 130, 131, 147, 193, 220, 222, 251, 275, 291, 295, 296, 297, 302, 304, 309, 313], "impli": [42, 84, 131, 145, 147, 193, 251, 275, 291, 296, 298, 302, 313], "t_i": [42, 53, 100, 104, 105, 106, 130, 131, 145, 208, 230, 313], "log": [42, 61, 62, 109, 111, 130, 131, 145, 154, 158, 190, 212, 277, 279, 281, 299, 302, 312, 313], "lambda_i": [42, 53, 100, 104, 105, 106, 121, 130, 131, 145, 158, 309, 313], "By": [42, 53, 87, 88, 91, 92, 93, 95, 100, 104, 105, 106, 108, 109, 115, 118, 190, 193, 195, 196, 212, 311, 312, 313, 317], "under": [42, 53, 55, 58, 60, 61, 63, 83, 89, 93, 100, 104, 105, 106, 107, 158, 160, 184, 221, 229, 231, 236, 237, 294, 295, 298, 299, 301, 302, 304, 306, 309, 317], "principl": [42, 235, 295, 300, 313, 317, 318], "howev": [42, 61, 83, 100, 104, 105, 106, 294, 299, 306, 307, 310, 313, 317], "percentag": [42, 53, 313, 317], "interpret": [42, 90, 107, 186, 215, 216, 218, 233, 295, 307, 313, 314, 316, 317], "rais": [42, 61, 72, 93, 102, 106, 110, 158, 192, 194, 206, 207, 218, 229, 231, 236, 237], "valueerror": [42, 110, 218], "real": [42, 100, 104, 105, 106, 135, 282, 283, 293, 300, 301, 303, 305, 307, 308], "imaginari": [42, 276, 283], "transformed_data": [42, 48, 50, 52, 54], "cumulative_kinetic_vari": 42, "cumul": [42, 53, 55], "strictli": [42, 53, 55, 61], "feature_component_correl": [42, 313], "x_i": [42, 43, 45, 74, 75, 76, 77, 78, 79, 102, 107, 110, 111, 161, 218, 299, 300, 301, 306, 307, 308, 313, 315], "theta_j": [42, 313], "linear": [42, 43, 53, 55, 61, 133, 148, 151, 152, 153, 186, 195, 196, 197, 233, 279, 300, 302, 303, 305, 310, 311, 312, 313, 317, 318], "them": [42, 48, 50, 52, 53, 54, 55, 59, 61, 62, 68, 90, 96, 97, 102, 106, 146, 147, 194, 297, 301, 313, 316], "written": [42, 55, 121, 130, 297, 306, 307, 313, 317], "corr": [42, 121, 313], "theta": [42, 195, 196, 311, 313], "sum_l": [42, 313], "x_l": [42, 313], "mu_l": [42, 313], "li": [42, 313, 315], "eigenvector": [42, 43, 45, 49, 50, 51, 52, 53, 81, 93, 100, 104, 105, 106, 113, 121, 124, 130, 135, 139, 140, 141, 142, 158, 174, 175, 179, 180, 282, 300, 304, 307, 309, 310], "problem": [42, 45, 53, 55, 89, 119, 174, 252, 294, 298, 307, 308, 313, 314, 315, 317], "There": [42, 43, 89, 216, 307, 308, 314, 317], "row": [42, 81, 89, 91, 93, 98, 100, 104, 105, 106, 107, 115, 116, 117, 118, 134, 136, 140, 159, 173, 182, 195, 219, 224, 225, 226, 227, 228, 233, 235, 297, 303, 306, 307, 311, 313], "koopman_matrix": [42, 46, 48, 50, 52, 54, 252], "operator_invers": [42, 46, 48, 50, 52, 54], "pseudo": [42, 46, 48, 50, 52, 54, 158, 301], "instead": [42, 46, 47, 48, 50, 52, 53, 54, 55, 61, 68, 72, 100, 101, 102, 104, 105, 106, 107, 108, 109, 197, 230, 233, 295, 312, 313], "km": [42, 55], "singular_vectors_left": [42, 290, 313, 317], "repres": [42, 63, 84, 85, 93, 100, 104, 105, 106, 121, 130, 131, 141, 292, 297, 311, 314], "singular_vectors_right": [42, 317], "certain": [42, 61, 84, 93, 235, 295, 298, 314], "preced": [42, 53, 55], "whitening_rank_0": 42, "whitening_rank_t": 42, "exact": [43, 44, 232, 286, 300, 311], "driver": 43, "scipi": [43, 82, 114, 119, 121, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 175, 187, 189, 196, 247, 259, 262, 266, 267, 268, 273, 286, 305, 307, 312, 318], "support": [43, 45, 80, 101, 201, 235, 299, 303, 307, 317], "standard": [43, 89, 91, 92, 94, 101, 102, 140, 146, 147, 199, 235, 297, 300, 305, 306, 307, 308, 309, 317], "follow": [43, 53, 55, 61, 72, 82, 89, 96, 100, 102, 104, 105, 106, 109, 110, 119, 126, 128, 158, 160, 186, 196, 212, 216, 230, 235, 293, 294, 297, 298, 299, 300, 301, 303, 305, 308, 310, 311, 313, 314, 315, 317], "formul": [43, 114, 164, 292, 297, 307, 314], "available_mod": [43, 44], "svd": [43, 47, 48, 100, 104, 105, 106, 300, 317], "packag": [43, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 283, 294, 295, 297, 298, 299, 307, 309, 311], "z_0": 43, "z_t": 43, "z_": [43, 300], "z_1": [43, 300], "y_i": [43, 45, 218, 299, 300, 301, 307, 308], "assumpt": [43, 53, 147, 158, 221, 295, 300, 310], "relationship": [43, 308], "peter": [43, 295, 300, 309, 313, 314], "schmid": [43, 295, 300, 313], "experiment": [43, 100, 101, 104, 105, 106, 295, 297, 300, 313], "mechan": [43, 61, 295, 298, 300, 313], "656": [43, 295, 300, 313], "2010": [43, 158, 295, 299, 300, 307, 313], "jonathan": [43, 295, 300], "tu": [43, 295, 300], "clarenc": [43, 45, 51, 295, 300, 301, 308, 313], "w": [43, 45, 51, 53, 123, 140, 147, 164, 174, 180, 181, 182, 183, 197, 226, 227, 228, 230, 233, 235, 295, 300, 301, 303, 308, 310, 313], "rowlei": [43, 45, 51, 295, 300, 301, 308, 313], "dirk": [43, 295, 300], "luchtenburg": [43, 295, 300], "steven": [43, 195, 197, 295, 300, 311], "l": [43, 61, 93, 100, 102, 104, 105, 106, 110, 119, 121, 130, 131, 140, 141, 147, 150, 154, 158, 159, 162, 164, 167, 169, 174, 181, 182, 183, 195, 197, 199, 219, 270, 295, 300, 306, 309, 311, 314, 315], "brunton": [43, 195, 197, 295, 300, 311], "nathan": [43, 195, 197, 295, 300, 311], "kutz": [43, 195, 197, 295, 300, 311], "applic": [43, 81, 91, 92, 94, 95, 96, 97, 105, 113, 139, 235, 252, 282, 283, 295, 297, 298, 300, 306, 310], "arxiv": [43, 47, 89, 295, 300, 306, 312], "preprint": [43, 47, 83, 89, 295, 300, 306, 312, 316], "1312": [43, 295, 300, 312], "0041": [43, 295, 300], "dmdmodel": [43, 252], "to_dataset": [43, 45, 49, 51, 53, 55, 252], "available_driv": 43, "dmd": [44, 252, 295, 301, 313], "captur": [44, 53, 311, 313, 317], "output_trajectori": 44, "n_eig": [45, 49, 51, 175, 282, 283, 301, 303, 305, 307, 308], "extend": [45, 51, 102, 292, 295, 301, 305, 308, 313, 317], "perron": [45, 139, 308, 310], "frobeniu": [45, 308], "x_m": [45, 308], "y_1": 45, "y_m": 45, "word": [45, 110], "psi_x": [45, 301], "psi_i": [45, 301, 317], "solv": [45, 53, 119, 174, 195, 300, 307, 308, 311, 313, 317], "_f": [45, 300], "pre": [45, 61, 299, 318], "domin": [45, 53, 55, 82, 168, 174, 184, 243, 247, 289, 290, 293, 301, 307, 308, 313, 314, 317], "available_oper": 45, "matthew": [45, 51, 295, 301, 308, 313], "o": [45, 51, 61, 254, 269, 277, 295, 299, 301, 305, 306, 308, 309, 310, 313, 317], "william": [45, 51, 295, 301, 308, 313], "ioanni": [45, 51, 295, 301, 308, 313], "kevrekidi": [45, 51, 295, 301, 308, 313], "driven": [45, 51, 295, 301, 308, 311, 313, 317], "oopman": [45, 51, 295, 301, 308, 313], "1307": [45, 295, 301, 313], "1346": [45, 295, 301, 313], "erron": 45, "robeniu": 45, "51": [45, 288], "79": [45, 288], "doi": [45, 51, 58, 293, 307, 308, 312], "3934": 45, "jcd": 45, "2016003": 45, "edmdmodel": [45, 252], "edmdkoopmanmodel": 45, "edmd": [46, 252, 295, 313], "varphi": [46, 300, 308], "kernel": [47, 48, 49, 50, 51, 52, 67, 74, 75, 77, 78, 79, 80, 197, 235, 252, 268, 275, 291, 295, 296, 312, 318], "_base": [47, 67], "observable_transform": [47, 48, 53, 55, 302, 303, 305, 313, 318], "embed": [47, 48, 106, 308], "introduct": [47, 133, 137, 252, 297, 306], "predefin": [47, 49, 317], "raw": [47, 53, 55, 65, 206, 313], "kvadmodel": [47, 252], "wenchong": 47, "tian": 47, "low": [47, 49, 158, 181, 182, 183, 247, 277, 299, 308], "2008": [47, 109, 160], "02962": 47, "singular_vector": 48, "kvad": [48, 244, 252], "version": [49, 61, 72, 89, 114, 197, 208, 218, 295, 298, 299, 303, 307, 308], "analysi": [49, 51, 53, 81, 82, 84, 89, 96, 97, 100, 104, 105, 106, 107, 108, 109, 113, 123, 125, 133, 134, 135, 136, 140, 142, 145, 147, 158, 246, 252, 288, 295, 297, 299, 306, 307, 308, 310, 313, 314, 315, 317], "cca": [49, 252, 275, 291, 295, 296], "kernelccamodel": [49, 252], "franci": [49, 295, 307], "bach": [49, 295, 307], "michael": [49, 109, 295, 307], "jordan": [49, 295, 307], "independ": [49, 53, 94, 146, 147, 160, 224, 225, 226, 227, 228, 237, 295, 307, 313], "machin": [49, 295, 307], "research": [49, 292, 295, 307], "jul": [49, 295, 307], "48": [49, 288, 295, 307, 314], "2002": [49, 295, 307], "harold": [49, 307, 317], "hotel": [49, 307, 317], "breakthrough": [49, 307, 317], "162": [49, 288, 307, 317], "190": [49, 288, 307, 317], "1992": [49, 307, 317], "kernelcca": [50, 244, 252, 282, 283, 303, 305, 307], "247": [51, 295, 308], "265": [51, 295, 308], "ingmar": [51, 308], "schuster": [51, 53, 295, 308, 313], "krikamol": [51, 308], "muandet": [51, 308], "eigendecomposit": [51, 308], "transfer": [51, 54, 221, 308, 318], "ilbert": [51, 308], "283": [51, 308], "315": [51, 254, 274, 308, 310], "2019": [51, 298, 307, 308, 317], "1007": [51, 308], "s00332": [51, 308], "019": [51, 308], "09574": [51, 308], "andrea": [51, 63, 293, 308, 318], "bittrach": [51, 308], "conform": [51, 55, 105, 110, 308, 309], "149": [51, 288, 308], "244109": [51, 308], "2018": [51, 58, 63, 293, 297, 308, 312, 317, 318], "kerneledmdmodel": [51, 252], "kedmd": [52, 305], "eigenfunct": [52, 53, 282, 283, 295, 301, 304, 307, 308, 313, 317], "kerneledmd": [52, 252, 305, 308], "kinetic_map": [53, 55, 313, 317], "contrast": 53, "maxim": [53, 109, 158, 174, 208, 293, 306, 307, 313, 317], "therefor": [53, 55, 84, 93, 100, 104, 105, 106, 147, 230, 292, 299, 309, 317, 318], "excel": 53, "thermostat": 53, "fact": [53, 100, 104, 105, 106, 157, 292, 313], "slowest": [53, 71, 100, 104, 105, 106, 147, 302, 313, 317], "relev": [53, 55, 100, 104, 105, 106, 142, 147, 300, 302, 314], "exactli": [53, 55, 56, 61, 100, 104, 105, 106, 107, 216, 295, 314], "said": [53, 55, 313, 314, 316], "c0": [53, 174, 256, 260, 271, 305], "keep": [53, 55, 184, 197], "kept": [53, 55, 104, 105, 295, 313, 317], "n_compon": [53, 55, 277, 290, 299, 313], "n_uncorrelated_featur": [53, 55], "specifi": [53, 55, 61, 72, 82, 84, 90, 93, 96, 101, 102, 103, 107, 108, 120, 122, 123, 129, 138, 143, 144, 148, 151, 152, 153, 161, 184, 187, 192, 229, 231, 236, 237, 247, 298, 309, 312, 313, 314, 318], "until": [53, 55, 100, 104, 105, 106, 299, 314], "exce": [53, 55, 233, 295], "fraction": [53, 55, 82, 84, 106, 168, 314], "subspac": [53, 55], "unless": [53, 55, 61, 89, 292, 314, 317], "exclus": [53, 55, 84, 193, 314], "commute_map": [53, 313], "c_0": [53, 313], "mu": [53, 55, 82, 100, 104, 105, 106, 111, 119, 121, 123, 125, 126, 129, 130, 135, 137, 140, 142, 145, 160, 161, 223, 299, 304, 313, 315], "relax": [53, 90, 93, 100, 103, 104, 105, 106, 121, 130, 131, 147, 295, 302, 306, 309, 313, 317], "ln": [53, 93, 100, 104, 105, 106, 309, 313], "reduct": [53, 55, 183, 252, 299, 313, 317], "good": [53, 109, 232, 260, 297, 298, 302, 306, 313], "autocovari": 53, "due": [53, 100, 104, 105, 106, 110, 212, 295, 299, 303, 306, 313, 314, 318], "finit": [53, 54, 55, 96, 133, 212, 295, 297, 307, 311, 317], "symmetri": [53, 161, 309], "explicitli": [53, 100, 104, 105, 106, 313, 316], "enforc": [53, 61, 89, 94, 149, 313], "signal": [53, 100, 104, 105, 106, 108, 295, 313], "shown": [53, 55, 83, 109, 110, 216, 285, 299, 316, 317], "invok": [53, 61, 63, 298], "model_onedim": 53, "projected_data": 53, "assert_equ": [53, 83], "model_var": 53, "brief": 53, "explain": [53, 298, 312, 313, 317], "why": 53, "outperform": 53, "extract": [53, 89, 94, 96, 100, 104, 105, 106, 311], "reaction": [53, 82, 114, 119, 164, 167, 168, 169, 230, 252], "look": [53, 61, 84, 131, 141, 147, 192, 194, 294, 295, 299, 301, 302, 304, 312, 315], "covariancekoopmanmodel": [53, 55, 71, 72, 100, 104, 105, 106, 252], "guillermo": [53, 313], "rez": [53, 313], "hern": [53, 313], "\u00e1": [53, 313], "ndez": [53, 313], "giorgino": [53, 313], "gianni": [53, 313], "de": [53, 83, 292, 298, 313, 316], "fabritii": [53, 313], "identif": [53, 195, 197, 275, 291, 295, 296, 310, 311, 313], "139": [53, 89, 93, 96, 97, 105, 288, 306, 313], "07b604_1": [53, 313], "ralf": [53, 313], "banisch": [53, 313], "commut": [53, 313], "5620": [53, 313], "5630": [53, 313], "lutz": [53, 295, 313], "molgedei": [53, 295, 313], "heinz": [53, 295, 313], "mixtur": [53, 99, 277, 295, 299, 313], "delai": [53, 295, 313], "letter": [53, 295, 313], "72": [53, 274, 288, 295, 313], "3634": [53, 295, 313], "1994": [53, 295, 313], "christian": [53, 89, 306, 313], "schwant": [53, 313], "vijai": [53, 72, 105, 161, 297, 313, 317], "pand": [53, 72, 105, 161, 297, 313, 317], "improv": [53, 295, 313], "reveal": [53, 295, 299, 300, 301, 303, 312, 313, 317, 318], "nativ": [53, 313], "fold": [53, 72, 114, 119, 162, 164, 167, 169, 313, 314], "ntl9": [53, 313], "2000": [53, 306, 310, 313, 314], "2009": [53, 82, 114, 119, 158, 161, 162, 164, 167, 168, 169, 170, 171, 297, 313, 314], "chapman_kolmogorov_valid": [53, 55, 89, 94, 102, 107], "mlag": [53, 55, 89, 94, 102, 107], "classmethod": [53, 55], "covariance_estim": [53, 55, 313, 317], "properli": [53, 55, 298, 313], "memori": [53, 55, 61, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 299, 303], "usag": [53, 55, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "from_data": [53, 55, 93, 96, 97, 252], "run": [53, 55, 61, 93, 100, 104, 105, 106, 235, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 294, 298, 315], "decreas": [53, 55, 84, 110, 123, 125, 168, 192, 194], "load": [53, 55, 109, 295, 302, 303, 308], "individu": [53, 55, 61, 72, 84, 105, 121, 130, 131, 141, 148, 188, 229, 236, 292, 302], "timeshifted_split": [53, 55, 252, 295], "chunksiz": [53, 55, 208, 295], "joint_model": [53, 55], "fit_from_covari": [53, 55], "fit_from_timeseri": [53, 55], "dispatch": [53, 55, 74, 75, 76, 77, 78, 79, 84, 220, 294], "insid": [53, 55, 101, 109, 193, 235, 294, 301], "unscal": [53, 313, 317], "As": [53, 298, 299, 306, 310, 313, 314, 316, 317], "timescale_i": 53, "thereof": [54, 93, 107, 309], "upon": [55, 106, 192, 194, 317], "induc": [55, 299, 316, 317], "wrt": [55, 197], "convent": [55, 140, 216], "densiti": [55, 92, 100, 104, 105, 106, 235, 256, 260, 271, 272, 275, 291, 295, 296, 308, 315, 317], "visit": [55, 81, 84, 88, 93, 119, 233, 271, 310, 315, 316, 317], "infinitesim": 55, "phase": 55, "earlier": 55, "action": [55, 298, 317], "dy": [55, 317], "mid": [55, 93, 101, 230, 295, 297, 304, 306, 309, 311, 314, 316, 317], "situat": [55, 141, 306], "irrevers": 55, "stationari": [55, 81, 82, 89, 90, 93, 94, 96, 97, 100, 102, 103, 104, 105, 106, 107, 113, 114, 123, 125, 126, 129, 135, 137, 140, 142, 143, 145, 147, 158, 160, 161, 164, 167, 169, 192, 194, 212, 230, 232, 256, 260, 284, 295, 304, 309, 310, 317], "superposit": 55, "ansatz": [55, 295, 305, 317], "chi": [55, 93, 303, 305, 317, 318], "freedom": [55, 157], "exclud": [55, 90, 93, 103, 107, 298, 314], "next": [55, 87, 119, 233, 293, 295, 311, 314], "best": [55, 197, 300, 303, 311, 317, 318], "prime": [55, 307], "blocksiz": [56, 72, 305], "slide": [56, 72, 83, 84, 107, 108, 109, 110, 149, 158, 303, 304, 305, 309, 314, 316], "random_st": [56, 57, 72, 208, 234, 270, 277, 299, 305], "uncorrel": [56, 83, 84, 87, 89, 93, 94, 96, 107, 109, 110, 160, 316], "fragment": [56, 72, 314], "Will": [56, 72, 89], "longer": [56, 84, 89, 93, 94, 96, 100, 104, 105, 106, 147, 296, 302, 316], "These": [56, 63, 84, 109, 294, 295, 297, 308, 309, 311, 315, 316, 317, 318], "overlap": [56, 72, 110, 295], "conserv": [56, 147, 163, 165, 314], "count": [56, 83, 84, 85, 88, 89, 90, 91, 93, 94, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 128, 129, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 252, 281, 297, 303, 305, 309, 314, 315], "dtraj": [56, 72, 83, 84, 86, 87, 88, 89, 90, 93, 94, 96, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 115, 117, 118, 146, 149, 232, 234, 256, 260, 265, 268, 269, 276, 278, 280, 281, 283, 288, 302, 303, 304, 305, 312, 315, 318], "randomli": [56, 72, 98, 146, 147, 299], "randomst": [56, 57, 72, 208, 270, 277, 299, 300, 301, 303], "decod": [58, 59, 60, 62, 312], "optim": [58, 60, 61, 63, 64, 81, 100, 109, 113, 139, 158, 161, 192, 194, 195, 197, 235, 286, 299, 303, 305, 306, 307, 309, 311, 312, 317, 318], "adam": [58, 60, 63, 303, 307], "learning_r": [58, 60, 63, 302, 305, 312, 318], "0003": 58, "cpu": [58, 61, 64, 302, 303, 312, 318], "autoencod": [58, 59, 60, 62, 252, 293], "torch": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 294, 302, 303, 305, 312, 318], "nn": [58, 59, 60, 61, 62, 63, 64, 302, 303, 305, 312, 318], "sgd": 58, "rmsprop": 58, "lr": [58, 140], "rate": [58, 60, 63, 82, 134, 158, 167, 230, 252, 303, 314], "karpathi": 58, "christoph": [58, 108, 109, 111, 293, 297, 312, 315], "wehmey": [58, 108, 109, 111, 293, 297, 312, 315], "chem": [58, 154, 160, 293, 312], "phy": [58, 154, 160, 164, 293, 312], "148": [58, 288, 293, 312], "241703": [58, 293, 312], "jun": [58, 293, 312], "1063": [58, 293, 307, 312], "5011399": [58, 293, 312], "evaluate_loss": [58, 60], "tensor": [58, 60, 61, 63, 64, 65, 66, 69, 70, 79, 101, 150, 159, 303, 312, 318], "loss": [58, 60, 63, 70, 303, 312], "network": [58, 59, 60, 61, 62, 63, 64, 82, 100, 104, 105, 106, 114, 164, 168, 187, 192, 194, 230, 233, 247, 249, 252, 275, 291, 293, 295, 296, 303, 312, 314, 318], "taemodel": [58, 62, 252], "data_load": [58, 60, 63], "dataload": [58, 60, 63, 302, 303, 305, 312, 318], "n_epoch": [58, 60, 63, 302, 303, 305, 312, 318], "validation_load": [58, 60, 63, 302, 312, 318], "reset": [58, 60], "loader": [58, 60, 205, 302, 303, 312, 318], "epoch": [58, 60, 63, 303], "mnone": [58, 60], "setup_optim": [58, 60, 63], "pytorch": [58, 60, 63, 79, 80, 205, 243, 244, 252, 293, 302, 312, 318], "float32": [58, 59, 60, 62, 63, 64, 91, 264, 302, 303, 305, 312, 318], "float64": [58, 60, 61, 63, 91, 111], "train_loss": [58, 60, 312], "empti": [58, 60, 63, 110, 189, 190, 206, 207, 262, 300, 305, 313], "validation_loss": [58, 60, 312], "latent": [59, 60, 62, 293, 312], "datatyp": [59, 61, 205, 207], "tae": [59, 60, 252, 312], "latent_cod": [59, 62], "represent": [59, 61, 62, 100, 104, 105, 106, 192, 194, 313, 317, 318], "0005": [60, 63], "kld": 60, "tvaemodel": [60, 252], "reconstruct": [60, 305, 312], "activ": [61, 81, 89, 93, 100, 104, 105, 106], "elu": [61, 302, 303], "mlp": [61, 64, 305, 312, 318], "add_modul": 61, "child": 61, "fn": 61, "recurs": 61, "submodul": 61, "children": 61, "init": [61, 89, 93, 96, 97, 98, 99, 269, 294, 306, 308], "no_grad": [61, 303], "init_weight": 61, "fill_": 61, "net": [61, 82, 162, 163, 164, 165, 166, 275, 284, 291, 296, 314], "sequenti": [61, 197, 300, 302, 303, 311, 312, 318], "in_featur": [61, 302, 312, 318], "out_featur": [61, 302, 312, 318], "bia": [61, 108, 109, 110, 111, 196, 288, 297, 302, 312, 315, 318], "bfloat16": 61, "cast": [61, 64, 283], "buffer": 61, "place": [61, 192, 194, 229, 277, 286, 294, 297, 298, 299, 314, 315, 317], "member": [61, 82, 90, 101, 103, 199], "buf": 61, "20l": 61, "1l": 61, "5l": 61, "immedi": [61, 218], "move": [61, 147, 288, 314, 315, 318], "cuda": [61, 302, 303, 312, 318], "gpu": [61, 303], "eval": [61, 179, 283, 303], "behavior": [61, 63, 101, 102, 106, 107, 108, 109, 229, 310, 311], "thei": [61, 68, 82, 84, 91, 94, 100, 104, 105, 106, 175, 208, 218, 233, 238, 246, 293, 295, 301, 302, 306, 309, 310, 311, 312, 314, 315], "affect": 61, "dropout": [61, 303], "batchnorm": 61, "etc": [61, 83, 109, 110, 314, 316], "equival": [61, 91, 92, 95, 216, 295, 307, 313], "local": [61, 94, 235, 298, 299, 306, 315], "disabl": [61, 299], "grad": 61, "comparison": [61, 252, 275, 291, 296], "confus": 61, "extra_repr": 61, "extra": 61, "To": [61, 99, 168, 216, 294, 299, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "own": [61, 303], "both": [61, 93, 100, 104, 105, 106, 109, 110, 111, 279, 295, 298, 300, 305, 309, 314], "multi": [61, 312, 315], "overridden": [61, 74, 75, 76, 77, 78, 79, 209], "although": [61, 299], "recip": 61, "within": [61, 64, 81, 84, 93, 109, 110, 115, 116, 117, 118, 208, 233, 300, 303, 310, 313, 316], "sinc": [61, 69, 72, 94, 96, 129, 235, 290, 295, 300, 302, 303, 307, 309, 312, 313, 317], "hook": 61, "silent": 61, "get_buff": 61, "target": [61, 82, 100, 104, 105, 106, 132, 137, 138, 186, 197, 312], "throw": 61, "docstr": 61, "get_submodul": 61, "explan": 61, "correctli": [61, 283], "fulli": [61, 81, 113, 158], "qualifi": 61, "referenc": [61, 185], "attributeerror": 61, "invalid": [61, 100, 104, 105, 106, 209, 305], "path": [61, 82, 93, 96, 100, 104, 105, 106, 114, 119, 164, 168, 169, 170, 171, 233, 252, 297, 303, 316], "resolv": [61, 83, 84, 86, 87, 90, 96, 249, 299, 302], "someth": [61, 229, 231, 236, 237, 309], "get_extra_st": 61, "state_dict": 61, "set_extra_st": 61, "build": [61, 102, 294, 295, 299, 304, 312], "pickleabl": 61, "ensur": [61, 89, 91, 93, 100, 104, 105, 106, 160, 298, 315], "serial": 61, "guarante": [61, 216, 295], "break": 61, "pickl": 61, "get_paramet": 61, "sai": [61, 309, 311], "net_b": 61, "net_c": 61, "conv": 61, "conv2d": 61, "kernel_s": 61, "stride": [61, 83, 86, 87, 89, 93, 94, 96, 109, 110, 208, 235, 264, 307, 316, 317], "200": [61, 278, 283, 288, 301, 303, 305, 306], "diagram": [61, 292], "show": [61, 110, 193, 256, 259, 260, 263, 264, 270, 271, 272, 280, 282, 283, 285, 286, 287, 288, 290, 299, 302, 303, 314, 315, 316, 317], "would": [61, 96, 97, 110, 197, 216, 292, 294, 295, 298, 299, 306, 311, 312, 313, 317], "runtim": [61, 307], "queri": 61, "named_modul": 61, "abov": [61, 100, 102, 104, 105, 106, 197, 221, 225, 227, 298, 303, 306, 310, 311, 313, 314, 317], "ipu": 61, "load_state_dict": [61, 303], "strict": 61, "descend": [61, 85, 100, 104, 105, 106, 174, 179, 180], "kei": [61, 294, 303, 311], "persist": 61, "missing_kei": 61, "miss": [61, 314, 316], "unexpected_kei": 61, "unexpect": 61, "namedtupl": 61, "field": 61, "runtimeerror": [61, 93], "duplic": [61, 292], "idx": 61, "enumer": [61, 85, 186, 277, 285, 288, 297, 302, 304, 314, 315, 316], "named_buff": 61, "prefix": 61, "prepend": [61, 216], "running_var": 61, "named_children": 61, "conv4": 61, "conv5": 61, "memo": 61, "remove_dupl": 61, "named_paramet": 61, "register_backward_hook": 61, "removablehandl": 61, "deprec": [61, 72, 210], "favor": 61, "register_full_backward_hook": 61, "handl": [61, 79, 110, 213, 233, 261, 270, 283, 285, 303, 314, 317], "register_buff": 61, "running_mean": 61, "save": [61, 90, 93, 100, 104, 105, 106, 126, 224, 225, 226, 227, 228], "alongsid": [61, 299], "num_featur": 61, "register_forward_hook": 61, "signatur": 61, "won": 61, "inplac": [61, 229], "register_forward_pre_hook": 61, "gradient": [61, 80, 195, 196, 229, 231, 235, 236, 237], "grad_input": 61, "grad_output": 61, "reason": [61, 100, 104, 105, 106, 309, 311], "receiv": [61, 110, 298], "view": [61, 133, 147, 148, 152, 153, 188, 216, 276, 292], "similarli": [61, 121, 130, 299, 301, 309, 317], "caller": 61, "register_load_state_dict_post_hook": 61, "post": [61, 233, 292, 298], "incompatible_kei": 61, "modif": [61, 298], "thrown": 61, "clearn": 61, "avoid": [61, 96, 97], "register_modul": 61, "register_paramet": 61, "requires_grad_": 61, "requires_grad": 61, "autograd": 61, "help": [61, 297, 313], "freez": 61, "finetun": 61, "gan": 61, "share_memori": 61, "share_memory_": 61, "destin": 61, "keep_var": 61, "dictionari": [61, 294], "releas": 61, "design": [61, 294], "ordereddict": 61, "compos": [61, 203, 204, 206], "detach": 61, "non_block": 61, "memory_format": 61, "channels_last": 61, "complex": [61, 89, 93, 96, 97, 102, 105, 283, 306, 313, 314], "unchang": 61, "convert": [61, 84, 90, 92, 95, 103, 149, 186, 205, 207, 216, 218, 222, 318], "asynchron": 61, "host": [61, 294], "pin": 61, "below": [61, 84, 90, 93, 96, 147, 197, 216, 298, 299, 309, 313, 317], "desir": [61, 97, 100, 104, 105, 106, 125, 158, 198, 212, 233, 311, 312], "whose": [61, 173, 294, 311], "format": [61, 149, 186, 192, 194, 279, 303, 304, 305, 306, 317], "4d": 61, "1913": 61, "3420": 61, "5113": 61, "2325": 61, "gpu1": 61, "1914": 61, "5112": 61, "2324": 61, "float16": 61, "cdoubl": 61, "3741": 61, "2382": 61, "5593": 61, "4443": 61, "complex128": 61, "6122": 61, "1150": 61, "to_empti": 61, "dst_type": 61, "xpu": 61, "zero_grad": [61, 303], "set_to_non": 61, "context": [61, 63, 297], "tvae": [62, 252, 312], "reparametr": 62, "lobe": [63, 64, 302, 303, 305, 318], "lobe_timelag": [63, 64], "score_method": [63, 317], "score_mod": 63, "try": [63, 194, 235, 293, 299, 306, 312, 318], "neural": [63, 293, 303, 312, 318], "crisp": [63, 93, 283, 302, 303, 310], "softmax": [63, 302], "share": [63, 64, 188, 298, 318], "semi": [63, 184], "perturb": [63, 93, 100, 104, 105, 106, 150], "small": [63, 66, 68, 69, 84, 89, 102, 107, 161, 168, 192, 194, 298, 302, 304, 305, 311], "sure": [63, 94, 96, 97, 162], "complet": [63, 82, 94, 108, 147, 153, 200, 292, 295, 302, 313, 317], "sym_invers": [63, 66, 69, 252], "strength": 63, "invert": [63, 68, 174, 180, 181, 182, 183, 307], "incom": 63, "mardt": [63, 293, 318], "luca": [63, 293, 318], "pasquali": [63, 293, 318], "natur": [63, 293, 306, 313, 318], "commun": [63, 293, 318], "vampnetmodel": [63, 252, 303], "train_score_callback": 63, "validation_score_callback": 63, "manag": [63, 312], "eg": 63, "partial": [63, 100, 104, 105, 106, 150, 216, 299], "meaning": [63, 107, 147, 298, 317], "validation_data": 63, "steer": 63, "train_scor": [63, 302, 303, 318], "validation_scor": [63, 302, 318], "vampnet": [64, 70, 252, 293], "One": [64, 83, 84, 109, 110, 161, 233, 235, 253, 257, 258, 274, 282, 299, 302, 310, 314, 315, 316, 317], "api": [64, 108, 192, 194, 209, 294, 299, 300, 301, 306, 309, 310, 311, 312, 313, 314, 316, 318], "remove_mean": [65, 224, 225, 226, 227, 228], "trunc": [66, 68, 69, 70], "c_xx": [66, 224, 225, 227], "hermetian": [66, 69], "c00": [66, 317], "c0t": [66, 317], "ctt": [66, 317], "chi_x": [67, 303], "_kernel": 67, "gaussiankernel": [67, 79, 252, 282, 283, 303, 305, 307, 308], "mat": [68, 178, 184], "return_sqrt": 68, "root": [68, 102, 223, 316], "absolut": [68, 125, 163, 165, 174, 306], "x_inv": 68, "data_lag": [69, 70, 73, 205, 207, 282, 303, 307], "contribut": 69, "decorrel": [69, 102], "splitting_mod": 72, "blocksplit": 72, "idea": [72, 252, 299, 300], "divid": [72, 83, 84, 109, 110, 197, 232, 260, 284, 287, 314, 316, 317], "pointer": [72, 305], "consecut": [72, 313], "repetit": 72, "solid": 72, "vamp_scor": [72, 73, 252, 303], "blocksplit_dtraj": 72, "len": [72, 95, 102, 117, 118, 192, 194, 218, 232, 258, 259, 261, 262, 266, 267, 273, 283, 287, 288, 289, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 312, 313, 314, 315, 318], "multiscal": [72, 82, 105, 114, 119, 147, 158, 164, 168, 170, 171, 297, 314, 317], "635": [72, 105, 147, 317], "655": [72, 105, 147, 317], "robert": [72, 105, 133, 148, 151, 152, 153, 235, 317], "mcgibbon": [72, 105, 317], "142": [72, 105, 288, 317], "03b621_1": [72, 105, 317], "cdist": [74, 79], "kappa": [74, 75, 76, 77, 78, 79], "exp": [74, 75, 77, 111, 257, 303, 307, 311], "sum_k": [74, 102, 107, 111, 161], "x_k": 74, "y_k": 74, "bandwidth": [74, 75, 77, 79, 305, 307, 308], "kxy": [74, 75, 76, 77, 78, 79], "_evalu": [74, 75, 76, 77, 78, 79], "intend": [74, 75, 76, 77, 78, 79, 292], "data_1": [74, 75, 76, 77, 78, 79], "data_2": [74, 75, 76, 77, 78, 79], "t_1": [74, 75, 76, 77, 78, 79, 100, 104, 105, 106, 311], "t_2": [74, 75, 76, 77, 78, 79, 311], "y_j": [74, 75, 76, 77, 78, 79, 307, 308], "gramian": [74, 75, 76, 77, 78, 79], "gram": [74, 75, 76, 77, 78, 79, 307, 308], "valid_impl": [74, 79], "binomi": [74, 79], "sigma_1": [75, 317], "sigma_d": 75, "laplacian": 77, "_2": [77, 102, 107, 161, 307], "inhomogen": [78, 303, 317], "polynomi": [78, 195, 196, 305, 307, 311], "even": [80, 96, 110, 184, 297, 300, 317], "still": [80, 83, 100, 104, 105, 106, 107, 163, 165, 192, 194, 298, 299, 314], "usabl": 80, "penalti": 80, "transition_matrix_coars": 81, "pi_coars": 81, "membership": [81, 93, 97, 100, 104, 105, 106, 113, 139, 285, 303, 306, 310, 314], "metastable_distribut": [81, 93, 100, 104, 105, 106, 310], "pcca": [81, 96, 97, 100, 104, 105, 106, 139, 192, 245, 252, 275, 278, 291, 296, 297, 306, 314], "connect": [81, 84, 85, 90, 93, 96, 102, 107, 108, 110, 113, 133, 142, 148, 151, 152, 153, 233, 252, 298, 309, 310, 314, 315, 316], "disconnect": [81, 93, 107, 113], "perfect": [81, 113], "coars": [81, 82, 93, 96, 97, 100, 104, 105, 106, 162, 192, 194, 252, 278, 297, 299, 304, 306], "markovstatemodel": [81, 82, 90, 93, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 186, 194, 230, 232, 233, 252, 271, 284, 288, 297, 306, 309, 314, 315], "grain": [81, 82, 93, 96, 97, 100, 104, 105, 106, 162, 187, 192, 194, 252, 297, 306, 311], "susanna": [81, 96, 97, 105, 113, 139, 297, 306, 310], "\u00f6": [81, 96, 97, 105, 113, 121, 130, 131, 139, 141, 297, 306, 310], "blitz": [81, 96, 97, 105, 113, 139, 297, 306, 310], "marcu": [81, 96, 97, 105, 113, 139, 297, 306, 310], "weber": [81, 96, 97, 105, 113, 139, 297, 306, 310], "fuzzi": [81, 93, 96, 97, 105, 113, 139, 297, 302, 306, 310], "classif": [81, 96, 97, 105, 113, 139, 297, 305, 306, 310], "advanc": [81, 96, 97, 105, 113, 139, 252, 297, 306, 310], "147": [81, 96, 97, 105, 113, 139, 288, 297, 306, 310], "179": [81, 96, 97, 105, 113, 139, 288, 297, 306, 310], "recommend": [81, 83, 89, 93, 100, 104, 105, 106, 107, 109, 110, 121, 123, 125, 130, 131, 140, 142, 145, 316], "visual": [81, 93, 186, 192, 194, 287, 299, 300, 301, 302, 306, 307, 308, 309, 310, 312, 313, 314, 317, 318], "quantiti": [81, 82, 90, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 199, 297, 306, 309, 310, 314], "emploi": [81, 93, 297, 310, 311], "coarse_grained_stationary_prob": [81, 310], "coarse_grained_transition_matrix": [81, 310], "n_metast": 81, "belong": [81, 93, 100, 104, 105, 106, 110, 293, 306, 309, 313, 316], "bayesian": [81, 83, 89, 90, 93, 94, 96, 102, 103, 105, 109, 110, 220, 221, 245, 252, 281, 302, 316], "p_out": 81, "microst": [81, 119, 137, 139, 145, 148, 149, 232, 306, 310, 314], "source_st": [82, 100, 104, 105, 106, 114, 284], "target_st": [82, 100, 104, 105, 106, 114, 284], "net_flux": [82, 192, 284, 287, 314], "stationary_distribut": [82, 100, 104, 105, 106, 113, 114, 230, 256, 260, 309], "qminu": [82, 114, 164, 167, 169], "qplu": [82, 114, 164], "gross_flux": [82, 186, 284, 287, 314], "reactiv": [82, 100, 104, 105, 106, 114, 186, 192, 252, 287], "flux": [82, 100, 104, 105, 106, 114, 186, 192, 194, 230, 233, 252, 275, 284, 291, 296, 297], "tpt": [82, 100, 104, 105, 106, 114, 164, 169, 186, 245, 314], "sink": [82, 171], "intermedi": [82, 233, 295, 314], "node": [82, 152, 186, 187, 192, 194, 316], "committor": [82, 100, 104, 105, 106, 114, 120, 164, 169, 192, 230, 252, 284], "edg": [82, 93, 148, 151, 152, 153, 186, 187, 233, 284, 314, 316], "unnecessari": [82, 100, 104, 105, 106], "back": [82, 84, 105, 186, 288, 293, 294, 297, 301, 303, 305, 306, 313, 314, 315, 316], "gross": [82, 164, 170, 186, 275, 284, 291, 296, 314], "pathwai": [82, 100, 104, 105, 106, 110, 114, 119, 162, 164, 167, 169, 252], "passag": [82, 100, 104, 105, 106, 137, 138, 167, 252, 297, 314], "tool": [82, 84, 108, 114, 123, 125, 133, 134, 135, 136, 140, 142, 145, 205, 246, 252, 297, 298, 299, 307, 317], "educt": 82, "product": [82, 93, 100, 104, 105, 106, 110, 160, 166, 167, 169, 184, 230, 307, 311], "reactive_flux": [82, 100, 104, 105, 106, 186, 252, 284, 287, 314], "philipp": [82, 114, 119, 297, 314], "metzner": [82, 114, 119, 164, 168, 170, 171, 297, 314], "eric": [82, 114, 119, 158, 297, 314], "vanden": [82, 114, 119, 158, 162, 164, 167, 168, 169, 170, 171, 297, 314], "eijnden": [82, 114, 119, 158, 162, 164, 167, 168, 169, 170, 171, 297, 314], "1192": [82, 114, 119, 164, 168, 170, 171, 297, 314], "1219": [82, 114, 119, 164, 168, 170, 171, 297, 314], "coarse_grain": [82, 314], "user_set": 82, "shall": [82, 298], "distinguish": [82, 133, 298, 307, 313], "remaind": [82, 314, 317], "reflect": [82, 254, 255, 264, 269, 270, 290, 295, 304, 318], "backward_committor": [82, 164, 314], "necessari": [82, 168, 216, 298, 313], "preserv": [82, 100, 104, 105, 106, 216, 235], "major_flux": 82, "main": [82, 252, 309], "compris": 82, "request": [82, 84, 94, 102, 306, 317], "maxit": [82, 94, 101, 102, 107, 109, 158, 161, 168, 288, 314, 315], "decompos": [82, 107, 168, 300], "assembl": [82, 168], "capac": [82, 168, 314], "forward_committor": [82, 164, 284, 314], "rightarrow": [82, 83, 108, 314, 316], "intermediate_st": 82, "mfpt": [82, 100, 102, 104, 105, 106, 138, 309, 314], "n_state": [82, 83, 84, 86, 87, 92, 93, 100, 101, 104, 105, 106, 108, 186, 233, 256, 260, 303, 304, 305, 310, 314, 316], "reactant": [82, 167, 169, 171, 230], "total_flux": [82, 169, 314], "count_mod": [83, 102, 107, 108, 109, 110, 276, 281, 305, 309, 316], "transitioncountmodel": [83, 93, 96, 100, 101, 102, 104, 105, 106, 107, 110, 111], "herebi": [83, 298], "decid": [83, 294, 298], "overestim": [83, 316], "likelihood": [83, 84, 89, 92, 93, 94, 96, 102, 105, 107, 109, 110, 111, 154, 158, 161, 193, 220, 252, 297, 306, 315, 316], "plai": [83, 316], "role": [83, 84, 316], "wrong": [83, 102, 109, 110, 309, 316], "uncertainti": [83, 84, 89, 100, 101, 102, 104, 105, 106, 109, 110, 160, 161, 306, 309, 316], "geometr": [83, 109, 110, 316], "subsampl": [83, 93, 109, 110, 316], "s_1": [83, 109, 110, 314, 316], "s_": [83, 109, 110, 150, 306, 314, 316], "s_2": [83, 109, 110, 314, 316], "t_": [83, 109, 110, 119, 133, 135, 137, 150, 154, 160, 309, 314, 316], "consequ": [83, 317], "encount": [83, 232, 297, 314, 316], "portion": [83, 298], "sens": [83, 90, 294, 311, 317], "benjamin": [83, 89, 102, 105, 109, 161, 309, 316], "trendelkamp": [83, 89, 102, 109, 160, 161, 309, 316], "schroer": [83, 89, 102, 109, 160, 161, 309, 316], "143": [83, 89, 102, 109, 161, 288, 309, 316], "11b601_1": [83, 89, 102, 109, 161, 309, 316], "ineffici": [83, 147, 316], "http": [83, 192, 194, 209, 216, 298, 316], "public": [83, 235, 292, 298, 316], "mi": [83, 316], "fu": [83, 292, 316], "berlin": [83, 292, 316], "1699": [83, 316], "__init__": [83, 89, 101, 104, 294, 303], "deal": [83, 247, 295, 297, 298, 303, 314, 317], "lot": [83, 89, 126], "count_matrix": [83, 84, 85, 309, 316], "sparsiti": [83, 158, 161], "counting_mod": 84, "state_histogram": [84, 316], "state_symbol": [84, 106, 107, 314, 316], "count_matrix_ful": 84, "state_histogram_ful": 84, "submodel": [84, 90, 91, 92, 93, 95, 100, 103, 104, 105, 106, 107, 110, 252, 314, 315], "subselect": [84, 93, 96, 245, 316], "made": [84, 91, 92, 93, 95, 96, 102, 104, 107, 298, 313], "analyz": [84, 247, 297, 313, 317, 318], "connected_set": [84, 152, 316], "prune": 84, "mincount_connect": 84, "simpli": [84, 294, 311, 317], "subset": [84, 93, 100, 104, 105, 106, 107, 115, 118, 203, 204, 206, 313, 316], "fine": [84, 187, 304, 305, 311], "far": 84, "effective_count_matrix": 84, "histogram": [84, 88, 102, 104, 110, 189, 190, 212, 271, 272, 304, 308, 315, 316], "discretestatesmanag": [84, 91], "symbol": [84, 91, 93, 106, 107, 311, 315, 316], "iota": [84, 93, 233], "rang": [84, 92, 93, 216, 220, 221, 233, 254, 279, 287, 289, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 314, 315, 317, 318], "transitioncountestim": [84, 102, 107, 110, 276, 281, 302, 303, 304, 305, 309, 314, 316], "connectivity_threshold": [84, 85, 90, 93, 96, 107, 108, 316], "probability_constraint": 84, "sort_by_popul": 84, "regardless": 84, "increas": [84, 94, 110, 168, 192, 194, 295, 314], "n_states_ful": [84, 314], "commonli": [84, 100, 104, 105, 106, 295], "undirect": [84, 85, 93, 102, 148, 151, 152, 153, 316], "graph": [84, 85, 90, 93, 133, 148, 151, 152, 153, 187, 254, 314, 316], "constraint": [84, 94, 102, 107, 160, 235, 309, 316], "decreasingli": 84, "submodel_largest": [84, 90, 93, 96, 276, 304, 305, 314, 316], "count_matrix_histogram": 84, "magnitud": [84, 123, 175, 179, 197, 235, 317], "is_connect": 84, "states_to_symbol": [84, 314], "largest": [84, 88, 89, 90, 93, 94, 96, 102, 105, 107, 110, 112, 147, 148, 152, 153, 175, 180, 182, 184, 314, 315, 316], "elimin": 84, "fall": [84, 105, 110], "disregard": [84, 90, 96, 197], "_state": [84, 90, 96, 102], "_full": [84, 90, 96], "popul": [84, 90, 93, 96, 232, 256, 299, 302, 316], "symbols_to_st": [84, 314, 316], "present": [84, 100, 104, 105, 106, 119, 146, 147, 235, 292, 293, 297, 298, 300, 308, 314, 316, 317], "discard": [84, 89, 283, 306, 310, 316], "happen": [84, 168], "transform_discrete_trajectories_to_submodel": [84, 305, 316], "curat": [84, 93], "unconsid": [84, 93], "possibli": 84, "attent": [84, 298], "could": [84, 92, 100, 104, 105, 106, 116, 118, 187, 302, 307, 313, 314, 315, 318], "across": [84, 229, 236, 317], "irrespect": [84, 161], "is_full_model": 84, "selected_count_fract": 84, "selected_state_fract": 84, "state_symbols_with_blank": 84, "plu": [84, 290, 300, 314], "total_count": 84, "visited_set": 84, "boolean": [85, 100, 104, 105, 106, 118, 164, 182, 192, 197], "seek": [85, 195, 295, 302, 311], "compute_effective_strid": [86, 252], "lag_observ": 86, "stridden": 86, "nonrevers": [87, 89, 160, 161, 295], "neglect": [87, 89, 94, 96], "ignore_neg": 88, "occurr": [88, 110, 115, 116, 117, 118], "hmm": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 194, 252, 298, 306], "initial_hmm": [89, 306], "hiddenmarkovmodel": [89, 90, 94, 96, 97, 98, 99, 100, 104, 105, 106, 252, 306], "n_transition_matrix_sampling_step": 89, "initial_distribution_prior": 89, "transition_matrix_prior": 89, "store_hidden": [89, 90], "prior": [89, 90, 91, 94, 96, 102, 103, 155, 156, 157, 160, 208, 235, 252, 295, 297, 305, 306, 309, 314], "accordingli": [89, 92, 94, 96], "p0": [89, 93, 100, 104, 105, 106, 128, 131, 141], "dirichlet": [89, 91, 92, 147, 159, 160], "conjug": [89, 91], "prod_i": 89, "_i": [89, 119, 174, 299, 301, 313, 314], "a_i": [89, 100, 104, 105, 106, 126, 127], "n_i": [89, 100, 104, 105, 106, 116, 146, 147], "initial_model": [89, 94, 306], "mle": [89, 91, 158, 161, 297], "sooner": 89, "later": [89, 194, 298, 313, 316], "soon": [89, 313], "drawn": [89, 93, 100, 104, 105, 106, 185, 186, 192, 194, 208, 233, 299, 305, 306, 309], "sampler": [89, 160, 303], "recov": [89, 111, 252, 302, 306], "never": [89, 295], "serv": [89, 300], "regim": [89, 317], "neglig": [89, 180, 184], "posterior": [89, 90, 102, 103, 159, 160, 306, 309], "b_": [89, 96, 155, 156, 157], "broadcast": [89, 216], "b_ij": [89, 157], "occur": [89, 91, 92, 95, 109, 110, 111, 112, 115, 116, 117, 118, 292, 314, 316], "bayesianhmmposterior": [89, 252, 306], "hidden_state_trajectories_sampl": [89, 90], "balanc": [89, 94, 160, 161, 295, 309, 310, 313, 314, 317], "confid": [89, 90, 93, 101, 102, 103, 188, 193, 199, 202, 219, 222, 245, 306, 309], "global": [89, 94, 96, 97, 294, 303, 315], "nuria": [89, 93, 96, 97, 105, 306], "plattner": [89, 93, 96, 97, 105, 306], "molecul": [89, 93, 96, 97, 100, 104, 105, 106, 302, 306], "18": [89, 93, 96, 97, 105, 254, 277, 281, 285, 287, 288, 299, 302, 303, 305, 306, 309, 310, 313, 314, 315, 317, 318], "11b609_1": [89, 93, 96, 97, 105, 306], "phillip": [89, 306], "elm": [89, 306], "kaiser": [89, 306], "aaron": [89, 306], "ewal": [89, 306], "wice": [89, 306], "susan": [89, 306], "marquse": [89, 306], "carlo": [89, 306, 309], "bustamant": [89, 306], "nina": [89, 306], "singhal": [89, 306], "hinrich": [89, 306], "spectroscopi": [89, 100, 104, 105, 106, 306], "character": [89, 119, 300, 306], "measur": [89, 101, 195, 196, 212, 241, 286, 306, 311], "1108": [89, 306], "1430": [89, 306], "n_hidden_st": [89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 306], "prior_submodel": 89, "bhmm": [89, 298], "n_thin": [89, 306], "burn": 89, "gibb": [89, 102, 160, 306, 309], "bayesianhmm": [90, 93, 252, 306], "err_est": [90, 93, 100, 103, 104, 105, 106, 219, 221], "evaluate_sampl": [90, 103], "delimit": [90, 103, 199], "deeper": [90, 103], "hierarchi": [90, 103], "gather_stat": [90, 102, 103, 306, 309], "store_sampl": [90, 102, 103, 199, 309], "about": [90, 100, 103, 104, 105, 106, 110, 196, 199, 297, 301, 305, 308, 309, 317], "quantitystatist": [90, 103, 252], "ob": [90, 91, 92, 93, 95, 131, 141, 283, 299], "discreteoutputmodel": [90, 93, 95, 96, 97, 246, 252], "observe_nonempti": [90, 93], "submodel_popul": [90, 93], "output_prob": [91, 93], "ignore_outli": [91, 92, 95], "discrete_states_manag": 91, "classic": [91, 312], "literatur": [91, 297], "b_i": 91, "n_": [91, 92, 93, 95, 186, 299, 314], "a_": [91, 311, 316], "outlier": [91, 92, 95], "t_k": [91, 92, 95], "outputmodel": [91, 92, 93, 246, 252], "generate_observation_trajectori": [91, 92, 95], "hidden_state_trajectori": [91, 92, 93, 95], "o_t": [91, 92, 95], "_t": [91, 95, 174, 317], "s_t": [91, 92, 95, 309], "map_observations_to_submodel": [91, 93], "sub": [91, 93, 279, 295], "mapped_observ": 91, "observations_per_st": [91, 92, 95], "n_k": [91, 92, 315], "output_model": [91, 92, 93], "asarrai": [91, 288], "to_state_probability_trajectori": [91, 92, 95], "entir": [91, 159, 314], "p_o": 91, "meant": [91, 92, 95, 160, 192, 194], "worst": [91, 92, 95], "unhandl": [91, 92, 95], "crash": [91, 92, 95, 96, 97], "n_observable_st": [91, 92, 95], "contin": [91, 92, 95, 114], "instabl": [92, 235, 310], "ntrajectori": 92, "nob": 92, "randn": 92, "my": 92, "randint": 92, "state_index": [92, 93], "p_t": [92, 95], "state_prob": [92, 93, 95, 302], "n_hidden": [92, 95], "deviat": [92, 102, 146, 147, 199, 305, 306, 309], "transition_model": [93, 306], "initial_distribut": 93, "initial_count": 93, "observation_symbol": 93, "observation_symbols_ful": 93, "macro": [93, 298, 306, 310], "micro": [93, 100, 104, 105, 106, 285, 306, 310, 314], "baum": [93, 94, 306], "welch": [93, 94, 306], "gamma": 93, "sort": [93, 100, 104, 105, 106, 148, 174, 179, 180], "metastable_from_data": [93, 97, 99, 252, 306], "metastable_from_msm": [93, 96, 99, 252, 306], "maximumlikelihoodhmm": [93, 252, 306], "collect_observations_in_st": 93, "retriev": [93, 102], "collected_observ": 93, "nsampl": [93, 102, 116, 118], "compute_observation_likelihood": [93, 306], "compute_viterbi_path": 93, "viterbi": 93, "done": [93, 100, 104, 105, 106, 109, 110, 174, 235, 306], "beforehand": 93, "correlation_ob": 93, "maxtim": [93, 100, 104, 105, 106], "ncv": [93, 100, 104, 105, 106, 121, 123, 125, 130, 131, 140, 142, 145], "experi": [93, 100, 101, 104, 105, 106, 121, 130, 131, 141, 302], "expectation_ob": 93, "fingerprint_correlation_ob": 93, "fingerprint": [93, 100, 104, 105, 106, 121, 130, 131, 141, 252], "fingerprint_correl": [93, 100, 104, 105, 106, 131], "fingerprint_relaxation_ob": 93, "fingerprint_relax": [93, 100, 104, 105, 106, 130], "nonempty_ob": 93, "p_k": [93, 100, 104, 105, 106, 235], "p_0": [93, 100, 104, 105, 106], "pk": [93, 100, 104, 105, 106], "relaxation_ob": 93, "sample_by_observation_prob": 93, "effici": [93, 100, 101, 102, 104, 105, 106, 107, 108, 109, 133, 148, 151, 152, 153, 161, 178, 204, 308], "htraj": 93, "otraj": 93, "states_largest": 93, "strong": [93, 316], "weak": [93, 146, 147, 316], "states_popul": 93, "don": [93, 224, 225, 226, 227, 228, 299], "submodel_disconnect": 93, "bare": 93, "strongli": [93, 110, 212, 316], "weakli": [93, 316], "connectivii": 93, "sub_hmm": 93, "transform_discrete_trajectories_to_observed_symbol": 93, "transition_matrix_ob": 93, "parametr": [93, 210, 303], "kolmogorow": 93, "neq": [93, 134, 137, 149, 159, 164, 314], "p_c": 93, "_c": 93, "pi_c": 93, "count_model": [93, 100, 104, 105, 106, 110, 111, 304, 305, 309, 314], "eigenvectors_left_ob": 93, "eigenvectors_right_ob": 93, "constructor": [93, 100, 104, 105, 106, 200], "lifetim": 93, "ii": 93, "come": [93, 102, 147, 230, 299, 312, 313, 314], "metastable_assign": [93, 100, 104, 105, 106], "pout": 93, "metastable_membership": [93, 100, 104, 105, 106], "metastable_set": [93, 100, 104, 105, 106], "n_observation_st": [93, 98, 306], "algo": 93, "stationary_distribution_ob": 93, "transition_count": [93, 110], "accuraci": [94, 158, 304], "maxit_revers": 94, "heurist": [94, 96, 97, 99, 102, 306], "routin": [94, 109, 125, 195, 247, 305, 311], "prone": [94, 306], "stuck": [94, 96, 97, 299, 306], "optima": [94, 299, 306], "what": [94, 109, 110, 158, 221, 294, 295, 312, 314, 315, 316, 317], "em": 94, "successfulli": 94, "warn": [94, 158, 161, 210, 224, 225, 276, 299, 307, 315], "1000000": [94, 102, 107, 161, 271], "leonard": [94, 306], "alonzo": [94, 306], "eagon": [94, 306], "inequ": [94, 306], "probabilist": [94, 306], "ecologi": [94, 306], "bulletin": [94, 306], "societi": [94, 235, 297, 306], "73": [94, 262, 288, 303, 306], "360": [94, 306], "363": [94, 306], "1967": [94, 306], "fixed_initial_distribut": 94, "fixed_stationary_distribut": 94, "basic": [95, 300, 312, 313], "suppos": [95, 100, 104, 105, 106, 294, 311], "gaussianoutputmodel": [95, 99, 246, 252], "separate_symbol": [96, 97], "unconnect": 96, "region": [96, 119, 260, 301, 302, 313], "populu": 96, "suffix": 96, "everyth": [96, 214, 299], "reversibli": 96, "rl": [96, 119, 155, 156, 157, 164], "ji": [96, 109, 135, 156, 158, 160, 161, 164, 170, 309, 310, 314], "artif": 96, "reversib": [96, 97], "nonzero": [96, 97, 287, 311, 314], "renorm": [96, 97], "suboptim": [96, 97], "hmm_init": [96, 97, 99], "draw": [98, 102, 108, 160, 186, 191, 194, 233, 299, 303], "init_hmm": 98, "transition_matrix_kwarg": 99, "transition_matrix": [99, 100, 102, 104, 105, 106, 114, 230, 232, 271, 288, 303, 304, 306, 309, 310, 315, 318], "n_eigenvalu": [100, 104, 105, 106], "amm_optimizer_st": 100, "augment": [100, 101, 297], "simon": [100, 101, 297], "olsson": [100, 101, 297], "proceed": [100, 101, 105, 109, 111, 114, 119, 121, 130, 131, 141, 195, 197, 297, 299, 306, 311, 314, 315], "nation": [100, 101, 105, 109, 111, 114, 119, 121, 130, 131, 141, 195, 197, 297, 311, 314, 315], "academi": [100, 101, 105, 109, 111, 114, 119, 121, 130, 131, 141, 195, 197, 297, 311, 314, 315], "114": [100, 101, 288, 297], "31": [100, 101, 288, 297, 303, 317], "8265": [100, 101, 297], "8270": [100, 101, 297], "n_metastable_set": [100, 102, 103, 104, 105, 106, 107, 276, 278, 310], "known": [100, 104, 105, 106, 147, 307, 309, 314], "themselv": [100, 104, 105, 106, 294], "plot_ck_test": [100, 104, 105, 106, 219, 221, 252, 276, 291, 302], "committor_backward": [100, 104, 105, 106, 230], "committor_forward": [100, 104, 105, 106, 230], "p_fold": [100, 104, 105, 106], "compute_state_indic": [100, 104, 105, 106], "inact": [100, 104, 105, 106], "state_indic": [100, 104, 105, 106], "compute_trajectory_weight": [100, 104, 105, 106, 212, 280], "reweigh": [100, 104, 105, 106], "t_n": [100, 104, 105, 106, 311], "w_": [100, 104, 105, 106, 131, 141], "interest": [100, 102, 104, 105, 106, 146, 147, 202, 297, 299, 303, 314], "rangl": [100, 104, 105, 106, 121, 125, 130, 131, 295], "rangle_t": [100, 104, 105, 106], "fluoresc": [100, 104, 105, 106], "neutron": [100, 104, 105, 106], "scatter": [100, 104, 105, 106, 235, 254, 261, 262, 269, 270, 277, 282, 283, 290, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 312, 313, 314, 317, 318], "want": [100, 102, 104, 105, 106, 162, 212, 304, 315], "accur": [100, 104, 105, 106, 235], "acf_a": [100, 104, 105, 106], "ccf_": [100, 104, 105, 106], "acf": [100, 104, 105, 106], "stand": [100, 104, 105, 106, 311], "ccf": [100, 104, 105, 106], "long": [100, 104, 105, 106, 206, 207, 297, 308, 313], "infinit": [100, 104, 105, 106, 314, 317], "agre": [100, 104, 105, 106], "ceil": [100, 104, 105, 106], "almost": [100, 104, 105, 106, 180, 224, 225, 226, 227, 228, 299, 300, 310], "lanczo": [100, 104, 105, 106, 121, 123, 125, 130, 131, 140, 142, 145, 175], "plot": [100, 104, 105, 106, 108, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 211, 212, 219, 220, 221, 222, 233, 235, 252, 254, 257, 258, 263, 265, 268, 271, 272, 275, 276, 277, 280, 281, 283, 286, 289, 290, 291, 296, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "matplotlib": [100, 104, 105, 106, 185, 186, 187, 189, 190, 191, 192, 193, 194, 233, 235, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "99": [100, 104, 105, 106, 288, 314], "pylab": [100, 104, 105, 106], "plt": [100, 104, 105, 106, 187, 191, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "eigenvectors_left": [100, 104, 105, 106, 304], "l_ij": [100, 104, 105, 106], "eigenvectors_right": [100, 104, 105, 106, 305], "r_ij": [100, 104, 105, 106], "val": [100, 104, 105, 106, 126], "fo": [100, 104, 105, 106, 126], "sum_i": [100, 104, 105, 106, 121, 126, 130, 131, 141, 146, 169, 178, 235, 299, 314, 317], "pi_i": [100, 104, 105, 106, 161, 164, 169, 309, 310, 314], "amplitud": [100, 104, 105, 106, 130, 131, 229], "nhidden": [100, 104, 105, 106], "return_estim": [100, 104, 105, 106], "pccamodel": [100, 104, 105, 106, 252], "pcca_obj": [100, 104, 105, 106], "reactiveflux": [100, 104, 105, 106, 114, 192, 252, 287, 314], "variou": [100, 104, 105, 106, 247, 251, 305, 311], "tptobj": [100, 104, 105, 106], "ph": [100, 104, 105, 106], "pressur": [100, 104, 105, 106, 235], "rapid": [100, 104, 105, 106], "ensembl": [100, 102, 104, 105, 106, 110, 114, 119, 160, 161, 162, 164, 167, 169, 314, 315], "prepar": [100, 104, 105, 106], "toward": [100, 104, 105, 106, 114, 164, 186, 314, 317], "e_a": [100, 104, 105, 106], "special": [100, 104, 105, 106, 204, 252, 295, 314, 317], "submatrix": [100, 104, 105, 106, 153], "to_koopman_model": [100, 104, 105, 106], "analyt": [100, 104, 105, 106], "update_stationary_distribut": [100, 104, 105, 106], "update_transition_matrix": [100, 104, 105, 106], "cach": [100, 101, 104, 105, 106, 209], "deriv": [100, 101, 102, 104, 105, 106, 107, 108, 109, 195, 196, 286, 307, 308, 311, 314, 317], "empirical_koopman_model": [100, 104, 105, 106], "i1": [100, 104, 105, 106], "1i": [100, 104, 105, 106], "ni": [100, 104, 105, 106], "has_count_model": [100, 104, 105, 106], "is_real": [100, 104, 105, 106], "mu_n": [100, 104, 105, 106], "optimizer_st": 100, "transition_matrix_toler": [100, 104, 105, 106, 107, 114], "expectations_by_st": 101, "experimental_measur": 101, "experimental_measurement_weight": 101, "support_ci": 101, "max_cach": 101, "3000": [101, 265, 303, 307], "conveni": [101, 149, 249, 299, 316, 318], "estimator_from_feature_trajectori": 101, "outsid": [101, 307, 314], "o_": 101, "pred": 101, "lagrang": [101, 111], "multipli": [101, 109, 110, 111], "megabyt": 101, "amm": 101, "parameter": [101, 233, 234, 306, 312, 313, 318], "augmentedmsm": 101, "recent": [101, 102, 107, 109], "convergence_criterion_lagrang": 101, "newton": [101, 158, 235], "algebra": [101, 102, 107, 108, 109, 310], "python": [101, 102, 107, 108, 109, 114, 158, 208, 216, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 299], "suggest": [101, 102, 107, 108, 109, 147, 235], "4000": [101, 102, 107, 108, 109], "much": [101, 102, 107, 108, 109, 147, 310, 313, 317], "support_confid": 101, "stationary_distribution_constraint": [102, 107, 309], "maxerr": [102, 107, 109, 161, 288], "08": [102, 105, 107, 109, 161, 288, 305], "nstep": [102, 160, 308], "unknown": [102, 110, 135, 147, 300, 306, 315], "intersect": 102, "exit": [102, 107, 109, 119, 161, 230], "ik": [102, 107, 158, 161], "track": [102, 107, 161], "qualit": [102, 290], "quantit": 102, "involv": [102, 317], "mm": 102, "70000001": 102, "16463699": 102, "135363": 102, "38169055": 102, "61830945": 102, "12023989": 102, "23690297": 102, "64285714": 102, "furthermor": [102, 292, 295, 297, 306, 309, 314, 316], "abl": [102, 257, 258, 292, 300, 316], "bayesianmsmposterior": [102, 252], "summari": [102, 317], "71108663": 102, "15947371": 102, "12943966": 102, "41076105": 102, "58923895": 102, "13079372": 102, "23005443": 102, "63915185": 102, "likewis": 102, "std": [102, 199, 299, 305], "13707029": 102, "09479627": 102, "09200214": 102, "15247454": 102, "07701315": 102, "09385258": 102, "1119089": 102, "And": [102, 107, 130, 131, 301, 302, 304, 306, 309, 312, 314, 316, 317], "control": [102, 110, 187, 233, 235, 295, 311], "percentil": 102, "conf": [102, 188, 202, 219], "stat": [102, 147, 164, 262, 268, 305, 306, 312, 318], "44083423": 102, "03926518": 102, "0242113": 102, "14102544": 102, "30729828": 102, "02440188": 102, "07629456": 102, "43682481": 102, "93571706": 102, "37522581": 102, "40180041": 102, "69307665": 102, "8649215": 102, "31029752": 102, "44035732": 102, "85994006": 102, "9049811296": 102, "9763615793248155": 102, "6540958274695701": 102, "26": [102, 147, 267, 274, 288, 299, 303, 307, 314, 317], "295326015231058": 102, "909895469938899": 102, "sampledmsm": 102, "previous": [102, 107, 119, 299, 306, 314], "maximumlikelihoodmsm": [102, 104, 105, 106, 252, 278, 280, 303, 304, 305, 309, 310, 314, 318], "ignore_counting_mod": 102, "isn": 102, "famili": [102, 235, 293, 300, 306], "caution": [102, 310], "fit_from_count": [102, 107], "fit_from_discrete_timeseri": [102, 107], "discrete_timeseri": [102, 107], "heavili": [102, 313], "bias": [102, 110, 212, 295, 297, 313, 315], "fit_from_msm": 102, "append": [102, 216, 254, 270, 276, 281, 288, 303, 304, 314, 315], "constrain": [102, 107, 158, 311], "bayesianmsm": [103, 104, 105, 107, 252, 276, 281, 302, 309], "twostep_count_matric": 104, "oom_compon": 104, "oom_eigenvalu": 104, "oom_evalu": 104, "oom_information_state_vector": 104, "oomreweightedmsm": [104, 105], "decis": [104, 108, 147, 313], "oom": [104, 108], "oom_rank": 104, "oom_timescal": 104, "c2t": 104, "neig": 105, "ren": [105, 121, 130, 131, 141], "doos": [105, 121, 130, 131, 141], "isabella": [105, 121, 130, 131, 141], "daidon": [105, 121, 130, 131, 141], "marc": [105, 121, 130, 131, 141], "llmann": [105, 121, 130, 131, 141], "marku": [105, 121, 130, 131, 141, 298], "sauer": [105, 121, 130, 131, 141], "jeremi": [105, 121, 130, 131, 141], "smith": [105, 121, 130, 131, 141], "probe": [105, 121, 130, 131, 141], "biomolecular": [105, 121, 130, 131, 141], "108": [105, 121, 130, 131, 141, 288], "4822": [105, 121, 130, 131, 141], "4827": [105, 121, 130, 131, 141], "lindner": 105, "zheng": 105, "yi": 105, "11b602_1": 105, "transition_matric": [106, 111], "behav": [106, 107, 221, 302, 310], "triplet": [106, 189], "switch": [106, 107], "model_index": 106, "mimic": 106, "indexerror": 106, "current_model": 106, "count_fract": [106, 314], "n_connected_msm": [106, 107], "state_fract": [106, 314], "allow_disconnect": [107, 303], "use_lcc": 107, "markovstatemodelcollect": [107, 109, 111, 252], "transient": 107, "level": [107, 191, 198, 205, 247, 258, 259, 266, 267, 270, 273, 288, 294, 297, 301, 303, 305, 306, 307, 308, 315, 318], "dummi": 107, "msm1": 107, "msm2": 107, "ultim": 107, "time_unit": 108, "nb": 108, "rank_mod": 108, "bootstrap_count": 108, "tol_rank": 108, "pretti": 108, "ax": [108, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 233, 254, 255, 256, 259, 260, 261, 262, 266, 267, 268, 269, 270, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 318], "whitespac": 108, "permit": [108, 292, 298], "femtosecond": 108, "picosecond": 108, "nanosecond": 108, "microsecond": 108, "millisecond": 108, "bootstrap_traj": 108, "094104": [108, 297], "koopmanreweightedmsm": 108, "sklearn": [108, 195, 277, 286, 290, 299, 311, 313], "mbar": [109, 288, 315], "init_maxit": 109, "init_maxerr": 109, "track_log_likelihood": 109, "callback_interv": [109, 315], "paper": [109, 197], "biased_conf_energi": [109, 111, 288, 315], "f_i": [109, 111, 150, 311, 317], "thermodynam": [109, 110, 111, 288, 297, 315], "lagrangian_mult_log": [109, 111], "v_i": [109, 111, 125, 317], "logarithm": [109, 111, 158, 299], "modified_state_counts_log": [109, 111], "unsuccessfulli": 109, "significantli": [109, 313, 317], "speed": [109, 229, 303], "sum_j": [109, 119, 132, 136, 314], "c_ij": 109, "c_ji": 109, "1ee": 109, "down": [109, 311], "tramdataset": [109, 111, 252, 315], "trammodel": [109, 110, 252], "multiensembl": [109, 111, 297, 315], "113": [109, 111, 195, 197, 288, 297, 311, 315], "e3221": [109, 111, 297, 315], "e3230": [109, 111, 297, 315], "shirt": 109, "129": [109, 288, 299], "124105": 109, "suppli": [109, 158, 298], "bias_matric": [109, 110, 111, 288, 315], "ttraj": [109, 110], "inner": [109, 307], "n_therm_stat": [109, 110, 111], "replica": [109, 110, 297, 315], "exchang": [109, 110, 297, 315], "lie": [109, 110], "highest": [109, 110], "n_markov_st": [109, 110], "organ": [110, 294], "tram": [110, 111, 252, 275, 291, 296, 297], "infer": [110, 111, 158, 313], "swap": 110, "check_against_model": 110, "those": [110, 160, 161, 226, 227, 228, 292, 309], "encompass": 110, "restrict_to_largest_connected_set": [110, 315], "post_hoc_r": 110, "connectivity_factor": 110, "recomput": 110, "bar_vari": [110, 315], "summed_count_matrix": 110, "joint": 110, "delta": [110, 158, 235, 306], "kl": [110, 150, 158, 159], "Not": [110, 298], "weaken": [110, 300], "hypothet": 110, "restrict_to_submodel": 110, "connectivity_opt": 110, "state_count": 110, "easier": [110, 239, 295, 312], "pad": [110, 284, 287, 314], "got": 110, "drop": 110, "tram_input": 110, "traminput": 110, "restructur": 110, "doesn": 110, "matter": 110, "bias_list": 110, "fell": 110, "therm_state_energi": 111, "markov_state_energi": 111, "pmf": [111, 252], "hold": [111, 135, 160, 220, 246, 294, 306, 314, 315], "compute_pmf": [111, 315], "bin_indic": 111, "therm_stat": 111, "binned_sampl": 111, "compute_log_likelihood": 111, "log_likelihood": 111, "compute_observ": 111, "observable_valu": 111, "compute_sample_weights_log": 111, "sample_weights_log": 111, "k_": [111, 119, 134, 158, 169, 314], "f_k": [111, 150], "msm_collect": 111, "only_us": 112, "group": [113, 292], "central": [114, 164], "comittor": [114, 119, 164, 167, 169, 230], "outlin": [114, 160], "weinan": [114, 314], "123": [114, 164, 288, 303, 314], "503": [114, 164, 314], "lothar": [114, 119, 314], "reich": [114, 119, 162, 164, 167, 169, 314], "thoma": [114, 119, 314], "weikl": [114, 119, 162, 164, 167, 169, 314], "106": [114, 119, 162, 164, 167, 169, 288, 314], "19011": [114, 119, 162, 164, 167, 169, 314], "19016": [114, 119, 162, 164, 167, 169, 314], "hit": [119, 132, 137, 230, 314], "disjoint": 119, "fromal": 119, "l_": [119, 158, 314], "setminu": 119, "cup": [119, 314], "came": 119, "sup": 119, "notin": [119, 132, 137], "formal": [119, 314], "d_": [119, 129, 299], "adjoint": 119, "89": [119, 288, 314], "u_plu": 119, "u_minu": 119, "45454545": [119, 131], "sensit": [120, 122, 124, 127, 138, 143, 144, 150, 252], "return_tim": [121, 229, 236], "sum_x": [121, 130, 131, 141], "eigenvlau": [121, 130], "l_i": [121, 125, 130, 131, 135, 174], "40909091": 121, "34081364": 121, "28585667": 121, "23424263": 121, "mu_j": [123, 125, 135, 145, 160], "precomput": [123, 125, 145, 197], "eigvec": 125, "rdl_decomposit": 125, "lapack": [125, 247], "arpack": [125, 247], "orthonorm": [125, 317], "77350269e": 125, "07106781e": 125, "90147543e": 125, "02": [125, 140, 161, 186, 274, 284, 288, 305], "recalcul": 126, "m_a": 126, "909090909": 126, "ec": [128, 129], "44616147": 128, "0495735": 128, "50413223": 128, "04960006": 128, "36": [128, 267, 288], "44640052": 128, "90909091": 129, "54545455": 129, "spectrum": [130, 131, 174, 184, 313], "gamma_i": [130, 131], "lvert": [130, 131, 145], "rvert": [130, 131, 145], "amp": [130, 131], "49122158": [130, 131, 145], "43429448": [130, 131, 145], "20661157": 130, "22727273": 130, "02066116": 130, "w_0": [131, 141], "04545455": 131, "solut": [132, 174, 286, 300, 302, 307, 311], "h_i": 132, "precis": [133, 161, 196, 306], "go": [133, 188, 233, 294, 306, 313, 314], "irreduc": [133, 309], "adjenc": 133, "tarjan": [133, 148, 151, 152, 153], "hoel": [133, 137], "sidnei": [133, 137], "port": [133, 137], "charl": [133, 137], "stone": [133, 137], "waveland": [133, 137], "press": [133, 137], "1986": [133, 137], "search": [133, 148, 151, 152, 153, 309], "siam": [133, 147, 148, 151, 152, 153], "160": [133, 148, 151, 152, 153, 288, 318], "1972": [133, 148, 151, 152, 153], "tol": [134, 135, 136, 158], "follw": 135, "wit": 136, "elementari": [137, 145], "m_t": 137, "_x": [137, 300, 307], "t_y": 137, "cc": [137, 148], "_z": 137, "mu_x": 137, "mu_z": 137, "22": [137, 196, 288, 299, 303, 306, 314, 317], "meta": 139, "stabl": [139, 192, 194, 317], "id": [140, 158, 300], "probabilitydistribut": 140, "distributionof": 140, "repeat": [140, 270, 299, 303, 313, 314], "00000000e": 140, "04880885e": 140, "16227766e": 140, "54545455e": 140, "09090909e": 140, "8407": 141, "71979377": 141, "60624287": 141, "fallback": 142, "check_input": 142, "unsuccess": 142, "degener": 142, "44444444": 142, "11111111": 142, "corrlength": 146, "resampl": [146, 147], "often": [146, 147, 297, 299, 306, 311, 316, 317], "bootstrap": [146, 147, 252], "bootstrap_trajectori": 146, "correlation_length": 147, "segment": [147, 259, 266, 267, 273], "longest": 147, "rough": [147, 306], "shorter": 147, "put": [147, 303, 309], "corrlat": 147, "t_corr": 147, "floor": [147, 315], "subtrajectori": 147, "slightli": [147, 186, 303], "critic": [147, 299], "better": [147, 295, 299, 314, 318], "theoret": 147, "computation": [147, 299, 306, 314], "demand": 147, "kuensch": 147, "jackknif": 147, "ann": 147, "1217": 147, "1989": [147, 306], "efron": 147, "1979": 147, "anderson": 147, "york": 147, "1971": 147, "noe": [147, 154, 160, 162, 164, 167, 169, 292], "nuesk": 147, "pp": 147, "vertic": [148, 153, 317], "lcc": [148, 152, 153], "adjac": [148, 151, 152, 153, 186, 187, 314, 316], "cc_direct": 148, "cc_undirect": 148, "sparse_return": 149, "nstate": [149, 192, 194], "coo_matrix": 149, "coun": 149, "slidingwindow": 149, "skip": 149, "seper": 149, "lfloor": [149, 316], "rfloor": [149, 316], "chi_": 149, "sperat": 149, "c_slide": 149, "csr": 149, "toarrai": 149, "c_lag": 149, "scalar": [150, 195, 196, 216], "rvert_": 150, "t_0": 150, "suitabl": [150, 298, 299], "ijk": 150, "jk": 150, "largest_connected_submatrix": 151, "lcc_direct": 152, "lcc_undirect": 152, "c_cc": 153, "largest_connected_set": 153, "larest": 153, "c_cc_direct": 153, "c_cc_undirect": 153, "orscipi": 154, "logl": 154, "58": [154, 288], "21": [154, 278, 288, 299, 303, 306, 313, 314, 317], "38": [154, 288, 314], "2808034725": 154, "68": [154, 274, 288, 307], "2144096814": 154, "schuett": [154, 162, 164, 167, 168, 169, 170, 171], "triangl": 157, "essenti": 157, "triangular": 157, "elsewher": 157, "t_agg": 158, "10000000": 158, "k0": 158, "on_error": 158, "cve": 158, "truncated_log": 158, "logm": 158, "2dt": 158, "crommelin": 158, "u_": 158, "lj": 158, "lambda_": 158, "delta_": 158, "algorihtm": 158, "kalbfleisch": 158, "lawless": 158, "occupi": 158, "0e7": 158, "quasi": [158, 229, 283, 303], "factr": 158, "fmin_l_bfgs_b": 158, "1e12": 158, "1e7": 158, "moder": 158, "extrem": 158, "happend": 158, "0138": 158, "6993": 158, "davi": 158, "embedd": 158, "electron": [158, 292], "1474": 158, "1486": 158, "daan": 158, "convex": 158, "1751": 158, "1778": 158, "jd": 158, "jerald": 158, "franklin": 158, "panel": [158, 305], "392": 158, "863": 158, "871": 158, "1985": 158, "propto": [159, 160, 212], "whenev": [159, 190, 317], "t0": [160, 229, 236, 303], "obei": [160, 209, 310, 311, 317], "mc": 160, "sweep": 160, "py": [160, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 299, 307, 315], "class": [160, 238, 252, 294, 298, 299, 303], "transitionmatrixsampl": 160, "fulfil": [160, 163, 165, 235], "128": [160, 288, 303, 305], "244103": 160, "submit": 160, "rev_pisym": 161, "return_statdist": 161, "warn_not_converg": 161, "countmatrix": [161, 252], "occup": 161, "fast": [161, 313], "pi_j": [161, 309, 310], "asympot": 161, "return_conv": 161, "histori": 161, "pi_chang": 161, "return_statist": 161, "gregori": [161, 297], "bowman": [161, 297], "kyle": 161, "beauchamp": 161, "boxer": 161, "challeng": 161, "autom": 161, "protein": [161, 295, 313, 314], "131": [161, 288], "124101": 161, "t_nrev": 161, "array_str": 161, "833": 161, "083": 161, "t_rev": 161, "104": [161, 288], "063": 161, "351": 161, "649": 161, "049": 161, "151": [161, 288, 309], "29": [161, 261, 274, 288, 298, 299, 303, 314, 317], "t_mu": 161, "948": 161, "006": 161, "046": [161, 269, 274], "429": 161, "571": 161, "111": [161, 269, 286, 288], "869": 161, "fc_": 162, "ot": 162, "necessarili": [162, 299], "anymor": 162, "netflux": [162, 164, 168, 170, 230], "to_netflux": 162, "ch": [162, 164, 167, 169, 309, 310], "proc": [162, 164, 167, 169], "natl": [162, 164, 167, 169], "acad": [162, 164, 167, 169], "sci": [162, 164, 167, 169], "usa": [162, 164, 167, 169], "rtol": [163, 165], "atol": [163, 165], "outflux": [163, 165], "influx": [163, 165], "dirti": [163, 165], "therebi": [163, 165], "violat": [163, 165], "reli": [164, 169], "q_j": [164, 314], "523": 164, "prod": 166, "consumpt": [166, 295, 299], "totflux": [167, 169], "tab": 167, "netork": 168, "rapidli": 168, "prohibitev": 168, "expens": [168, 306], "prevent": [168, 292, 303], "advis": 168, "monitor": 168, "kab": [169, 230], "flux_matrix": 169, "event": [169, 295, 297, 298, 302, 314], "ab": [169, 224, 225, 226, 227, 228, 283, 299, 301, 303, 305, 306, 308, 314, 318], "turnov": 171, "consum": 171, "with_traceback": 172, "tb": 172, "__traceback__": 172, "arr": [173, 177], "_np": 173, "ct": 174, "canonical_sign": [174, 180, 182], "return_rank": [174, 183], "robust": [174, 180, 181, 182, 183, 310], "hermitian": [174, 178], "_0": 174, "conduct": 174, "schur": [174, 180, 181, 182, 183], "retain": 174, "lm": 175, "eigenpair": 175, "a_1": 176, "a_n": 176, "is_diagon": 176, "ndim": [177, 216], "schatten": 178, "_r": 178, "evec": 179, "lexicograph": 179, "check_sym": 180, "sign": [180, 182, 310, 317], "truli": [181, 182, 183], "moor": 181, "penros": 181, "umathrm": 184, "deem": [184, 298], "contour": [185, 189, 190, 191, 235, 275, 279, 280, 291, 296, 301, 315], "colorbar": [185, 189, 190, 191, 258, 259, 266, 267, 268, 273, 278, 279, 284, 285, 287, 288, 302, 305, 306, 308, 310, 312, 313, 314, 315, 317, 318], "plot_energy2d": [185, 198, 212, 252, 280], "unpack": 185, "energy2d": [185, 191, 198, 252, 280], "cbar": [185, 191, 198, 280, 314], "quadcontourset": 185, "adjacency_matrix": [186, 187], "po": [186, 192, 194, 216, 262, 279, 310, 314, 316], "cmap": [186, 192, 233, 258, 259, 266, 267, 270, 273, 278, 280, 283, 284, 285, 287, 288, 301, 303, 304, 305, 306, 310, 312, 314, 315, 317, 318], "state_s": [186, 192, 194], "state_scal": [186, 192, 194], "state_color": [186, 192, 194, 284], "ff5500": [186, 192, 194], "state_label": [186, 192, 194], "edge_scal": [186, 192, 194], "edge_curvatur": [186, 192, 194, 284], "edge_label": [186, 192, 194, 310, 314], "edge_label_format": [186, 192, 194], "edge_label_loc": 186, "arc": 186, "color": [186, 188, 191, 192, 193, 194, 219, 233, 256, 258, 260, 262, 270, 271, 283, 284, 285, 286, 287, 299, 301, 303, 304, 305, 306, 309, 310, 312, 314, 315, 318], "colormap": [186, 233], "_scale": 186, "d_x": 186, "d_y": 186, "_size": 186, "circl": 186, "twice": [186, 221], "depict": [186, 249, 278, 299, 314], "arrow": [186, 192, 194], "width": [186, 192, 194, 284, 314], "rcparam": 186, "linewidth": [186, 289, 303, 305, 311], "curvatur": [186, 192, 194], "straight": [186, 233], "arrow_label": 186, "curv": [186, 192, 194], "midpoint": 186, "96": [186, 284, 288], "networkx": [186, 187, 194, 284, 310, 314, 316], "spring": 186, "layout": [186, 187, 194, 298], "nx": [186, 284, 310, 314, 316], "spring_layout": [186, 187], "from_numpy_arrai": [186, 284], "textkwarg": [186, 192, 194], "disc": [186, 192, 194], "thick": 186, "xmin": 186, "xmax": [186, 305, 318], "ymin": [186, 256, 305, 318], "ymax": [186, 256, 305, 318], "height": [186, 188, 219, 314], "edge_base_scal": 186, "n_node": 186, "node_s": [186, 314], "rescal": [186, 304], "style": [186, 235, 294], "rgb": [186, 192, 194], "scale_st": 187, "gca": [187, 189, 190, 191, 192, 262], "aspect": [188, 219, 297, 311], "cktestgrid": 188, "legend": [188, 219, 233, 256, 260, 261, 262, 271, 276, 283, 286, 289, 290, 300, 302, 303, 305, 309, 310, 311, 312, 313, 314, 317, 318], "xlabel": [188, 219, 263, 286, 299, 302, 303, 304, 305, 309, 310, 311, 317, 318], "ylabel": [188, 219, 286, 299, 302, 304, 305, 309, 310, 311, 317, 318], "y01": [188, 219], "sharei": [188, 219, 265, 285, 304, 314], "plot_kwarg": [188, 219], "figur": [188, 191, 194, 235, 254, 262, 269, 282, 286, 290, 297, 299, 301, 303, 305, 306, 307, 308, 310], "ck": [188, 276], "overlai": [188, 276], "nearest": [189, 285, 299, 314], "contourf_kw": [189, 190, 191, 198, 278, 279, 280], "interpol": [189, 233, 259, 266, 267, 273, 285, 313, 314], "unord": [189, 190, 278, 279], "resolut": [189, 190, 193], "griddata": 189, "contourf": [189, 190, 191, 235, 258, 259, 262, 266, 267, 268, 270, 273, 288, 301, 303, 305, 307, 308, 312, 315, 317, 318], "grab": [189, 190], "mappabl": [189, 190, 278], "avoid_zero_count": [190, 279], "clamp": 190, "lowest": 190, "energylandscape2d": [191, 212, 252], "cbar_kw": [191, 198], "cbar_ax": [191, 198], "energy2dplot": [191, 252], "flux_scal": 192, "minflux": [192, 194], "2e": [192, 194, 288, 314], "attribute_to_plot": [192, 284], "show_committor": 192, "coolwarm": [192, 258, 259, 266, 267, 273, 278, 284, 301, 312, 314, 318], "ugli": [192, 194], "area": [192, 193, 194, 235, 299, 302, 317], "hex": [192, 194], "grayscal": [192, 194], "red": [192, 194, 270, 303, 305, 306, 314], "34": [192, 194, 288, 303, 307], "35": [192, 194, 288, 305, 314], "displai": [192, 194, 200, 298, 303, 307, 317], "org": [192, 194, 298], "text_api": [192, 194], "html": [192, 194, 303, 307, 317], "info": [192, 194], "arrow_label_s": [192, 194], "impliedtimescal": [193, 222, 252], "n_it": [193, 222, 281], "show_ml": 193, "show_sampl": 193, "show_sample_mean": 193, "show_sample_confid": 193, "show_cutoff": 193, "sample_confid": 193, "exis": 193, "from_model": [193, 220], "mutual": [193, 314], "grei": [193, 304], "fill": [193, 233, 314], "shade": 193, "rc": 193, "config": 193, "prop_cycl": 193, "orang": 194, "p_ij": 194, "theta_1": [195, 311], "theta_2": [195, 311], "theta_k": 195, "xi": [195, 196, 286, 311], "satisfi": [195, 314], "candid": [195, 311], "n_input_features_": 195, "n_output_features_": 195, "coef_": 195, "intercept_": 195, "regressor": [195, 197], "linear_model": 195, "stlsq": [195, 252, 286, 311], "x1": [195, 286], "n_input_featur": [195, 196], "joshua": [195, 197, 311], "proctor": [195, 197, 311], "discov": [195, 197, 250, 286, 311], "govern": [195, 197, 250, 297, 298, 311, 315], "3932": [195, 197, 311], "3937": [195, 197, 311], "sindymodel": [195, 252, 286, 311], "sindi": [196, 197, 252, 275, 291, 295, 296, 298], "intercept": [196, 197], "correpond": 196, "n_output_featur": 196, "round": [196, 267, 302, 307, 317], "lh": [196, 286], "human": 196, "readabl": 196, "r2_score": [196, 197], "scoring_kw": 196, "odeint": [196, 286], "integrator_kw": 196, "n_featur": [196, 197], "ridge_kw": 197, "fit_intercept": 197, "copy_x": 197, "attempt": [197, 311], "xw": 197, "2_2": 197, "l2": [197, 283], "ridg": 197, "regress": [197, 311, 317], "n_target": 197, "subobject": 197, "sample_weight": 197, "residu": 197, "y_true": 197, "y_pred": 197, "arbitrarili": [197, 202], "wors": 197, "n_samples_fit": 197, "n_output": 197, "multioutput": 197, "uniform_averag": 197, "multioutputregressor": 197, "x_meshgrid": 198, "y_meshgrid": 198, "kbt": [198, 212, 280], "n_bins_x": 198, "n_bins_i": 198, "k_bt": [198, 212], "gather": [199, 309, 315], "sought": [199, 317], "set_descript": [200, 201], "close": [200, 201, 293, 303, 308, 309, 310, 311, 313, 317], "progresscallback": [201, 252], "remove_nan": 202, "concat": [203, 204, 206], "concatdataset": [204, 252], "fanci": 204, "slice": 204, "astyp": [205, 207, 264, 302, 303, 305, 312, 315, 318], "converted_d": [205, 207], "from_trajectori": [206, 207], "from_numpi": [206, 302, 303], "assertionerror": [206, 207, 229, 231, 236, 237], "shuffl": [208, 299, 302, 305, 312, 318], "timeshift": [208, 295], "whatev": [208, 298], "decor": [209, 210, 211], "fget": 209, "fset": 209, "fdel": 209, "inspir": 209, "github": [209, 216, 294, 298], "com": [209, 216, 298], "pydanni": 209, "stackoverflow": 209, "17330273": 209, "delet": [209, 292], "descriptor": 209, "argument_nam": 210, "replaced_bi": 210, "msg": 210, "mark": [210, 211], "messag": [210, 292], "factori": 210, "requires_networkx": 211, "instal": [211, 215, 243, 293, 298, 299, 302, 318], "shift_energi": [212, 280], "boltzmann": 212, "encourag": 212, "kj": 212, "mol": 212, "298": 212, "479": 212, "energy_landscap": 212, "platform": [214, 215, 294], "noth": [214, 294], "progress_bar": 214, "modnam": 215, "ari": 216, "insert": 216, "atleast_1d": 216, "atleast_2d": 216, "atleast_3d": 216, "pull": 216, "7804": 216, "atleast_": 216, "comprehens": [216, 297], "rule": 216, "roughli": [216, 299, 310, 317], "subok": 216, "ndmin": 216, "easi": 216, "functool": 216, "ducktyp": 217, "presenc": 217, "is_dataset": 217, "is_timelagged_dataset": [218, 252], "arang": [218, 256, 258, 259, 260, 264, 266, 267, 270, 273, 281, 286, 289, 299, 302, 303, 304, 305, 308, 310, 313, 314, 317], "data_instantan": 218, "data_timelag": 218, "predictions_sampl": 219, "estimates_sampl": 219, "has_error": 219, "its_stat": 220, "plot_implied_timescal": [220, 222, 252, 281, 291, 302], "n_lagtim": 220, "n_process": 220, "lagtime_index": 220, "process_index": 220, "samples_for_process": 220, "timescales_sampl": 220, "max_n_sampl": 220, "timescales_for_process": 220, "has_sampl": 220, "max_n_process": 220, "tau_1": 221, "tau_2": 221, "verifi": 221, "rho": [221, 307], "overset": 221, "tild": [221, 300], "mainli": [221, 294, 299, 318], "smallest": 221, "its_data": [222, 281], "sqrt_inv_cov": 223, "modify_data": [224, 225, 226, 227, 228], "sparse_tol": [224, 225, 226, 227, 228], "xx": [224, 225, 227, 228, 301, 307, 308], "exploit": [224, 225, 226, 227, 228], "moments_xx": [224, 252], "faster": [224, 225, 226, 227, 228, 302], "surpris": [224, 225, 226, 227, 228], "effort": [224, 225, 226, 227, 228, 298], "xy": [225, 227, 228, 258, 259, 266, 267, 270, 273, 275, 278, 291, 296, 303, 305, 307, 308, 318], "moments_xxxi": [225, 252], "c_xy": [225, 227], "unnorm": [226, 227, 228], "s_x": [227, 228], "s_y": [227, 228], "yx": [228, 307, 308], "yy": [228, 301, 307, 308], "sx": 228, "sy": 228, "cxx": 228, "cxy": 228, "cyx": 228, "cyi": 228, "full_period": 229, "rk45": 229, "built": 229, "evolv": [229, 231, 236, 237, 301, 302, 303, 311], "handle_n_job": [229, 231, 236, 237, 252], "apply_periodic_boundary_condit": 229, "3d": [229, 254, 269, 286], "xyz": [229, 275, 291, 296], "l0": 229, "characterist": 229, "u0": 229, "veloc": [229, 235], "travel": 229, "wave": 229, "varepsilon": [229, 235, 307, 308], "right_hand_sid": [229, 231, 236, 237], "has_potential_funct": [229, 231, 236, 237], "periodic_bc": 229, "r0": 229, "earth": 229, "time_depend": [229, 231, 236, 237], "vectorized_f": [229, 231, 236, 237], "w_x": 230, "p_x": 230, "t_a": 230, "t_b": 230, "u_x": 230, "arriv": [230, 310], "totalflux": 230, "tiotal": 230, "anhil": 230, "prop": [231, 236, 237, 304, 305], "custom_sd": [231, 252, 258], "custom_od": [231, 252, 257], "n_initial_condit": [231, 236, 237], "n_evalu": [231, 236, 237], "squeez": [231, 236, 237, 263, 265, 267, 305], "dtraj_n": [232, 260], "100k": 232, "dtraj_n2": 232, "simulate_trajectori": 232, "n_trajectori": 232, "fewer": [232, 235, 298, 306, 313], "analytic_msm": [232, 260], "dtraj_n2bad": 232, "bad": [232, 306], "dtraj_n2good": 232, "dtraj_n6good": 232, "barrier": [233, 314], "stencil": 233, "hoc": 233, "add_barri": [233, 261, 285, 287, 314], "x_n": [233, 306, 307, 311], "bresenham": 233, "jack": 233, "digit": [233, 265], "plotter": 233, "ibm": 233, "1965": 233, "coordinate_to_st": [233, 314], "coord": [233, 258, 266, 267, 301], "is_valid_coordin": 233, "is_valid": 233, "plot_2d_map": [233, 261, 285, 287, 314], "barrier_mod": [233, 285, 314], "face": 233, "hollow": [233, 285, 314], "border": [233, 314, 317], "plot_network": [233, 284, 287, 291, 314], "connection_threshold": [233, 287, 314], "edge_color": 233, "plot_path": [233, 261, 314], "color_lerp": [233, 314], "plot_kw": 233, "walk": [233, 253, 274, 275, 291, 296, 314], "spline": 233, "scatterplot": 233, "lerp": 233, "linecollect": [233, 259, 266, 267, 273], "state_to_coordin": [233, 314], "return_st": [233, 314], "random_walk": 233, "setup": [233, 299, 313], "map_discrete_to_observ": [234, 290, 313], "ftraj": [234, 264, 313], "covariance_matrix": [234, 262], "rng": 234, "domain_s": 235, "interaction_dist": 235, "n_solver_iter": 235, "graviti": 235, "016": 235, "rest_dens": 235, "tensile_instability_dist": 235, "tensile_instability_k": 235, "rest": [235, 313, 317], "rho_0": 235, "smooth": 235, "hydrodynam": 235, "cell": [235, 314], "solver": [235, 252], "slower": 235, "defaul": 235, "respons": [235, 292], "tension": 235, "p_1": 235, "p_n": 235, "v_1": 235, "v_n": 235, "sph": 235, "rho_i": 235, "m_i": 235, "p_j": 235, "equiv": 235, "convolut": 235, "c_i": [235, 314], "c_k": 235, "vanish": 235, "dampen": 235, "few": [235, 307, 309, 314], "clump": 235, "remedi": 235, "tensil": 235, "gingold": 235, "joseph": 235, "monaghan": 235, "star": 235, "monthli": 235, "notic": [235, 314], "royal": 235, "astronom": 235, "181": [235, 288], "375": 235, "389": 235, "1977": 235, "leon": 235, "luci": 235, "fission": 235, "hypothesi": 235, "1013": 235, "1024": 235, "make_anim": [235, 255, 264, 307, 317], "anim": [235, 254, 269, 270, 303, 317], "asid": 235, "n_grid_x": [235, 289, 317], "transform_to_dens": [235, 289, 317], "n_grid_i": [235, 289, 317], "figsiz": [235, 254, 255, 261, 264, 268, 272, 277, 279, 283, 284, 285, 286, 287, 288, 289, 290, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318], "n_traj": 235, "ncol": [235, 256, 272, 282, 290, 301, 303, 304, 305, 306, 307, 308, 317], "nrow": [235, 272, 282, 290, 301, 303, 304, 306, 307, 308, 317], "titl": [235, 262, 286, 287, 290, 299, 301, 302, 305, 307, 308, 310, 314, 317], "funcanim": [235, 254, 269, 270, 303], "simulate_oscillatory_forc": [235, 264, 289, 317], "n_oscil": [235, 289, 317], "alternatingli": [235, 317], "negat": 235, "kde": [235, 317], "knowledg": [235, 305, 314, 315], "lost": 235, "develop": [238, 252, 276, 283, 297, 299, 307, 310], "readi": [244, 309, 311], "fork": 247, "msmtool": [247, 298], "diagnost": 249, "throughout": [251, 314], "notebook": [252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 299, 302, 303, 305, 307, 308, 315, 318], "alanin": 252, "dipeptid": 252, "wedg": 252, "backtransform": [252, 303], "coher": [252, 275, 291, 295, 296, 301, 307, 317], "kvadnet": 252, "regularspac": [252, 277, 299], "kmeans_plusplu": 252, "koopmanweightingestim": [252, 313], "whiteningtransform": 252, "covar": [252, 317], "moments_block": 252, "vamp_score_data": [252, 307], "vamp_score_cv": [252, 305], "cvsplit_traj": 252, "blocksplit_traj": 252, "tvaeencod": [252, 312], "vampnet_loss": 252, "kvad_scor": [252, 303], "number_of_st": 252, "count_stat": 252, "compute_connected_set": 252, "compute_dtrajs_effect": 252, "indices_by_distribut": 252, "compute_index_st": 252, "indices_by_sequ": 252, "indices_by_st": 252, "random_guess": [252, 306], "monomi": [252, 301, 305, 311], "generalizedgaussiankernel": 252, "laplaciankernel": 252, "polynomialkernel": 252, "torchgaussiankernel": [252, 303], "is_torch_kernel": 252, "double_well_discret": [252, 260], "quadruple_wel": [252, 266, 279, 308], "quadruple_well_asymmetr": [252, 267], "triple_well_2d": [252, 273, 278, 280, 301], "triple_well_1d": [252, 272], "double_well_2d": [252, 259, 281], "time_dependent_quintuple_wel": [252, 270], "abc_flow": [252, 254], "ornstein_uhlenbeck": [252, 263], "prinz_potenti": [252, 265, 304], "ellipsoid": [252, 253, 274, 276, 290, 299, 310, 313, 317], "sqrt_model": [252, 268, 283, 305, 312, 318], "swissroll_model": [252, 269], "position_based_fluid": [252, 264, 289, 317], "drunkards_walk": [252, 261, 285, 287, 314], "bickley_jet": [252, 255, 282, 303, 307], "birth_death_chain": [252, 256], "tmatrix_metropolis1d": [252, 271, 288, 315], "plot_contour2d_from_xyz": [252, 278, 291], "plot_dens": [252, 279, 291], "plot_adjac": 252, "plot_markov_model": [252, 284], "plot_flux": [252, 284], "drop_nan_row": 252, "is_diagonal_matrix": 252, "is_square_matrix": 252, "schatten_norm": 252, "eig": 252, "eig_corr": 252, "sort_eig": 252, "spd_eig": 252, "spd_truncated_svd": 252, "spd_inv": 252, "spd_inv_split": 252, "zerorankerror": 252, "implied_timescal": [252, 281, 302], "confidence_interv": 252, "atleast_nd": 252, "cached_properti": 252, "plotting_funct": 252, "deprecated_argu": 252, "module_avail": [252, 294], "handle_progress_bar": 252, "imprint": 252, "softwar": 252, "licens": 252, "click": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "download": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "pyplot": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "num": [254, 257, 259, 266, 267, 271, 272, 273, 283, 288, 301, 305, 315], "set_data": 254, "set_3d_properti": 254, "add_subplot": [254, 269, 282, 286, 290, 301, 303, 305, 306, 307, 308], "set_titl": [254, 259, 266, 267, 268, 272, 273, 277, 279, 281, 282, 283, 284, 285, 287, 290, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 317, 318], "abc": 254, "flowfield": 254, "linestyl": [254, 256, 286, 289, 290, 305, 317], "marker": [254, 261, 262, 269, 271, 277, 290, 299, 300, 304, 305, 310, 313, 314, 318], "set_xlim": [254, 270, 301, 303, 304], "set_ylim": [254, 270, 301, 303, 304, 305], "set_zlim": 254, "blit": [254, 269, 270, 303], "script": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "minut": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "mb": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "plot_abc_flow": [254, 274], "jupyt": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "ipynb": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "galleri": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "sphinx": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "sphinx_gallery_thumbnail_numb": 255, "250": [255, 261, 263, 314], "fig": [255, 256, 259, 261, 262, 266, 267, 269, 270, 273, 281, 282, 285, 286, 287, 288, 301, 303, 307, 308, 310, 311, 314, 315], "subplot": [255, 256, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 277, 278, 279, 281, 283, 284, 285, 287, 288, 289, 299, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 314, 315, 317, 318], "agg_backend": [255, 264], "max_fram": 255, "220": [255, 274], "plot_bickley_jet": [255, 274], "bd": 256, "set_xtick": [256, 304], "vline": [256, 289, 317], "zorder": [256, 261, 270, 303, 305, 314], "black": [256, 258, 260, 301, 305, 310, 318], "dash": [256, 286, 290], "hist": [256, 260, 271, 272, 304, 315], "c1": [256, 260, 271, 305, 315], "set_xlabel": [256, 265, 268, 272, 281, 283, 290, 302, 305, 306, 312, 313, 317, 318], "set_ylabel": [256, 265, 268, 272, 281, 283, 290, 302, 305, 306, 312, 313, 318], "bbox_to_anchor": 256, "fancybox": 256, "shadow": 256, "381": [256, 274], "plot_birth_death_chain": [256, 274], "n_eval": 257, "final_tim": 257, "329": [257, 274], "plot_custom_od": [257, 274], "harmonic_sphere_energi": 258, "ix": [258, 302, 303, 307, 310], "argwher": [258, 306], "dstack": [258, 259, 264, 266, 267, 268, 270, 273, 301, 303, 305, 307, 312, 318], "meshgrid": [258, 259, 262, 264, 266, 267, 268, 270, 273, 290, 301, 303, 305, 307, 308, 312, 313, 318], "reshap": [258, 259, 262, 264, 265, 266, 267, 268, 270, 272, 273, 285, 288, 301, 303, 305, 307, 312, 314, 315, 317, 318], "potential_landscap": 258, "cb": [258, 259, 266, 267, 273, 285, 302, 305, 306, 314, 317, 318], "774": [258, 274], "plot_custom_sd": [258, 274], "splprep": [259, 266, 267, 273], "xint": [259, 266, 267, 273], "yint": [259, 266, 267, 273], "splev": [259, 266, 267, 273], "50000": [259, 266, 267, 273, 277, 309], "stack": [259, 266, 267, 270, 273, 301, 303, 311], "coll": [259, 266, 267, 273], "set_arrai": [259, 266, 267, 273], "set_linewidth": [259, 266, 267, 273], "add_collect": [259, 266, 267, 273], "821": [259, 274], "plot_double_well_2d": [259, 274], "showcas": [260, 299], "dwd": 260, "60": [260, 288, 302], "suptitl": [260, 299, 317], "ndiscret": 260, "edgecolor": [260, 305], "498": [260, 274], "plot_double_well_discret": [260, 274], "74": [261, 288, 303, 314], "cyan": [261, 262, 314], "150": [261, 283, 286, 288, 304, 307, 314, 317, 318], "758": [261, 274], "plot_drunkards_walk": [261, 274], "multivariate_norm": 262, "data_sourc": 262, "rv1": 262, "state_0_mean": 262, "rv2": 262, "state_1_mean": 262, "autoscal": 262, "set_aspect": [262, 267, 284, 290, 301, 302, 303, 313], "568": [262, 274], "plot_ellipsoid": [262, 274], "412": [263, 274], "plot_ornstein_uhlenbeck": [263, 274], "engin": [264, 298], "init_pos_x": 264, "init_pos_i": 264, "400": [264, 289, 317], "plot_pbf": [264, 274], "ax1": [265, 268, 272, 277, 278, 279, 283, 288, 299, 301, 303, 305, 306, 312, 313, 315, 318], "ax2": [265, 268, 272, 277, 278, 279, 283, 299, 301, 303, 305, 306, 312, 313, 318], "550": [265, 274], "plot_prinz": [265, 274], "46": [266, 288], "bwr": [266, 303, 317], "711": [266, 274], "plot_quadruple_wel": [266, 274], "70": [267, 288, 302], "annot": [267, 306, 310], "2f": [267, 303, 305], "xycoord": 267, "xytext": [267, 310], "textcoord": 267, "bbox": [267, 304, 305], "boxstyl": [267, 304, 305], "arrowprop": 267, "arrowstyl": [267, 310, 314], "842": [267, 274], "plot_quadruple_well_asymmetr": [267, 274], "kde_input": [268, 305, 312, 318], "gaussian_kd": [268, 305, 312, 318], "bw_method": [268, 305, 312, 318], "cm": [268, 270, 283, 284, 285, 287, 303, 304, 305, 310, 312, 314, 318], "heatmap": [268, 299, 305, 312, 313, 318], "197": [268, 274, 288], "plot_sqrt_model": [268, 274], "view_init": 269, "elev": 269, "azim": 269, "init_func": 269, "120": [269, 288], "plot_swissroll_model": [269, 274], "viridi": 270, "vmin": [270, 284, 285, 287, 288, 303, 305, 310, 314], "vmax": [270, 284, 285, 287, 288, 303, 305, 310, 314], "scatter_handl": 270, "set_offset": [270, 303], "tp": 270, "227": [270, 274], "69": [270, 288], "plot_time_quintuple_wel": [270, 274], "996": [271, 274], "plot_tmatrix_1d": [271, 274], "20000": [272, 304], "768": [272, 274], "plot_triple_well_1d": [272, 274], "790": [273, 274], "plot_triple_well_2d": [273, 274], "52": [274, 288], "174": [274, 288], "file": [274, 291, 294, 298, 299], "rossler": [275, 291, 296], "mho": [276, 283, 307], "chapman_kolmogorov": 276, "173": [276, 288], "complexwarn": [276, 283], "cktest": 276, "traj2": 276, "dtraj2": 276, "models2": 276, "13": [276, 277, 280, 288, 299, 302, 303, 305, 306, 309, 310, 312, 313, 314, 315, 317, 318], "counts_estim": [276, 309], "test_model2": 276, "068": 276, "gaussianmixtur": [277, 299], "rnd": [277, 299], "gmm": [277, 299], "covariance_typ": [277, 299], "weights_": [277, 299], "means_": [277, 299], "covariances_": [277, 299], "hexbin": [277, 299, 302, 313], "354": 277, "plot_clustering_comparison": [277, 291], "traj_concat": [278, 279, 280], "coarse_st": 278, "408": 278, "ticker": 279, "mappable1": 279, "funcformatt": 279, "3f": [279, 283, 306, 314, 317], "logloc": 279, "mappable2": 279, "0e": [279, 288, 310], "666": [279, 291], "nipy_spectr": 280, "set_label": [280, 302], "884": 280, "plot_energy_surfac": [280, 291], "ITS": 281, "set_yscal": [281, 302], "103": [281, 288], "ev_real": [282, 307], "add_gridspec": [282, 290, 301, 303, 305, 306, 307, 308], "1st": [282, 301, 308], "2nd": [282, 301, 308], "3rd": [282, 301, 308], "4th": [282, 301, 308], "911": 282, "plot_kcca_bicklei": [282, 291], "nox": 283, "make_doc": 283, "lib": [283, 307], "python3": [283, 307], "site": [283, 292, 307], "asanyarrai": 283, "mpl": [283, 284, 285, 287, 310, 314], "1500": 283, "dtraj_test": 283, "obs_test": 283, "est": 283, "n_mismatch": 283, "assignments_perm": 283, "n_mismatch_perm": 283, "ax3": [283, 305, 306, 313], "ax4": [283, 305], "14": [283, 286, 288, 290, 299, 302, 303, 305, 306, 309, 310, 312, 313, 314, 317, 318], "ground": [283, 300, 305, 306, 309, 311], "truth": [283, 300, 305, 306, 309, 311], "plot_scatt": 283, "obs_ref": 283, "green": 283, "blue": [283, 285, 310, 314], "scatter1": 283, "get_cmap": [283, 284, 314], "scatter2": 283, "h1": 283, "l1": 283, "legend_el": [283, 305], "h2": 283, "add_artist": [283, 305], "460": 283, "172": [283, 288], "plot_kcca_project": [283, 291], "mpl_toolkit": [284, 287, 314], "axes_grid1": [284, 287, 314], "make_axes_locat": [284, 287, 314], "flatten": [284, 285, 288, 302, 304, 306, 314, 315], "planar_layout": 284, "cax": [284, 287, 314], "append_ax": [284, 287, 314], "scalarmapp": [284, 285, 287, 310, 314], "get_yaxi": 284, "set_vis": [284, 304], "delax": [284, 314], "127": [284, 288], "19": [284, 288, 299, 302, 303, 313, 314, 317, 318], "sharex": [285, 304, 314], "imshow": [285, 304, 314, 317], "shrink": [285, 310, 314], "969": 285, "plot_pcca_drunkard": [285, 291], "chaotic": 286, "ve": 286, "novel": [286, 311], "practic": [286, 311, 317], "000": [286, 291], "x2": 286, "preprocess": [286, 311], "polynomialfeatur": [286, 311], "t_train": 286, "x0_train": 286, "x_train": 286, "x_dot_train": 286, "firebrick": 286, "zlabel": 286, "t_test": [286, 311], "x0_test": 286, "x_test": [286, 311], "x_sim": 286, "royalblu": 286, "plot_sindy_rossler_attractor": [286, 291], "home_st": [287, 314], "bar_stat": [287, 314], "copper_r": [287, 314], "thresh": [287, 314], "lognorm": [287, 314], "057": 287, "plot_tpt_gross_net_flux": [287, 291], "umbrella": [288, 297, 315], "tutori": [288, 289, 306], "7e": 288, "51it": 288, "59": [288, 310], "17it": 288, "71": 288, "40it": 288, "6e": [288, 305], "85": [288, 314], "12it": 288, "35it": 288, "92": [288, 314], "53it": 288, "03": [288, 313], "94": 288, "97it": 288, "10it": 288, "98": [288, 314], "90it": 288, "04": [288, 314], "4e": 288, "107": 288, "70it": 288, "07": 288, "112": 288, "32it": 288, "37": 288, "39": [288, 302, 305, 307, 310, 311, 313, 317], "44it": 288, "9e": 288, "135": 288, "09it": 288, "47it": 288, "67it": 288, "96it": 288, "91it": 288, "136": 288, "39it": 288, "29it": 288, "14it": 288, "74it": 288, "83it": 288, "137": [288, 299], "15it": 288, "66it": 288, "132": 288, "59it": 288, "43": 288, "44": 288, "47": [288, 303, 314], "49": [288, 292], "54": 288, "56": 288, "19it": 288, "57": [288, 314], "61": 288, "62": [288, 307, 314], "63": [288, 314], "64": [288, 312, 314], "65": [288, 314], "67": [288, 314], "04it": 288, "8e": 288, "76": [288, 303, 315], "78": 288, "81": 288, "83": [288, 314], "84": [288, 314], "18it": 288, "86": [288, 303], "87": 288, "88": [288, 303, 314], "91": [288, 304, 314], "31it": 288, "101": 288, "102": 288, "105": 288, "109": 288, "110": 288, "88it": 288, "115": 288, "116": 288, "117": 288, "118": 288, "119": 288, "121": 288, "122": 288, "124": 288, "125": 288, "126": 288, "64it": 288, "130": [288, 314], "133": 288, "138": 288, "140": [288, 297], "27it": 288, "141": 288, "144": 288, "145": 288, "152": 288, "153": 288, "154": 288, "06it": 288, "155": 288, "156": 288, "157": 288, "158": 288, "159": 288, "161": 288, "163": 288, "164": 288, "165": 288, "166": 288, "167": 288, "168": [288, 309], "45it": 288, "169": 288, "170": [288, 305], "171": 288, "175": 288, "176": 288, "177": 288, "178": 288, "180": [288, 303], "182": 288, "21it": 288, "183": 288, "184": 288, "185": 288, "186": 288, "187": 288, "188": 288, "189": 288, "191": 288, "192": 288, "193": 288, "194": 288, "195": 288, "196": 288, "198": 288, "199": 288, "201": 288, "202": 288, "203": 288, "204": 288, "206": 288, "207": 288, "bias_cent": [288, 315], "plot_contour_with_colourbar": 288, "im": [288, 315, 317], "get_bias_funct": 288, "bias_funct": [288, 315], "sample_trajectori": 288, "int32": [288, 302, 315, 316], "biased_energi": [288, 315], "__name__": 288, "__main__": 288, "seen": [288, 312, 317], "btraj": 288, "hamiltonian": 288, "253": 288, "plot_tram": [288, 291], "pbf_simul": [289, 317], "kde_trajectori": [289, 317], "projection_left": [289, 317], "projection_right": [289, 317], "lw": [289, 301, 314], "markers": [289, 311], "672": 289, "plot_vamp_pbf_project": [289, 291], "plot_dominant_compon": 290, "dxy": [290, 313], "quiver": [290, 313], "vamp_project": 290, "dxy_vamp": 290, "tica_project": 290, "dxy_tica": 290, "pca_project": 290, "dxy_pca": 290, "components_": [290, 313], "constrained_layout": [290, 305, 306, 313], "ax_project": 290, "ax_tica": 290, "ax_vamp": 290, "ax_pca": 290, "740": 290, "plot_vamp_vs_tica_vs_pca": [290, 291], "tdg": 292, "mediendienstestaatsvertrag": 292, "institut": 292, "freie": 292, "universit\u00e4t": 292, "arnimalle": 292, "14195": 292, "prof": 292, "dr": 292, "no\u00e9": [292, 307], "contact": 292, "838": 292, "75354": 292, "disclaim": 292, "content": [292, 297, 317], "webteam": 292, "reserv": [292, 298], "topic": 292, "liabil": [292, 298], "claim": [292, 298], "regard": [292, 304, 307], "damag": [292, 298], "incomplet": 292, "incorrect": 292, "reject": 292, "oblig": 292, "partli": 292, "announc": 292, "referr": 292, "hi": 292, "knowlegd": 292, "illeg": 292, "visitor": 292, "author": [292, 298], "liabl": [292, 298], "who": 292, "publish": [292, 298], "discuss": [292, 297], "board": 292, "guestbook": 292, "mailinglist": 292, "copyright": [292, 298], "materi": [292, 298], "sound": 292, "agreement": [292, 302], "legal": 292, "internet": 292, "section": [292, 298, 317], "uninfluenc": 292, "servic": 292, "www": 292, "techniqu": [293, 295, 308, 313], "aid": 293, "particularli": [293, 297], "aspir": 294, "contributor": 294, "familiar": [294, 299, 300, 301, 306, 309, 311, 312, 313, 317, 318], "plan": 294, "meanmodel": 294, "_mean": 294, "inherit": 294, "meanestim": 294, "super": 294, "_model": 294, "mean_model": 294, "projector": 294, "parent": 294, "your_modul": 294, "del": 294, "hard": [294, 314], "pypi": 294, "conda": 294, "doctest": 294, "toplevel": 294, "test_mean_estim": 294, "pytest": 294, "suffic": [294, 295, 306], "numpydoc": 294, "complic": 294, "footcit": 294, "authorofthecomplicatedalgo1988": 294, "footbibliographi": 294, "meth": 294, "citat": 294, "bibtex": 294, "bib": 294, "websit": 294, "readm": 294, "instruct": 294, "compact": [295, 313], "rare": [295, 302, 313], "suffici": [295, 309], "dual": 295, "transpos": 295, "metastabil": 295, "tcca": [295, 317], "vac": 295, "grow": 295, "quadrat": [295, 315], "suit": 295, "aris": [295, 298], "great": [295, 297], "stream": [295, 299], "toi": [295, 317], "easili": [295, 307], "databas": 295, "tree": 295, "stabil": 295, "yusuk": [295, 313], "naritomi": [295, 313], "sotaro": [295, 313], "fuchigami": [295, 313], "fluctuat": [295, 313], "motion": [295, 313, 317], "02b617": [295, 313], "sebastian": 295, "peitz": 295, "niemann": 295, "physica": 295, "phenomena": 295, "406": 295, "132416": 295, "At": 297, "omit": 297, "crucial": [297, 306], "husic": [297, 307, 317], "chronologi": 297, "understand": 297, "flavor": [297, 312], "analys": [297, 314], "overview": 297, "et": 297, "al": 297, "chapter": 297, "book": 297, "valuabl": 297, "resourc": 297, "cardin": 297, "tessel": 297, "goal": [297, 305, 306], "varieti": 297, "brook": [297, 307, 317], "art": 297, "2386": 297, "2396": 297, "797": 297, "busi": 297, "media": 297, "gnu": 298, "lesser": 298, "june": 298, "2007": 298, "foundat": 298, "fsf": 298, "everyon": 298, "verbatim": 298, "incorpor": 298, "supplement": 298, "permiss": 298, "herein": 298, "gpl": 298, "isol": 298, "program": 298, "convei": 298, "facil": 298, "faith": 298, "header": [298, 303], "accessor": 298, "inlin": 298, "templat": [298, 299], "ten": [298, 300], "promin": 298, "accompani": 298, "debug": 298, "among": 298, "recombin": 298, "relink": 298, "manner": 298, "extent": 298, "4d0": 298, "4d1": 298, "uncombin": 298, "revis": 298, "Such": [298, 299], "spirit": 298, "address": 298, "concern": 298, "ever": 298, "proxi": 298, "statement": 298, "perman": 298, "forth": 298, "expressli": 298, "grant": 298, "implic": 298, "estoppel": 298, "accident": 298, "fail": 298, "bring": 298, "issu": 298, "email": 298, "AND": 298, "translat": 298, "pysindi": [298, 311], "dynamicslab": 298, "pyemma": 298, "markovmodel": 298, "mit": 298, "sparsereg": 298, "brian": 298, "silva": 298, "kathleen": 298, "champion": 298, "charg": 298, "person": 298, "merg": 298, "sublicens": 298, "sell": 298, "whom": 298, "furnish": 298, "substanti": 298, "THE": 298, "AS": 298, "warranti": 298, "OF": 298, "OR": 298, "BUT": 298, "NOT": 298, "TO": 298, "merchant": 298, "FOR": 298, "noninfring": 298, "IN": 298, "NO": 298, "holder": 298, "BE": 298, "contract": 298, "tort": 298, "WITH": 298, "classifi": 299, "simplefilt": 299, "visibl": [299, 313], "500000": 299, "i_1": 299, "i_k": 299, "evid": 299, "highli": [299, 300, 310], "disadvantag": 299, "enough": [299, 310, 315], "clustering_new": 299, "loglog": [299, 302, 318], "costli": 299, "coverag": 299, "shortest": 299, "analog": [299, 312], "mostli": 299, "constantli": 299, "fed": 299, "quicker": 299, "327": 299, "finish": 299, "nice": [299, 306, 310, 318], "hyperparamet": 299, "difficult": 299, "assess": 299, "export": 299, "chebyshev": 299, "infti": [299, 311], "_1": 299, "struct": 299, "maximummetr": 299, "typenam": 299, "const": 299, "size_t": 299, "compute_squar": 299, "helper": [299, 314], "maxnormmodul": 299, "maxnorm": 299, "pybind11": 299, "cpp": 299, "setuptool": 299, "custom_metr": 299, "find_packag": 299, "ext_modul": 299, "languag": 299, "include_dir": 299, "get_includ": 299, "extra_compile_arg": 299, "fopenmp": 299, "openmp": 299, "extra_link_arg": 299, "lgomp": 299, "success": [299, 307], "clustering_custom_metr": 299, "stuart": 299, "lloyd": 299, "quantiz": 299, "pcm": 299, "ieee": [299, 306], "scullei": 299, "web": 299, "19th": 299, "confer": 299, "world": 299, "wide": 299, "1177": 299, "1178": 299, "peopl": [300, 301], "behind": [300, 311], "variant": [300, 307], "studi": [300, 302, 304, 314], "z_m": 300, "z_i": 300, "az_k": 300, "arrang": 300, "y_": 300, "yv": 300, "uw": 300, "remark": 300, "notion": [300, 314, 317], "standard_dmd": 300, "exact_dmd": 300, "_xa": 300, "uu": 300, "orthogon": 300, "imag": [300, 314], "especi": 300, "ax_t": 300, "standard_model": 300, "exact_model": 300, "00003048": 300, "00015445": 300, "traj_standard": 300, "traj_exact": 300, "perfectli": 300, "psi_1": [301, 317], "psi_2": 301, "psi_k": [301, 317], "underdetermin": 301, "dagger": 301, "25000": 301, "deg": 301, "edmd_estim": 301, "edmd_model": 301, "four": [301, 308, 314, 317], "peptid": 302, "exhibit": 302, "room": 302, "dihedr": 302, "angl": 302, "kinteic": 302, "atom": 302, "mdshare": 302, "is_avail": [302, 303, 318], "backend": [302, 303, 312, 318], "cudnn": [302, 303, 312, 318], "set_num_thread": [302, 303, 312, 318], "ala_coords_fil": 302, "3x250n": 302, "heavi": 302, "npz": 302, "working_directori": 302, "fh": 302, "arr_": 302, "dihedral_fil": 302, "backbon": 302, "hb": [302, 313], "mincnt": 302, "n_val": [302, 312, 318], "train_data": [302, 312, 318], "val_data": [302, 312, 318], "random_split": [302, 312, 318], "batchnorm1d": [302, 303], "momentum": 302, "affin": 302, "track_running_stat": 302, "loader_train": [302, 303, 305, 312, 318], "loader_v": [302, 303, 312, 318], "maxi": 302, "zip": [302, 304, 314], "8025465225218795e": 302, "6695964336395264": 302, "1106631013244623e": 302, "7277129888534546": 302, "470411451824475e": 302, "8271698355674744": 302, "245184012077516e": 302, "9025066494941711": 302, "952666444703937e": 302, "8756899833679199": 302, "31223042041529e": 302, "9684250354766846": 302, "argmax": 302, "vamp_estim": [302, 317], "flat": [302, 313], "grai": 302, "vamp_model": 302, "major": 302, "bmsm": [302, 309], "draw_initial_posit": 303, "vstack": 303, "forward_transform": 303, "back_transform": [303, 305], "xinit_train": 303, "traj_train": 303, "xinit_test": 303, "15000": 303, "traj_test": 303, "ipython": [303, 307, 317], "to_html5_video": [303, 307, 317], "browser": [303, 307, 317], "video": [303, 307, 317], "tag": [303, 307, 317], "ds_train": 303, "ds_test": 303, "bw": [303, 305], "57863921": 303, "00563756": 303, "kcca": [303, 305, 307], "plot_singular_funct": 303, "col": [303, 307], "n_iter": 303, "cluster_kcca": 303, "memberships_transform_kcca": 303, "traj_test_backward": 303, "coherence_scor": 303, "membership_transform": 303, "did": [303, 315, 317], "mismatch": [303, 305], "return_count": 303, "plot_mismatch": 303, "ref": 303, "ix_good": 303, "setdiff1d": 303, "assume_uniqu": 303, "score_kcca": 303, "mismatches_kcca": 303, "256": [303, 315], "512": [303, 318], "noisi": 303, "bickleyjet3dtorchd": 303, "ds_train_3d": 303, "ds_test_3d": 303, "batchsampl": 303, "randomsampl": 303, "sequentialsampl": 303, "collate_fn": 303, "train_sampl": 303, "2048": 303, "drop_last": 303, "val_sampl": 303, "ourselv": 303, "checkpoint": 303, "schedul": 303, "pathlib": 303, "checkpointmanag": 303, "lr_schedul": 303, "reducelronplateau": 303, "checkpoints_dir": 303, "output_dir": 303, "opt": 303, "patienc": 303, "8000": 303, "val_scor": 303, "xval": 303, "yval": 303, "semilogx": [303, 304], "ckpt": 303, "vamp_vampnet": [303, 305], "cluster_vampnet": 303, "memberships_transform_vampnet": 303, "score_vampnet": 303, "mismatches_vampnet": 303, "chirnd": 303, "fan_in": 303, "bias_var": 303, "out_dim": 303, "n_basi": 303, "w2": 303, "b2": 303, "cluster_vamp": 303, "memberships_transform_vamp": 303, "score_vamp": 303, "mismatches_vamp": 303, "cluster_kvad": 303, "memberships_transform_kvad": 303, "score_kvad": 303, "mismatches_kvad": 303, "kvadnets_lob": 303, "epoch_train_scor": 303, "batch_0": 303, "batch_t": 303, "epoch_val_scor": 303, "chi_kvadnet": 303, "cluster_kvadnet": 303, "memberships_transform_kvadnet": 303, "score_kvadnet": 303, "mismatches_kvadnet": 303, "vamp2_scor": 303, "tabul": 303, "88749": 303, "0796252": 303, "8802": 303, "8305": 303, "0762447": 303, "8598": 303, "07734": 303, "0749358": 303, "7622": 303, "75647": 303, "0677209": 303, "738": 303, "6162": 303, "0667439": 303, "7298": 303, "prinz_system": 304, "set_ytick": [304, 305], "nontrivi": 304, "n_eigenfunct": 304, "set1": 304, "finest_cl": 304, "finest_msm": 304, "eig_n": 304, "y0_": 304, "y0": [304, 311], "interp": [304, 313], "lbl": 304, "ev": 304, "facecolor": [304, 305], "white": [304, 305, 314], "verticalalign": [304, 305], "horizontalalign": [304, 305], "fontsiz": [304, 305], "spine": 304, "99e2": 304, "va": 304, "homogen": [305, 317], "binari": 305, "777": 305, "squareroot": 305, "brbg": 305, "legend1": 305, "plot_method": 305, "score_std": 305, "feat": [305, 318], "feat_cc": 305, "vmag": 305, "scatter_s": 305, "xxyi": 305, "array_split": 305, "z00": 305, "clip": [305, 307], "height_ratio": 305, "ax_contour": 305, "levels_fin": 305, "tick": [305, 314], "set_yticklabel": [305, 314], "ix_0": 305, "ix_1": 305, "plasma": 305, "pm": [305, 306], "transax": 305, "n_proj": 305, "count_nonzero": 305, "rescaled_proj": 305, "1f": 305, "acc": 305, "vamp_edmd": 305, "lt": [305, 312, 313], "axessubplot": 305, "gt": [305, 312, 313], "vamp_back": 305, "whitened_traj": 305, "kedmd_transf": 305, "vamp_kedmd": 305, "vamp_kcca": 305, "slsqp": [305, 307], "551e": 305, "000e": 305, "kcca_transform": 305, "multilay": [305, 312, 318], "preceptron": [305, 312], "architectur": [305, 312], "relu": [305, 312, 318], "dtr": 305, "evr": 305, "vamp_msm": 305, "wherea": [306, 310, 311], "oppos": 306, "harder": 306, "belief": 306, "ground_truth": 306, "prefer": 306, "hidden_trajectori": 306, "observation_trajectori": 306, "macrost": [306, 310], "i_hidden": 306, "i_ob": 306, "hidden_ix": 306, "subselected_ob": 306, "obs_ix": 306, "matshow": 306, "xaxi": 306, "set_ticks_posit": 306, "bottom": [306, 307], "tight_layout": [306, 314, 317], "hmm_est_real": 306, "034": 306, "init_hmm_random": 306, "hmm_est_random": 306, "258": 306, "1652": 306, "9913478370843": 306, "1660": 306, "3598109385": 306, "easiest": 306, "ml": [306, 309], "282": [306, 307], "10th": 306, "slash": 306, "errorbar": 306, "xerr": 306, "fmt": 306, "lawrenc": 306, "rabin": 306, "speech": 306, "recognit": 306, "257": 306, "286": 306, "illustr": [307, 308, 310], "multidimension": 307, "trick": 307, "popular": 307, "sup_": 307, "substack": 307, "_y": 307, "simplifi": 307, "auxiliari": 307, "x_j": [307, 308], "guid": [307, 308], "bickley_data": 307, "adapt": 307, "nine": 307, "kcca_estim": 307, "kcca_model": 307, "vortic": 307, "sake": [307, 308], "opt_data": 307, "opt_data_lag": 307, "bw_opt": 307, "eps_opt": 307, "miniconda3": 307, "env": 307, "runtimewarn": 307, "kcca_opt": 307, "matt": 307, "mollenhau": 307, "chao": 307, "5100267": 307, "gari": 307, "froyland": 307, "naratip": 307, "santitissadeekorn": 307, "monahan": 307, "transport": 307, "interdisciplinari": 307, "043116": 307, "3502450": 307, "hilbert": 308, "highlight": [308, 313], "moreov": 308, "implent": 308, "vice": [308, 313, 314, 317], "versa": [308, 313, 314, 317], "hist2d": 308, "2500": 308, "rand": 308, "kedmd_estim": 308, "kedmd_model": 308, "invari": [308, 310], "s_0": 309, "lambda_0": 309, "priori": 309, "p11": 309, "p22": 309, "p33": 309, "true_msm": 309, "97174192": 309, "02825808": 309, "01436794": 309, "97057023": 309, "01506183": 309, "02829029": 309, "97170971": 309, "24913759": 309, "48999019": 309, "26087221": 309, "know": [309, 314], "msm_statdist": 309, "97150033": 309, "02849967": 309, "01424983": 309, "97116296": 309, "0145872": 309, "0291744": 309, "9708256": 309, "statdist": 309, "anyth": 309, "counts_effect": 309, "bmsm_posterior": 309, "evaluat": 309, "stats_p": 309, "stats_timescal": 309, "stats_c": 309, "attach": [309, 314], "stats_mfpt": 309, "fill_between": 309, "alexand": [309, 314], "fischer": [309, 310], "wilhelm": 309, "huisinga": [309, 310], "deuflhard": [309, 310], "hybrid": 309, "mont": 309, "1999": 309, "successor": 310, "crispli": 310, "rainbow": 310, "weaker": 310, "connected": 310, "rigor": 310, "digraph": [310, 314, 316], "add_nod": [310, 314], "add_edg": [310, 314], "get_edge_attribut": [310, 314], "fruchterman_reingold_layout": 310, "draw_networkx_nod": [310, 314], "draw_networkx_label": [310, 314, 316], "get_node_attribut": [310, 314], "draw_networkx_edg": [310, 314], "connectionstyl": [310, 314], "arc3": [310, 314], "rad": [310, 314], "96181851": 310, "03818149": 310, "0283872": 310, "9716128": 310, "disentangl": [310, 312, 318], "42643471": 310, "57356529": 310, "argsort": 310, "xtick": 310, "nearli": 310, "uncoupl": 310, "constitut": 311, "bmatrix": 311, "3x_1x_2": 311, "7x_2": 311, "expans": 311, "ix_2": 311, "vdot": 311, "t_m": 311, "qquad": 311, "theta_": 311, "ell": 311, "theta_i": 311, "theta_3": 311, "x_3": 311, "understood": 311, "xi_1": 311, "xi_2": 311, "xi_n": 311, "xi_i": 311, "2x": 311, "decoupl": 311, "x_0e": 311, "2t": 311, "y_0e": 311, "x_0": 311, "y_0": 311, "tfrac": 311, "workflow": 311, "inspect": 311, "seem": 311, "999": 311, "y_test": 311, "ro": 311, "compress": 312, "life": 312, "downstream": 312, "bit": 312, "thing": [312, 313], "layer": 312, "output_nonlinear": 312, "sigmoid": 312, "initial_batchnorm": 312, "tae_model": 312, "overfit": 312, "semilogi": 312, "proj": 312, "line2d": 312, "0x7f5ad72d93d0": 312, "perceptron": [312, 318], "_sequenti": [312, 318], "_to_mu": 312, "_to_logvar": 312, "tvae_model": 312, "diederik": 312, "kingma": 312, "bay": 312, "6114": 312, "ica": 313, "pracitic": 313, "ask": [313, 314], "gap": [313, 317], "signific": 313, "140108282841360": 313, "0x7f6d35359130": 313, "spent": 313, "supersampl": 313, "intens": [313, 314, 317], "frequent": 313, "brighter": 313, "n_interp": 313, "ftraj_interp": 313, "equilibirum": 313, "tica_model": 313, "cf": 313, "61266834": 313, "28280506": 313, "tic": 313, "01713845": 313, "65760997": 313, "tica_model_kinetic_map": 313, "tica_model_commute_map": 313, "koopman_estim": 313, "reweighting_model": 313, "tica_model_reweight": 313, "lev": 313, "davidovich": 313, "landau": 313, "evgenii": 313, "mikhailovich": 313, "lifshitz": 313, "quantum": 313, "relativist": 313, "elsevi": 313, "answer": 314, "trap": 314, "motiv": 314, "overcom": 314, "freeli": 314, "soft": 314, "enter": 314, "darker": 314, "lighter": 314, "imagin": 314, "hill": 314, "question": 314, "man": 314, "he": 314, "law": 314, "tell": 314, "countabl": 314, "c_n": 314, "sum_n": 314, "But": 314, "rise": [314, 317], "bvp": 314, "gradual": 314, "leav": 314, "detour": 314, "tot": 314, "165e": 314, "pi_iq_i": 314, "264e": 314, "7911": 314, "887": 314, "six": 314, "lump": 314, "systemat": [314, 317, 318], "subdivid": 314, "remainder_upp": 314, "remainder_low": 314, "flux_set": 314, "cycl": 314, "lack": 314, "circular_layout": [314, 316], "1100": 314, "draw_networkx_edge_label": 314, "arrows": 314, "s_k": 314, "choosen": 314, "strongest": 314, "mlmsm": 314, "cube": 314, "berezhkovskii": 314, "gerhard": 314, "hummer": 314, "attila": 314, "szabo": 314, "05b614": 314, "doyl": 314, "lauri": 314, "snell": 314, "electr": 314, "1984": 314, "angelo": 314, "valleriani": 314, "circular": 314, "scientif": 314, "dimensionless": 315, "stead": 315, "k_i": 315, "contruct": 315, "biased_potenti": 315, "82456604": 315, "19136811": 315, "piec": 315, "trajectories_shift": 315, "criteria": 315, "maaik": 315, "phd": 315, "_tram": 315, "convergencewarn": 315, "0005462764459391867": 315, "_biased_conf_energi": 315, "bin_numb": 315, "apidoc": 316, "countain": 316, "histogram_valu": 316, "from_numpy_matrix": 316, "create_us": 316, "draw_circular": 316, "node_color": 316, "90ee90": 316, "font_siz": 316, "submodel_explicit": 316, "trace": 316, "ariat": 317, "pproach": 317, "arkov": 317, "rocess": 317, "1935": 317, "w_i": 317, "chi_i": 317, "whitenend": 317, "subcategori": 317, "extern": 317, "salvag": 317, "deficit": 317, "nonoverlap": 317, "8534787431760964": 317, "clearli": 317, "insight": 317, "background": 317, "consult": 317, "g_1": 317, "trasform": 317, "theorem": 317, "sigma_k": 317, "phi_1": 317, "phi_k": 317, "phi_i": 317, "foward": 317, "rho_1": 317, "foremost": 317, "92383913": 317, "02905651": 317, "39412183": 317, "40228095": 317, "40095045": 317, "40235857": 317, "u_i": 317, "g_i": 317, "awar": 317, "hyothet": 317, "avaiabl": 317, "struck": 317, "9238391327369158": 317, "8534787431760968": 317, "7699596561010507": 317, "scaled_model": 317, "disturb": 317, "oscillatori": 317, "_particl": 317, "5600": 317, "1944": 317, "n_sing": 317, "1600": 317, "sigma_2": 317, "forward_ful": 317, "clearer": 317, "middl": 317, "800": 317, "quit": 317, "splash": 317, "forward_component0": 317, "forward_component1": 317, "forward_component0123": 317, "scherer": 317, "moritz": 317, "hoffmann": 317, "194108": 317, "hardwar": 318, "vamp_model_vnet": 318, "vamp_model_direct": 318, "5f": 318, "78799": 318, "28104": 318, "dtraj_rec": 318, "95227187": 318, "04772813": 318, "05229995": 318, "94770005": 318}, "objects": {"deeptime.base": [[0, 0, 1, "", "Dataset"], [1, 0, 1, "", "Estimator"], [2, 0, 1, "", "Model"], [3, 0, 1, "", "Transformer"]], "deeptime.base.Dataset": [[0, 1, 1, "", "setflags"]], "deeptime.base.Estimator": [[1, 1, 1, "", "fetch_model"], [1, 1, 1, "", "fit"], [1, 1, 1, "", "fit_fetch"], [1, 1, 1, "", "get_params"], [1, 2, 1, "", "has_model"], [1, 2, 1, "", "model"], [1, 1, 1, "", "set_params"]], "deeptime.base.Model": [[2, 1, 1, "", "copy"], [2, 1, 1, "", "get_params"], [2, 1, 1, "", "set_params"]], "deeptime.base.Transformer": [[3, 1, 1, "", "__call__"], [3, 1, 1, "", "transform"]], "deeptime": [[239, 3, 0, "-", "basis"], [240, 3, 0, "-", "clustering"], [241, 3, 0, "-", "covariance"], [242, 3, 0, "-", "data"], [243, 3, 0, "-", "decomposition"], [244, 3, 0, "-", "kernels"], [248, 3, 0, "-", "numeric"], [249, 3, 0, "-", "plots"], [250, 3, 0, "-", "sindy"], [251, 3, 0, "-", "util"]], "deeptime.basis": [[4, 0, 1, "", "Concatenation"], [5, 0, 1, "", "Identity"], [6, 0, 1, "", "Monomials"], [7, 0, 1, "", "Observable"]], "deeptime.basis.Concatenation": [[4, 1, 1, "", "__call__"], [4, 1, 1, "", "transform"]], "deeptime.basis.Identity": [[5, 1, 1, "", "__call__"], [5, 1, 1, "", "transform"]], "deeptime.basis.Monomials": [[6, 1, 1, "", "__call__"], [6, 1, 1, "", "get_feature_names"], [6, 1, 1, "", "get_feature_names_out"], [6, 1, 1, "", "transform"]], "deeptime.basis.Observable": [[7, 1, 1, "", "__call__"], [7, 1, 1, "", "transform"]], "deeptime.clustering": [[8, 0, 1, "", "BoxDiscretization"], [9, 0, 1, "", "BoxDiscretizationModel"], [10, 0, 1, "", "ClusterModel"], [11, 0, 1, "", "KMeans"], [12, 0, 1, "", "KMeansModel"], [13, 0, 1, "", "MetricRegistry"], [14, 0, 1, "", "MiniBatchKMeans"], [15, 0, 1, "", "RegularSpace"], [16, 4, 1, "", "kmeans_plusplus"], [17, 5, 1, "", "metrics"]], "deeptime.clustering.BoxDiscretization": [[8, 1, 1, "", "fetch_model"], [8, 1, 1, "", "fit"], [8, 1, 1, "", "fit_fetch"], [8, 1, 1, "", "get_params"], [8, 2, 1, "", "has_model"], [8, 2, 1, "", "model"], [8, 1, 1, "", "set_params"]], "deeptime.clustering.BoxDiscretizationModel": [[9, 1, 1, "", "__call__"], [9, 2, 1, "", "cluster_centers"], [9, 2, 1, "", "converged"], [9, 1, 1, "", "copy"], [9, 1, 1, "", "get_params"], [9, 2, 1, "", "metric"], [9, 2, 1, "", "n_clusters"], [9, 1, 1, "", "set_params"], [9, 1, 1, "", "transform"], [9, 1, 1, "", "transform_onehot"]], "deeptime.clustering.ClusterModel": [[10, 1, 1, "", "__call__"], [10, 2, 1, "", "cluster_centers"], [10, 2, 1, "", "converged"], [10, 1, 1, "", "copy"], [10, 1, 1, "", "get_params"], [10, 2, 1, "", "metric"], [10, 2, 1, "", "n_clusters"], [10, 1, 1, "", "set_params"], [10, 1, 1, "", "transform"]], "deeptime.clustering.KMeans": [[11, 1, 1, "", "__call__"], [11, 1, 1, "", "fetch_model"], [11, 1, 1, "", "fit"], [11, 1, 1, "", "fit_fetch"], [11, 1, 1, "", "fit_transform"], [11, 2, 1, "", "fixed_seed"], [11, 1, 1, "", "get_params"], [11, 2, 1, "", "has_model"], [11, 2, 1, "", "init_strategy"], [11, 2, 1, "", "initial_centers"], [11, 2, 1, "", "max_iter"], [11, 2, 1, "", "metric"], [11, 2, 1, "", "model"], [11, 2, 1, "", "n_clusters"], [11, 2, 1, "", "n_jobs"], [11, 1, 1, "", "set_params"], [11, 2, 1, "", "tolerance"], [11, 1, 1, "", "transform"]], "deeptime.clustering.KMeansModel": [[12, 1, 1, "", "__call__"], [12, 2, 1, "", "cluster_centers"], [12, 2, 1, "", "converged"], [12, 1, 1, "", "copy"], [12, 1, 1, "", "get_params"], [12, 2, 1, "", "inertia"], [12, 2, 1, "", "inertias"], [12, 2, 1, "", "metric"], [12, 2, 1, "", "n_clusters"], [12, 1, 1, "", "score"], [12, 1, 1, "", "set_params"], [12, 2, 1, "", "tolerance"], [12, 1, 1, "", "transform"]], "deeptime.clustering.MetricRegistry": [[13, 2, 1, "", "available"], [13, 1, 1, "", "register"]], "deeptime.clustering.MiniBatchKMeans": [[14, 1, 1, "", "__call__"], [14, 1, 1, "", "fetch_model"], [14, 1, 1, "", "fit"], [14, 1, 1, "", "fit_fetch"], [14, 1, 1, "", "fit_transform"], [14, 2, 1, "", "fixed_seed"], [14, 1, 1, "", "get_params"], [14, 2, 1, "", "has_model"], [14, 2, 1, "", "init_strategy"], [14, 2, 1, "", "initial_centers"], [14, 2, 1, "", "max_iter"], [14, 2, 1, "", "metric"], [14, 2, 1, "", "model"], [14, 2, 1, "", "n_clusters"], [14, 2, 1, "", "n_jobs"], [14, 1, 1, "", "partial_fit"], [14, 1, 1, "", "set_params"], [14, 2, 1, "", "tolerance"], [14, 1, 1, "", "transform"]], "deeptime.clustering.RegularSpace": [[15, 2, 1, "", "dmin"], [15, 1, 1, "", "fetch_model"], [15, 1, 1, "", "fit"], [15, 1, 1, "", "fit_fetch"], [15, 1, 1, "", "get_params"], [15, 2, 1, "", "has_model"], [15, 2, 1, "", "max_centers"], [15, 2, 1, "", "metric"], [15, 2, 1, "", "model"], [15, 2, 1, "", "n_clusters"], [15, 2, 1, "", "n_jobs"], [15, 1, 1, "", "partial_fit"], [15, 1, 1, "", "set_params"]], "deeptime.covariance": [[18, 0, 1, "", "Covariance"], [19, 0, 1, "", "CovarianceModel"], [20, 0, 1, "", "KoopmanWeightingEstimator"], [21, 0, 1, "", "KoopmanWeightingModel"], [223, 0, 1, "", "WhiteningTransform"], [224, 4, 1, "", "covar"], [225, 4, 1, "", "covars"], [226, 4, 1, "", "moments_XX"], [227, 4, 1, "", "moments_XXXY"], [228, 4, 1, "", "moments_block"]], "deeptime.covariance.Covariance": [[18, 2, 1, "", "bessels_correction"], [18, 2, 1, "", "compute_c00"], [18, 2, 1, "", "compute_c0t"], [18, 2, 1, "", "compute_ctt"], [18, 2, 1, "", "diag_only"], [18, 1, 1, "", "fetch_model"], [18, 1, 1, "", "fit"], [18, 1, 1, "", "fit_fetch"], [18, 1, 1, "", "get_params"], [18, 2, 1, "", "has_model"], [18, 2, 1, "", "is_lagged"], [18, 2, 1, "", "lagtime"], [18, 2, 1, "", "model"], [18, 2, 1, "", "ncov"], [18, 1, 1, "", "partial_fit"], [18, 2, 1, "", "remove_data_mean"], [18, 2, 1, "", "reversible"], [18, 1, 1, "", "set_params"], [18, 2, 1, "", "sparse_mode"]], "deeptime.covariance.CovarianceModel": [[19, 2, 1, "", "bessels_correction"], [19, 1, 1, "", "copy"], [19, 2, 1, "", "cov_00"], [19, 2, 1, "", "cov_0t"], [19, 2, 1, "", "cov_tt"], [19, 2, 1, "", "data_mean_removed"], [19, 1, 1, "", "get_params"], [19, 2, 1, "", "lagtime"], [19, 2, 1, "", "mean_0"], [19, 2, 1, "", "mean_t"], [19, 1, 1, "", "set_params"], [19, 2, 1, "", "symmetrized"], [19, 1, 1, "", "whiten"]], "deeptime.covariance.KoopmanWeightingEstimator": [[20, 1, 1, "", "__call__"], [20, 1, 1, "", "fetch_model"], [20, 1, 1, "", "fit"], [20, 1, 1, "", "fit_fetch"], [20, 1, 1, "", "fit_transform"], [20, 1, 1, "", "get_params"], [20, 2, 1, "", "has_model"], [20, 2, 1, "", "lagtime"], [20, 2, 1, "", "model"], [20, 1, 1, "", "partial_fit"], [20, 1, 1, "", "set_params"], [20, 1, 1, "", "transform"]], "deeptime.covariance.KoopmanWeightingModel": [[21, 1, 1, "", "__call__"], [21, 2, 1, "", "const_weight_input"], [21, 1, 1, "", "copy"], [21, 2, 1, "", "covariances"], [21, 1, 1, "", "get_params"], [21, 2, 1, "", "koopman_operator"], [21, 1, 1, "", "set_params"], [21, 1, 1, "", "transform"], [21, 1, 1, "", "weights"], [21, 2, 1, "", "weights_input"], [21, 2, 1, "", "whitening_transformation"]], "deeptime.covariance.WhiteningTransform": [[223, 1, 1, "", "__call__"], [223, 1, 1, "", "transform"]], "deeptime.data": [[229, 0, 1, "", "BickleyJet"], [230, 0, 1, "", "BirthDeathChain"], [231, 0, 1, "", "CustomSystem"], [232, 0, 1, "", "DoubleWellDiscrete"], [233, 0, 1, "", "DrunkardsWalk"], [234, 0, 1, "", "Ellipsoids"], [235, 0, 1, "", "PBFSimulator"], [236, 0, 1, "", "TimeDependentSystem"], [237, 0, 1, "", "TimeIndependentSystem"], [22, 4, 1, "", "abc_flow"], [23, 4, 1, "", "bickley_jet"], [24, 4, 1, "", "birth_death_chain"], [25, 4, 1, "", "custom_ode"], [26, 4, 1, "", "custom_sde"], [27, 4, 1, "", "double_well_2d"], [28, 4, 1, "", "double_well_discrete"], [29, 4, 1, "", "drunkards_walk"], [30, 4, 1, "", "ellipsoids"], [31, 4, 1, "", "ornstein_uhlenbeck"], [32, 4, 1, "", "position_based_fluids"], [33, 4, 1, "", "prinz_potential"], [34, 4, 1, "", "quadruple_well"], [35, 4, 1, "", "quadruple_well_asymmetric"], [36, 4, 1, "", "sqrt_model"], [37, 4, 1, "", "swissroll_model"], [38, 4, 1, "", "time_dependent_quintuple_well"], [39, 4, 1, "", "tmatrix_metropolis1d"], [40, 4, 1, "", "triple_well_1d"], [41, 4, 1, "", "triple_well_2d"]], "deeptime.data.BickleyJet": [[229, 2, 1, "", "L0"], [229, 2, 1, "", "U0"], [229, 1, 1, "", "__call__"], [229, 1, 1, "", "apply_periodic_boundary_conditions"], [229, 2, 1, "", "c"], [229, 2, 1, "", "dimension"], [229, 2, 1, "", "eps"], [229, 2, 1, "", "f"], [229, 1, 1, "", "generate"], [229, 2, 1, "", "h"], [229, 2, 1, "", "has_potential_function"], [229, 2, 1, "", "integrator"], [229, 2, 1, "", "k"], [229, 2, 1, "", "n_steps"], [229, 2, 1, "", "periodic_bc"], [229, 1, 1, "", "potential"], [229, 2, 1, "", "r0"], [229, 2, 1, "", "time_dependent"], [229, 1, 1, "", "to_3d"], [229, 1, 1, "", "trajectory"], [229, 2, 1, "", "vectorized_f"]], "deeptime.data.BirthDeathChain": [[230, 1, 1, "", "committor_backward"], [230, 1, 1, "", "committor_forward"], [230, 1, 1, "", "flux"], [230, 2, 1, "", "msm"], [230, 1, 1, "", "netflux"], [230, 1, 1, "", "rate"], [230, 2, 1, "", "stationary_distribution"], [230, 1, 1, "", "totalflux"], [230, 2, 1, "", "transition_matrix"]], "deeptime.data.CustomSystem": [[231, 1, 1, "", "__call__"], [231, 2, 1, "", "dimension"], [231, 2, 1, "", "f"], [231, 2, 1, "", "h"], [231, 2, 1, "", "has_potential_function"], [231, 2, 1, "", "integrator"], [231, 2, 1, "", "n_steps"], [231, 1, 1, "", "potential"], [231, 2, 1, "", "time_dependent"], [231, 1, 1, "", "trajectory"], [231, 2, 1, "", "vectorized_f"]], "deeptime.data.DoubleWellDiscrete": [[232, 2, 1, "", "analytic_msm"], [232, 2, 1, "", "dtraj"], [232, 1, 1, "", "dtraj_n"], [232, 1, 1, "", "dtraj_n2"], [232, 2, 1, "", "dtraj_n2bad"], [232, 2, 1, "", "dtraj_n2good"], [232, 2, 1, "", "dtraj_n6good"], [232, 1, 1, "", "simulate_trajectories"], [232, 1, 1, "", "simulate_trajectory"], [232, 2, 1, "", "transition_matrix"]], "deeptime.data.DrunkardsWalk": [[233, 1, 1, "", "add_barrier"], [233, 1, 1, "", "coordinate_to_state"], [233, 1, 1, "", "is_valid_coordinate"], [233, 2, 1, "", "msm"], [233, 1, 1, "", "plot_2d_map"], [233, 1, 1, "", "plot_network"], [233, 1, 1, "", "plot_path"], [233, 1, 1, "", "state_to_coordinate"], [233, 1, 1, "", "walk"]], "deeptime.data.Ellipsoids": [[234, 2, 1, "", "covariance_matrix"], [234, 1, 1, "", "discrete_trajectory"], [234, 1, 1, "", "map_discrete_to_observations"], [234, 2, 1, "", "msm"], [234, 1, 1, "", "observations"], [234, 2, 1, "", "random_state"], [234, 2, 1, "", "seed"]], "deeptime.data.PBFSimulator": [[235, 2, 1, "", "domain_size"], [235, 1, 1, "", "make_animation"], [235, 2, 1, "", "n_particles"], [235, 1, 1, "", "run"], [235, 1, 1, "", "simulate_oscillatory_force"], [235, 1, 1, "", "transform_to_density"]], "deeptime.data.TimeDependentSystem": [[236, 1, 1, "", "__call__"], [236, 2, 1, "", "dimension"], [236, 2, 1, "", "f"], [236, 2, 1, "", "h"], [236, 2, 1, "", "has_potential_function"], [236, 2, 1, "", "integrator"], [236, 2, 1, "", "n_steps"], [236, 1, 1, "", "potential"], [236, 2, 1, "", "time_dependent"], [236, 1, 1, "", "trajectory"], [236, 2, 1, "", "vectorized_f"]], "deeptime.data.TimeIndependentSystem": [[237, 1, 1, "", "__call__"], [237, 2, 1, "", "dimension"], [237, 2, 1, "", "f"], [237, 2, 1, "", "h"], [237, 2, 1, "", "has_potential_function"], [237, 2, 1, "", "integrator"], [237, 2, 1, "", "n_steps"], [237, 1, 1, "", "potential"], [237, 2, 1, "", "time_dependent"], [237, 1, 1, "", "trajectory"], [237, 2, 1, "", "vectorized_f"]], "deeptime.decomposition": [[42, 0, 1, "", "CovarianceKoopmanModel"], [43, 0, 1, "", "DMD"], [44, 0, 1, "", "DMDModel"], [45, 0, 1, "", "EDMD"], [46, 0, 1, "", "EDMDModel"], [47, 0, 1, "", "KVAD"], [48, 0, 1, "", "KVADModel"], [49, 0, 1, "", "KernelCCA"], [50, 0, 1, "", "KernelCCAModel"], [51, 0, 1, "", "KernelEDMD"], [52, 0, 1, "", "KernelEDMDModel"], [53, 0, 1, "", "TICA"], [54, 0, 1, "", "TransferOperatorModel"], [55, 0, 1, "", "VAMP"], [56, 4, 1, "", "blocksplit_trajs"], [57, 4, 1, "", "cvsplit_trajs"], [71, 4, 1, "", "vamp_score"], [72, 4, 1, "", "vamp_score_cv"], [73, 4, 1, "", "vamp_score_data"]], "deeptime.decomposition.CovarianceKoopmanModel": [[42, 1, 1, "", "__call__"], [42, 1, 1, "", "backward"], [42, 1, 1, "", "ck_test"], [42, 1, 1, "", "copy"], [42, 2, 1, "", "cov"], [42, 2, 1, "", "cov_00"], [42, 2, 1, "", "cov_0t"], [42, 2, 1, "", "cov_tt"], [42, 2, 1, "", "cumulative_kinetic_variance"], [42, 2, 1, "", "dim"], [42, 1, 1, "", "effective_output_dimension"], [42, 2, 1, "", "epsilon"], [42, 1, 1, "", "expectation"], [42, 2, 1, "", "feature_component_correlation"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_params"], [42, 2, 1, "", "instantaneous_coefficients"], [42, 2, 1, "", "instantaneous_obs"], [42, 2, 1, "", "koopman_matrix"], [42, 2, 1, "", "lagtime"], [42, 2, 1, "", "mean_0"], [42, 2, 1, "", "mean_t"], [42, 2, 1, "", "operator"], [42, 2, 1, "", "operator_inverse"], [42, 2, 1, "", "output_dimension"], [42, 1, 1, "", "propagate"], [42, 2, 1, "", "scaling"], [42, 1, 1, "", "score"], [42, 1, 1, "", "set_params"], [42, 2, 1, "", "singular_values"], [42, 2, 1, "", "singular_vectors_left"], [42, 2, 1, "", "singular_vectors_right"], [42, 2, 1, "", "timelagged_coefficients"], [42, 2, 1, "", "timelagged_obs"], [42, 1, 1, "", "timescales"], [42, 1, 1, "", "transform"], [42, 2, 1, "", "var_cutoff"], [42, 2, 1, "", "whitening_rank_0"], [42, 2, 1, "", "whitening_rank_t"]], "deeptime.decomposition.DMD": [[43, 1, 1, "", "__call__"], [43, 6, 1, "", "available_drivers"], [43, 6, 1, "", "available_modes"], [43, 1, 1, "", "fetch_model"], [43, 1, 1, "", "fit"], [43, 1, 1, "", "fit_fetch"], [43, 1, 1, "", "fit_transform"], [43, 1, 1, "", "get_params"], [43, 2, 1, "", "has_model"], [43, 2, 1, "", "model"], [43, 1, 1, "", "set_params"], [43, 1, 1, "", "transform"]], "deeptime.decomposition.DMDModel": [[44, 1, 1, "", "__call__"], [44, 1, 1, "", "copy"], [44, 1, 1, "", "get_params"], [44, 1, 1, "", "set_params"], [44, 1, 1, "", "transform"]], "deeptime.decomposition.EDMD": [[45, 1, 1, "", "__call__"], [45, 6, 1, "", "available_operators"], [45, 1, 1, "", "fetch_model"], [45, 1, 1, "", "fit"], [45, 1, 1, "", "fit_fetch"], [45, 1, 1, "", "fit_transform"], [45, 1, 1, "", "get_params"], [45, 2, 1, "", "has_model"], [45, 2, 1, "", "model"], [45, 1, 1, "", "set_params"], [45, 1, 1, "", "transform"]], "deeptime.decomposition.EDMDModel": [[46, 1, 1, "", "__call__"], [46, 1, 1, "", "backward"], [46, 1, 1, "", "copy"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_params"], [46, 2, 1, "", "instantaneous_obs"], [46, 2, 1, "", "koopman_matrix"], [46, 2, 1, "", "operator"], [46, 2, 1, "", "operator_inverse"], [46, 2, 1, "", "output_dimension"], [46, 1, 1, "", "set_params"], [46, 2, 1, "", "timelagged_obs"], [46, 1, 1, "", "transform"]], "deeptime.decomposition.KVAD": [[47, 1, 1, "", "__call__"], [47, 2, 1, "", "dim"], [47, 2, 1, "", "epsilon"], [47, 1, 1, "", "fetch_model"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_fetch"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "get_params"], [47, 2, 1, "", "has_model"], [47, 2, 1, "", "model"], [47, 2, 1, "", "observable_transform"], [47, 1, 1, "", "set_params"], [47, 1, 1, "", "transform"]], "deeptime.decomposition.KVADModel": [[48, 1, 1, "", "__call__"], [48, 1, 1, "", "backward"], [48, 1, 1, "", "copy"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_params"], [48, 2, 1, "", "instantaneous_obs"], [48, 2, 1, "", "koopman_matrix"], [48, 2, 1, "", "operator"], [48, 2, 1, "", "operator_inverse"], [48, 2, 1, "", "output_dimension"], [48, 1, 1, "", "set_params"], [48, 2, 1, "", "timelagged_obs"], [48, 1, 1, "", "transform"]], "deeptime.decomposition.KernelCCA": [[49, 1, 1, "", "fetch_model"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "fit_fetch"], [49, 1, 1, "", "get_params"], [49, 2, 1, "", "has_model"], [49, 2, 1, "", "model"], [49, 1, 1, "", "set_params"]], "deeptime.decomposition.KernelCCAModel": [[50, 1, 1, "", "__call__"], [50, 1, 1, "", "backward"], [50, 1, 1, "", "copy"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_params"], [50, 2, 1, "", "instantaneous_obs"], [50, 2, 1, "", "kernel"], [50, 2, 1, "", "koopman_matrix"], [50, 2, 1, "", "operator"], [50, 2, 1, "", "operator_inverse"], [50, 2, 1, "", "output_dimension"], [50, 1, 1, "", "set_params"], [50, 2, 1, "", "timelagged_obs"], [50, 1, 1, "", "transform"]], "deeptime.decomposition.KernelEDMD": [[51, 1, 1, "", "__call__"], [51, 1, 1, "", "fetch_model"], [51, 1, 1, "", "fit"], [51, 1, 1, "", "fit_fetch"], [51, 1, 1, "", "fit_transform"], [51, 1, 1, "", "get_params"], [51, 2, 1, "", "has_model"], [51, 2, 1, "", "model"], [51, 1, 1, "", "set_params"], [51, 1, 1, "", "transform"]], "deeptime.decomposition.KernelEDMDModel": [[52, 1, 1, "", "__call__"], [52, 1, 1, "", "backward"], [52, 1, 1, "", "copy"], [52, 1, 1, "", "forward"], [52, 1, 1, "", "get_params"], [52, 2, 1, "", "instantaneous_obs"], [52, 2, 1, "", "koopman_matrix"], [52, 2, 1, "", "operator"], [52, 2, 1, "", "operator_inverse"], [52, 2, 1, "", "output_dimension"], [52, 1, 1, "", "set_params"], [52, 2, 1, "", "timelagged_obs"], [52, 1, 1, "", "transform"]], "deeptime.decomposition.TICA": [[53, 1, 1, "", "__call__"], [53, 1, 1, "", "chapman_kolmogorov_validator"], [53, 1, 1, "", "covariance_estimator"], [53, 2, 1, "", "dim"], [53, 2, 1, "", "epsilon"], [53, 1, 1, "", "fetch_model"], [53, 1, 1, "", "fit"], [53, 1, 1, "", "fit_fetch"], [53, 1, 1, "", "fit_from_covariances"], [53, 1, 1, "", "fit_from_timeseries"], [53, 1, 1, "", "fit_transform"], [53, 1, 1, "", "get_params"], [53, 2, 1, "", "has_model"], [53, 2, 1, "", "lagtime"], [53, 2, 1, "", "model"], [53, 1, 1, "", "partial_fit"], [53, 2, 1, "", "scaling"], [53, 1, 1, "", "set_params"], [53, 1, 1, "", "transform"], [53, 2, 1, "", "var_cutoff"]], "deeptime.decomposition.TransferOperatorModel": [[54, 1, 1, "", "__call__"], [54, 1, 1, "", "backward"], [54, 1, 1, "", "copy"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "get_params"], [54, 2, 1, "", "instantaneous_obs"], [54, 2, 1, "", "koopman_matrix"], [54, 2, 1, "", "operator"], [54, 2, 1, "", "operator_inverse"], [54, 2, 1, "", "output_dimension"], [54, 1, 1, "", "set_params"], [54, 2, 1, "", "timelagged_obs"], [54, 1, 1, "", "transform"]], "deeptime.decomposition.VAMP": [[55, 1, 1, "", "__call__"], [55, 1, 1, "", "chapman_kolmogorov_validator"], [55, 1, 1, "", "covariance_estimator"], [55, 2, 1, "", "dim"], [55, 2, 1, "", "epsilon"], [55, 1, 1, "", "fetch_model"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "fit_fetch"], [55, 1, 1, "", "fit_from_covariances"], [55, 1, 1, "", "fit_from_timeseries"], [55, 1, 1, "", "fit_transform"], [55, 1, 1, "", "get_params"], [55, 2, 1, "", "has_model"], [55, 2, 1, "", "lagtime"], [55, 2, 1, "", "model"], [55, 1, 1, "", "partial_fit"], [55, 2, 1, "", "scaling"], [55, 1, 1, "", "set_params"], [55, 1, 1, "", "transform"], [55, 2, 1, "", "var_cutoff"]], "deeptime.decomposition.deep": [[58, 0, 1, "", "TAE"], [59, 0, 1, "", "TAEModel"], [60, 0, 1, "", "TVAE"], [61, 0, 1, "", "TVAEEncoder"], [62, 0, 1, "", "TVAEModel"], [63, 0, 1, "", "VAMPNet"], [64, 0, 1, "", "VAMPNetModel"], [65, 4, 1, "", "covariances"], [66, 4, 1, "", "koopman_matrix"], [67, 4, 1, "", "kvad_score"], [68, 4, 1, "", "sym_inverse"], [69, 4, 1, "", "vamp_score"], [70, 4, 1, "", "vampnet_loss"]], "deeptime.decomposition.deep.TAE": [[58, 1, 1, "", "__call__"], [58, 2, 1, "", "device"], [58, 2, 1, "", "dtype"], [58, 1, 1, "", "evaluate_loss"], [58, 1, 1, "", "fetch_model"], [58, 1, 1, "", "fit"], [58, 1, 1, "", "fit_fetch"], [58, 1, 1, "", "fit_transform"], [58, 1, 1, "", "get_params"], [58, 2, 1, "", "has_model"], [58, 2, 1, "", "learning_rate"], [58, 2, 1, "", "model"], [58, 2, 1, "", "optimizer"], [58, 1, 1, "", "set_params"], [58, 1, 1, "", "setup_optimizer"], [58, 2, 1, "", "train_losses"], [58, 1, 1, "", "transform"], [58, 2, 1, "", "validation_losses"]], "deeptime.decomposition.deep.TAEModel": [[59, 1, 1, "", "__call__"], [59, 1, 1, "", "copy"], [59, 2, 1, "", "decoder"], [59, 2, 1, "", "encoder"], [59, 1, 1, "", "get_params"], [59, 1, 1, "", "set_params"], [59, 1, 1, "", "transform"]], "deeptime.decomposition.deep.TVAE": [[60, 1, 1, "", "__call__"], [60, 2, 1, "", "device"], [60, 2, 1, "", "dtype"], [60, 1, 1, "", "evaluate_loss"], [60, 1, 1, "", "fetch_model"], [60, 1, 1, "", "fit"], [60, 1, 1, "", "fit_fetch"], [60, 1, 1, "", "fit_transform"], [60, 1, 1, "", "get_params"], [60, 2, 1, "", "has_model"], [60, 2, 1, "", "learning_rate"], [60, 2, 1, "", "model"], [60, 2, 1, "", "optimizer"], [60, 1, 1, "", "set_params"], [60, 1, 1, "", "setup_optimizer"], [60, 2, 1, "", "train_losses"], [60, 1, 1, "", "transform"], [60, 2, 1, "", "validation_losses"]], "deeptime.decomposition.deep.TVAEEncoder": [[61, 1, 1, "", "__call__"], [61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "deeptime.decomposition.deep.TVAEModel": [[62, 1, 1, "", "__call__"], [62, 1, 1, "", "copy"], [62, 2, 1, "", "decoder"], [62, 2, 1, "", "encoder"], [62, 1, 1, "", "get_params"], [62, 1, 1, "", "set_params"], [62, 1, 1, "", "transform"]], "deeptime.decomposition.deep.VAMPNet": [[63, 1, 1, "", "__call__"], [63, 2, 1, "", "device"], [63, 2, 1, "", "dtype"], [63, 2, 1, "", "epsilon"], [63, 1, 1, "", "fetch_model"], [63, 1, 1, "", "fit"], [63, 1, 1, "", "fit_fetch"], [63, 1, 1, "", "fit_transform"], [63, 1, 1, "", "get_params"], [63, 2, 1, "", "has_model"], [63, 2, 1, "", "learning_rate"], [63, 2, 1, "", "lobe"], [63, 2, 1, "", "lobe_timelagged"], [63, 2, 1, "", "model"], [63, 2, 1, "", "optimizer"], [63, 1, 1, "", "partial_fit"], [63, 2, 1, "", "score_method"], [63, 1, 1, "", "set_params"], [63, 1, 1, "", "setup_optimizer"], [63, 2, 1, "", "train_scores"], [63, 1, 1, "", "transform"], [63, 1, 1, "", "validate"], [63, 2, 1, "", "validation_scores"]], "deeptime.decomposition.deep.VAMPNetModel": [[64, 1, 1, "", "__call__"], [64, 1, 1, "", "copy"], [64, 1, 1, "", "get_params"], [64, 2, 1, "", "lobe"], [64, 2, 1, "", "lobe_timelagged"], [64, 1, 1, "", "set_params"], [64, 1, 1, "", "transform"]], "deeptime.kernels": [[74, 0, 1, "", "GaussianKernel"], [75, 0, 1, "", "GeneralizedGaussianKernel"], [76, 0, 1, "", "Kernel"], [77, 0, 1, "", "LaplacianKernel"], [78, 0, 1, "", "PolynomialKernel"], [79, 0, 1, "", "TorchGaussianKernel"], [80, 4, 1, "", "is_torch_kernel"]], "deeptime.kernels.GaussianKernel": [[74, 1, 1, "", "__call__"], [74, 1, 1, "", "apply"], [74, 1, 1, "", "gram"], [74, 2, 1, "", "sigma"], [74, 6, 1, "", "valid_impls"]], "deeptime.kernels.GeneralizedGaussianKernel": [[75, 1, 1, "", "__call__"], [75, 1, 1, "", "apply"], [75, 1, 1, "", "gram"]], "deeptime.kernels.Kernel": [[76, 1, 1, "", "__call__"], [76, 1, 1, "", "apply"], [76, 1, 1, "", "gram"]], "deeptime.kernels.LaplacianKernel": [[77, 1, 1, "", "__call__"], [77, 1, 1, "", "apply"], [77, 1, 1, "", "gram"]], "deeptime.kernels.PolynomialKernel": [[78, 1, 1, "", "__call__"], [78, 1, 1, "", "apply"], [78, 1, 1, "", "gram"]], "deeptime.kernels.TorchGaussianKernel": [[79, 1, 1, "", "__call__"], [79, 1, 1, "", "apply"], [79, 1, 1, "", "gram"], [79, 2, 1, "", "sigma"], [79, 6, 1, "", "valid_impls"]], "deeptime.markov": [[81, 0, 1, "", "PCCAModel"], [82, 0, 1, "", "ReactiveFlux"], [83, 0, 1, "", "TransitionCountEstimator"], [84, 0, 1, "", "TransitionCountModel"], [85, 4, 1, "", "compute_connected_sets"], [86, 4, 1, "", "compute_dtrajs_effective"], [87, 4, 1, "", "compute_effective_stride"], [88, 4, 1, "", "count_states"], [112, 4, 1, "", "number_of_states"], [113, 4, 1, "", "pcca"], [114, 4, 1, "", "reactive_flux"]], "deeptime.markov.PCCAModel": [[81, 2, 1, "", "assignments"], [81, 2, 1, "", "coarse_grained_stationary_probability"], [81, 2, 1, "", "coarse_grained_transition_matrix"], [81, 1, 1, "", "copy"], [81, 1, 1, "", "get_params"], [81, 2, 1, "", "memberships"], [81, 2, 1, "", "metastable_distributions"], [81, 2, 1, "", "n_metastable"], [81, 1, 1, "", "set_params"], [81, 2, 1, "", "sets"]], "deeptime.markov.ReactiveFlux": [[82, 2, 1, "", "backward_committor"], [82, 1, 1, "", "coarse_grain"], [82, 1, 1, "", "copy"], [82, 2, 1, "", "forward_committor"], [82, 1, 1, "", "get_params"], [82, 2, 1, "", "gross_flux"], [82, 2, 1, "", "intermediate_states"], [82, 1, 1, "", "major_flux"], [82, 2, 1, "", "mfpt"], [82, 2, 1, "", "n_states"], [82, 2, 1, "", "net_flux"], [82, 1, 1, "", "pathways"], [82, 2, 1, "", "rate"], [82, 1, 1, "", "set_params"], [82, 2, 1, "", "source_states"], [82, 2, 1, "", "stationary_distribution"], [82, 2, 1, "", "target_states"], [82, 2, 1, "", "total_flux"]], "deeptime.markov.TransitionCountEstimator": [[83, 1, 1, "", "__call__"], [83, 1, 1, "", "count"], [83, 2, 1, "", "count_mode"], [83, 1, 1, "", "fetch_model"], [83, 1, 1, "", "fit"], [83, 1, 1, "", "fit_fetch"], [83, 1, 1, "", "fit_transform"], [83, 1, 1, "", "get_params"], [83, 2, 1, "", "has_model"], [83, 2, 1, "", "lagtime"], [83, 2, 1, "", "model"], [83, 2, 1, "", "n_states"], [83, 1, 1, "", "set_params"], [83, 2, 1, "", "sparse"], [83, 1, 1, "", "transform"]], "deeptime.markov.TransitionCountModel": [[84, 1, 1, "", "connected_sets"], [84, 1, 1, "", "copy"], [84, 2, 1, "", "count_matrix"], [84, 2, 1, "", "count_matrix_full"], [84, 1, 1, "", "count_matrix_histogram"], [84, 2, 1, "", "counting_mode"], [84, 1, 1, "", "get_params"], [84, 1, 1, "", "is_connected"], [84, 2, 1, "", "is_full_model"], [84, 2, 1, "", "lagtime"], [84, 2, 1, "", "n_states"], [84, 2, 1, "", "n_states_full"], [84, 2, 1, "", "selected_count_fraction"], [84, 2, 1, "", "selected_state_fraction"], [84, 1, 1, "", "set_params"], [84, 2, 1, "", "state_histogram"], [84, 2, 1, "", "state_histogram_full"], [84, 2, 1, "", "state_symbols"], [84, 2, 1, "", "state_symbols_with_blank"], [84, 2, 1, "", "states"], [84, 1, 1, "", "states_to_symbols"], [84, 1, 1, "", "submodel"], [84, 1, 1, "", "submodel_largest"], [84, 1, 1, "", "symbols_to_states"], [84, 2, 1, "", "total_count"], [84, 1, 1, "", "transform_discrete_trajectories_to_submodel"], [84, 2, 1, "", "visited_set"]], "deeptime.markov.hmm": [[89, 0, 1, "", "BayesianHMM"], [90, 0, 1, "", "BayesianHMMPosterior"], [91, 0, 1, "", "DiscreteOutputModel"], [92, 0, 1, "", "GaussianOutputModel"], [93, 0, 1, "", "HiddenMarkovModel"], [94, 0, 1, "", "MaximumLikelihoodHMM"], [95, 0, 1, "", "OutputModel"]], "deeptime.markov.hmm.BayesianHMM": [[89, 1, 1, "", "chapman_kolmogorov_validator"], [89, 1, 1, "", "default"], [89, 1, 1, "", "fetch_model"], [89, 1, 1, "", "fit"], [89, 1, 1, "", "fit_fetch"], [89, 1, 1, "", "get_params"], [89, 2, 1, "", "has_model"], [89, 2, 1, "", "initial_distribution_prior"], [89, 2, 1, "", "initial_hmm"], [89, 2, 1, "", "model"], [89, 2, 1, "", "n_samples"], [89, 2, 1, "", "reversible"], [89, 1, 1, "", "set_params"], [89, 2, 1, "", "stationary"], [89, 2, 1, "", "store_hidden"], [89, 2, 1, "", "transition_matrix_prior"]], "deeptime.markov.hmm.BayesianHMMPosterior": [[90, 1, 1, "", "ck_test"], [90, 1, 1, "", "copy"], [90, 1, 1, "", "evaluate_samples"], [90, 1, 1, "", "gather_stats"], [90, 1, 1, "", "get_params"], [90, 2, 1, "", "hidden_state_trajectories_samples"], [90, 2, 1, "", "lagtime"], [90, 2, 1, "", "prior"], [90, 2, 1, "", "samples"], [90, 1, 1, "", "set_params"], [90, 1, 1, "", "submodel"], [90, 1, 1, "", "submodel_largest"], [90, 1, 1, "", "submodel_populous"], [90, 1, 1, "", "timescales"]], "deeptime.markov.hmm.DiscreteOutputModel": [[91, 1, 1, "", "copy"], [91, 1, 1, "", "fit"], [91, 1, 1, "", "generate_observation_trajectory"], [91, 1, 1, "", "get_params"], [91, 2, 1, "", "ignore_outliers"], [91, 1, 1, "", "map_observations_to_submodel"], [91, 2, 1, "", "n_hidden_states"], [91, 2, 1, "", "n_observable_states"], [91, 1, 1, "", "normalize"], [91, 2, 1, "", "output_probabilities"], [91, 2, 1, "", "prior"], [91, 1, 1, "", "sample"], [91, 1, 1, "", "set_params"], [91, 1, 1, "", "submodel"], [91, 1, 1, "", "to_state_probability_trajectory"]], "deeptime.markov.hmm.GaussianOutputModel": [[92, 1, 1, "", "copy"], [92, 1, 1, "", "fit"], [92, 1, 1, "", "generate_observation_trajectory"], [92, 1, 1, "", "get_params"], [92, 2, 1, "", "ignore_outliers"], [92, 2, 1, "", "means"], [92, 2, 1, "", "n_hidden_states"], [92, 2, 1, "", "n_observable_states"], [92, 1, 1, "", "sample"], [92, 1, 1, "", "set_params"], [92, 2, 1, "", "sigmas"], [92, 1, 1, "", "submodel"], [92, 1, 1, "", "to_state_probability_trajectory"]], "deeptime.markov.hmm.HiddenMarkovModel": [[93, 1, 1, "", "ck_test"], [93, 1, 1, "", "collect_observations_in_state"], [93, 1, 1, "", "compute_observation_likelihood"], [93, 1, 1, "", "compute_viterbi_paths"], [93, 1, 1, "", "copy"], [93, 1, 1, "", "correlation_obs"], [93, 2, 1, "", "count_model"], [93, 2, 1, "", "eigenvectors_left_obs"], [93, 2, 1, "", "eigenvectors_right_obs"], [93, 1, 1, "", "expectation_obs"], [93, 1, 1, "", "fingerprint_correlation_obs"], [93, 1, 1, "", "fingerprint_relaxation_obs"], [93, 1, 1, "", "get_params"], [93, 2, 1, "", "hidden_state_trajectories"], [93, 2, 1, "", "initial_count"], [93, 2, 1, "", "initial_distribution"], [93, 2, 1, "", "lagtime"], [93, 2, 1, "", "lifetimes"], [93, 2, 1, "", "likelihood"], [93, 2, 1, "", "likelihoods"], [93, 2, 1, "", "metastable_assignments"], [93, 2, 1, "", "metastable_distributions"], [93, 2, 1, "", "metastable_memberships"], [93, 2, 1, "", "metastable_sets"], [93, 2, 1, "", "n_hidden_states"], [93, 2, 1, "", "n_observation_states"], [93, 1, 1, "", "nonempty_obs"], [93, 2, 1, "", "observation_symbols"], [93, 2, 1, "", "observation_symbols_full"], [93, 2, 1, "", "output_model"], [93, 2, 1, "", "output_probabilities"], [93, 1, 1, "", "propagate"], [93, 1, 1, "", "relaxation_obs"], [93, 1, 1, "", "sample_by_observation_probabilities"], [93, 1, 1, "", "set_params"], [93, 1, 1, "", "simulate"], [93, 2, 1, "", "state_probabilities"], [93, 1, 1, "", "states_largest"], [93, 1, 1, "", "states_populous"], [93, 2, 1, "", "stationary_distribution_obs"], [93, 2, 1, "", "stride"], [93, 1, 1, "", "submodel"], [93, 1, 1, "", "submodel_disconnect"], [93, 1, 1, "", "submodel_largest"], [93, 1, 1, "", "submodel_populous"], [93, 1, 1, "", "timescales"], [93, 1, 1, "", "transform_discrete_trajectories_to_observed_symbols"], [93, 2, 1, "", "transition_counts"], [93, 1, 1, "", "transition_matrix_obs"], [93, 2, 1, "", "transition_model"]], "deeptime.markov.hmm.MaximumLikelihoodHMM": [[94, 2, 1, "", "accuracy"], [94, 1, 1, "", "chapman_kolmogorov_validator"], [94, 1, 1, "", "fetch_model"], [94, 1, 1, "", "fit"], [94, 1, 1, "", "fit_fetch"], [94, 2, 1, "", "fixed_initial_distribution"], [94, 2, 1, "", "fixed_stationary_distribution"], [94, 1, 1, "", "get_params"], [94, 2, 1, "", "has_model"], [94, 2, 1, "", "initial_model"], [94, 2, 1, "", "lagtime"], [94, 2, 1, "", "maxit"], [94, 2, 1, "", "maxit_reversible"], [94, 2, 1, "", "model"], [94, 2, 1, "", "n_hidden_states"], [94, 2, 1, "", "reversible"], [94, 1, 1, "", "set_params"], [94, 2, 1, "", "stationary"], [94, 2, 1, "", "stride"]], "deeptime.markov.hmm.OutputModel": [[95, 1, 1, "", "copy"], [95, 1, 1, "", "fit"], [95, 1, 1, "", "generate_observation_trajectory"], [95, 1, 1, "", "get_params"], [95, 2, 1, "", "ignore_outliers"], [95, 2, 1, "", "n_hidden_states"], [95, 2, 1, "", "n_observable_states"], [95, 1, 1, "", "sample"], [95, 1, 1, "", "set_params"], [95, 1, 1, "", "submodel"], [95, 1, 1, "", "to_state_probability_trajectory"]], "deeptime.markov.hmm.init.discrete": [[96, 4, 1, "", "metastable_from_data"], [97, 4, 1, "", "metastable_from_msm"], [98, 4, 1, "", "random_guess"]], "deeptime.markov.hmm.init.gaussian": [[99, 4, 1, "", "from_data"]], "deeptime.markov.msm": [[100, 0, 1, "", "AugmentedMSM"], [101, 0, 1, "", "AugmentedMSMEstimator"], [102, 0, 1, "", "BayesianMSM"], [103, 0, 1, "", "BayesianMSMPosterior"], [104, 0, 1, "", "KoopmanReweightedMSM"], [105, 0, 1, "", "MarkovStateModel"], [106, 0, 1, "", "MarkovStateModelCollection"], [107, 0, 1, "", "MaximumLikelihoodMSM"], [108, 0, 1, "", "OOMReweightedMSM"], [109, 0, 1, "", "TRAM"], [110, 0, 1, "", "TRAMDataset"], [111, 0, 1, "", "TRAMModel"]], "deeptime.markov.msm.AugmentedMSM": [[100, 1, 1, "", "ck_test"], [100, 1, 1, "", "committor_backward"], [100, 1, 1, "", "committor_forward"], [100, 1, 1, "", "compute_state_indices"], [100, 1, 1, "", "compute_trajectory_weights"], [100, 1, 1, "", "copy"], [100, 1, 1, "", "correlation"], [100, 2, 1, "", "count_model"], [100, 1, 1, "", "eigenvalues"], [100, 1, 1, "", "eigenvectors_left"], [100, 1, 1, "", "eigenvectors_right"], [100, 2, 1, "", "empirical_koopman_model"], [100, 1, 1, "", "expectation"], [100, 1, 1, "", "fingerprint_correlation"], [100, 1, 1, "", "fingerprint_relaxation"], [100, 1, 1, "", "get_params"], [100, 2, 1, "", "has_count_model"], [100, 1, 1, "", "hmm"], [100, 2, 1, "", "is_real"], [100, 2, 1, "", "koopman_model"], [100, 2, 1, "", "lagtime"], [100, 1, 1, "", "mfpt"], [100, 2, 1, "", "n_eigenvalues"], [100, 2, 1, "", "n_states"], [100, 2, 1, "", "ncv"], [100, 2, 1, "", "optimizer_state"], [100, 1, 1, "", "pcca"], [100, 1, 1, "", "propagate"], [100, 1, 1, "", "reactive_flux"], [100, 1, 1, "", "relaxation"], [100, 2, 1, "", "reversible"], [100, 1, 1, "", "score"], [100, 1, 1, "", "set_params"], [100, 1, 1, "", "simulate"], [100, 2, 1, "", "sparse"], [100, 2, 1, "", "stationary"], [100, 2, 1, "", "stationary_distribution"], [100, 1, 1, "", "submodel"], [100, 1, 1, "", "timescales"], [100, 1, 1, "", "to_koopman_model"], [100, 2, 1, "", "transition_matrix"], [100, 2, 1, "", "transition_matrix_tolerance"], [100, 1, 1, "", "update_stationary_distribution"], [100, 1, 1, "", "update_transition_matrix"]], "deeptime.markov.msm.AugmentedMSMEstimator": [[101, 2, 1, "", "convergence_criterion_lagrange"], [101, 1, 1, "", "estimator_from_feature_trajectories"], [101, 2, 1, "", "expectations_by_state"], [101, 2, 1, "", "experimental_measurement_weights"], [101, 2, 1, "", "experimental_measurements"], [101, 1, 1, "", "fetch_model"], [101, 1, 1, "", "fit"], [101, 1, 1, "", "fit_fetch"], [101, 1, 1, "", "get_params"], [101, 2, 1, "", "has_model"], [101, 2, 1, "", "max_cache"], [101, 2, 1, "", "maxiter"], [101, 2, 1, "", "model"], [101, 2, 1, "", "reversible"], [101, 1, 1, "", "set_params"], [101, 2, 1, "", "sparse"], [101, 2, 1, "", "support_confidence"], [101, 2, 1, "", "uncertainties"]], "deeptime.markov.msm.BayesianMSM": [[102, 1, 1, "", "chapman_kolmogorov_validator"], [102, 1, 1, "", "fetch_model"], [102, 1, 1, "", "fit"], [102, 1, 1, "", "fit_fetch"], [102, 1, 1, "", "fit_from_counts"], [102, 1, 1, "", "fit_from_discrete_timeseries"], [102, 1, 1, "", "fit_from_msm"], [102, 1, 1, "", "get_params"], [102, 2, 1, "", "has_model"], [102, 2, 1, "", "model"], [102, 2, 1, "", "reversible"], [102, 1, 1, "", "sample"], [102, 1, 1, "", "set_params"], [102, 2, 1, "", "sparse"], [102, 2, 1, "", "stationary_distribution_constraint"]], "deeptime.markov.msm.BayesianMSMPosterior": [[103, 1, 1, "", "ck_test"], [103, 1, 1, "", "copy"], [103, 1, 1, "", "evaluate_samples"], [103, 1, 1, "", "gather_stats"], [103, 1, 1, "", "get_params"], [103, 2, 1, "", "lagtime"], [103, 2, 1, "", "prior"], [103, 2, 1, "", "samples"], [103, 1, 1, "", "set_params"], [103, 1, 1, "", "submodel"], [103, 1, 1, "", "timescales"]], "deeptime.markov.msm.KoopmanReweightedMSM": [[104, 1, 1, "", "ck_test"], [104, 1, 1, "", "committor_backward"], [104, 1, 1, "", "committor_forward"], [104, 1, 1, "", "compute_state_indices"], [104, 1, 1, "", "compute_trajectory_weights"], [104, 1, 1, "", "copy"], [104, 1, 1, "", "correlation"], [104, 2, 1, "", "count_model"], [104, 1, 1, "", "eigenvalues"], [104, 1, 1, "", "eigenvectors_left"], [104, 1, 1, "", "eigenvectors_right"], [104, 2, 1, "", "empirical_koopman_model"], [104, 1, 1, "", "expectation"], [104, 1, 1, "", "fingerprint_correlation"], [104, 1, 1, "", "fingerprint_relaxation"], [104, 1, 1, "", "get_params"], [104, 2, 1, "", "has_count_model"], [104, 1, 1, "", "hmm"], [104, 2, 1, "", "is_real"], [104, 2, 1, "", "koopman_model"], [104, 2, 1, "", "lagtime"], [104, 1, 1, "", "mfpt"], [104, 2, 1, "", "n_eigenvalues"], [104, 2, 1, "", "n_states"], [104, 2, 1, "", "ncv"], [104, 2, 1, "", "oom_components"], [104, 2, 1, "", "oom_eigenvalues"], [104, 2, 1, "", "oom_evaluator"], [104, 2, 1, "", "oom_information_state_vector"], [104, 2, 1, "", "oom_rank"], [104, 2, 1, "", "oom_timescales"], [104, 1, 1, "", "pcca"], [104, 1, 1, "", "propagate"], [104, 1, 1, "", "reactive_flux"], [104, 1, 1, "", "relaxation"], [104, 2, 1, "", "reversible"], [104, 1, 1, "", "score"], [104, 1, 1, "", "set_params"], [104, 1, 1, "", "simulate"], [104, 2, 1, "", "sparse"], [104, 2, 1, "", "stationary"], [104, 2, 1, "", "stationary_distribution"], [104, 1, 1, "", "submodel"], [104, 1, 1, "", "timescales"], [104, 1, 1, "", "to_koopman_model"], [104, 2, 1, "", "transition_matrix"], [104, 2, 1, "", "transition_matrix_tolerance"], [104, 2, 1, "", "twostep_count_matrices"], [104, 1, 1, "", "update_stationary_distribution"], [104, 1, 1, "", "update_transition_matrix"]], "deeptime.markov.msm.MarkovStateModel": [[105, 1, 1, "", "ck_test"], [105, 1, 1, "", "committor_backward"], [105, 1, 1, "", "committor_forward"], [105, 1, 1, "", "compute_state_indices"], [105, 1, 1, "", "compute_trajectory_weights"], [105, 1, 1, "", "copy"], [105, 1, 1, "", "correlation"], [105, 2, 1, "", "count_model"], [105, 1, 1, "", "eigenvalues"], [105, 1, 1, "", "eigenvectors_left"], [105, 1, 1, "", "eigenvectors_right"], [105, 2, 1, "", "empirical_koopman_model"], [105, 1, 1, "", "expectation"], [105, 1, 1, "", "fingerprint_correlation"], [105, 1, 1, "", "fingerprint_relaxation"], [105, 1, 1, "", "get_params"], [105, 2, 1, "", "has_count_model"], [105, 1, 1, "", "hmm"], [105, 2, 1, "", "is_real"], [105, 2, 1, "", "koopman_model"], [105, 2, 1, "", "lagtime"], [105, 1, 1, "", "mfpt"], [105, 2, 1, "", "n_eigenvalues"], [105, 2, 1, "", "n_states"], [105, 2, 1, "", "ncv"], [105, 1, 1, "", "pcca"], [105, 1, 1, "", "propagate"], [105, 1, 1, "", "reactive_flux"], [105, 1, 1, "", "relaxation"], [105, 2, 1, "", "reversible"], [105, 1, 1, "", "score"], [105, 1, 1, "", "set_params"], [105, 1, 1, "", "simulate"], [105, 2, 1, "", "sparse"], [105, 2, 1, "", "stationary"], [105, 2, 1, "", "stationary_distribution"], [105, 1, 1, "", "submodel"], [105, 1, 1, "", "timescales"], [105, 1, 1, "", "to_koopman_model"], [105, 2, 1, "", "transition_matrix"], [105, 2, 1, "", "transition_matrix_tolerance"], [105, 1, 1, "", "update_stationary_distribution"], [105, 1, 1, "", "update_transition_matrix"]], "deeptime.markov.msm.MarkovStateModelCollection": [[106, 1, 1, "", "ck_test"], [106, 1, 1, "", "committor_backward"], [106, 1, 1, "", "committor_forward"], [106, 1, 1, "", "compute_state_indices"], [106, 1, 1, "", "compute_trajectory_weights"], [106, 1, 1, "", "copy"], [106, 1, 1, "", "correlation"], [106, 2, 1, "", "count_fraction"], [106, 2, 1, "", "count_fractions"], [106, 2, 1, "", "count_model"], [106, 2, 1, "", "current_model"], [106, 1, 1, "", "eigenvalues"], [106, 1, 1, "", "eigenvectors_left"], [106, 1, 1, "", "eigenvectors_right"], [106, 2, 1, "", "empirical_koopman_model"], [106, 1, 1, "", "expectation"], [106, 1, 1, "", "fingerprint_correlation"], [106, 1, 1, "", "fingerprint_relaxation"], [106, 1, 1, "", "get_params"], [106, 2, 1, "", "has_count_model"], [106, 1, 1, "", "hmm"], [106, 2, 1, "", "is_real"], [106, 2, 1, "", "koopman_model"], [106, 2, 1, "", "lagtime"], [106, 1, 1, "", "mfpt"], [106, 2, 1, "", "n_connected_msms"], [106, 2, 1, "", "n_eigenvalues"], [106, 2, 1, "", "n_states"], [106, 2, 1, "", "ncv"], [106, 1, 1, "", "pcca"], [106, 1, 1, "", "propagate"], [106, 1, 1, "", "reactive_flux"], [106, 1, 1, "", "relaxation"], [106, 2, 1, "", "reversible"], [106, 1, 1, "", "score"], [106, 1, 1, "", "select"], [106, 1, 1, "", "set_params"], [106, 1, 1, "", "simulate"], [106, 2, 1, "", "sparse"], [106, 2, 1, "", "state_fraction"], [106, 2, 1, "", "state_fractions"], [106, 1, 1, "", "state_symbols"], [106, 2, 1, "", "stationary"], [106, 2, 1, "", "stationary_distribution"], [106, 1, 1, "", "submodel"], [106, 1, 1, "", "timescales"], [106, 1, 1, "", "to_koopman_model"], [106, 2, 1, "", "transition_matrix"], [106, 2, 1, "", "transition_matrix_tolerance"], [106, 1, 1, "", "update_stationary_distribution"], [106, 1, 1, "", "update_transition_matrix"]], "deeptime.markov.msm.MaximumLikelihoodMSM": [[107, 2, 1, "", "allow_disconnected"], [107, 1, 1, "", "chapman_kolmogorov_validator"], [107, 1, 1, "", "fetch_model"], [107, 1, 1, "", "fit"], [107, 1, 1, "", "fit_fetch"], [107, 1, 1, "", "fit_from_counts"], [107, 1, 1, "", "fit_from_discrete_timeseries"], [107, 1, 1, "", "get_params"], [107, 2, 1, "", "has_model"], [107, 2, 1, "", "model"], [107, 2, 1, "", "reversible"], [107, 1, 1, "", "set_params"], [107, 2, 1, "", "sparse"], [107, 2, 1, "", "stationary_distribution_constraint"]], "deeptime.markov.msm.OOMReweightedMSM": [[108, 1, 1, "", "fetch_model"], [108, 1, 1, "", "fit"], [108, 1, 1, "", "fit_fetch"], [108, 1, 1, "", "get_params"], [108, 2, 1, "", "has_model"], [108, 2, 1, "", "model"], [108, 2, 1, "", "reversible"], [108, 1, 1, "", "set_params"], [108, 2, 1, "", "sparse"]], "deeptime.markov.msm.TRAM": [[109, 1, 1, "", "fetch_model"], [109, 1, 1, "", "fit"], [109, 1, 1, "", "fit_fetch"], [109, 1, 1, "", "get_params"], [109, 2, 1, "", "has_model"], [109, 2, 1, "", "model"], [109, 2, 1, "", "reversible"], [109, 1, 1, "", "set_params"], [109, 2, 1, "", "sparse"]], "deeptime.markov.msm.TRAMDataset": [[110, 1, 1, "", "check_against_model"], [110, 6, 1, "", "connectivity_options"], [110, 2, 1, "", "n_markov_states"], [110, 2, 1, "", "n_therm_states"], [110, 1, 1, "", "restrict_to_largest_connected_set"], [110, 1, 1, "", "restrict_to_submodel"], [110, 1, 1, "", "setflags"], [110, 2, 1, "", "state_counts"], [110, 2, 1, "", "tram_input"], [110, 2, 1, "", "transition_counts"]], "deeptime.markov.msm.TRAMModel": [[111, 2, 1, "", "biased_conf_energies"], [111, 1, 1, "", "compute_PMF"], [111, 1, 1, "", "compute_log_likelihood"], [111, 1, 1, "", "compute_observable"], [111, 1, 1, "", "compute_sample_weights_log"], [111, 1, 1, "", "copy"], [111, 1, 1, "", "get_params"], [111, 2, 1, "", "lagrangian_mult_log"], [111, 2, 1, "", "markov_state_energies"], [111, 2, 1, "", "modified_state_counts_log"], [111, 2, 1, "", "msm_collection"], [111, 1, 1, "", "set_params"], [111, 2, 1, "", "therm_state_energies"]], "deeptime.markov.sample": [[115, 4, 1, "", "compute_index_states"], [116, 4, 1, "", "indices_by_distribution"], [117, 4, 1, "", "indices_by_sequence"], [118, 4, 1, "", "indices_by_state"]], "deeptime.markov.tools": [[247, 3, 0, "-", "analysis"], [247, 3, 0, "-", "estimation"], [247, 3, 0, "-", "flux"]], "deeptime.markov.tools.analysis": [[119, 4, 1, "", "committor"], [120, 4, 1, "", "committor_sensitivity"], [121, 4, 1, "", "correlation"], [122, 4, 1, "", "eigenvalue_sensitivity"], [123, 4, 1, "", "eigenvalues"], [124, 4, 1, "", "eigenvector_sensitivity"], [125, 4, 1, "", "eigenvectors"], [126, 4, 1, "", "expectation"], [127, 4, 1, "", "expectation_sensitivity"], [128, 4, 1, "", "expected_counts"], [129, 4, 1, "", "expected_counts_stationary"], [130, 4, 1, "", "fingerprint_correlation"], [131, 4, 1, "", "fingerprint_relaxation"], [132, 4, 1, "", "hitting_probability"], [133, 4, 1, "", "is_connected"], [134, 4, 1, "", "is_rate_matrix"], [135, 4, 1, "", "is_reversible"], [136, 4, 1, "", "is_transition_matrix"], [137, 4, 1, "", "mfpt"], [138, 4, 1, "", "mfpt_sensitivity"], [139, 4, 1, "", "pcca_memberships"], [140, 4, 1, "", "rdl_decomposition"], [141, 4, 1, "", "relaxation"], [142, 4, 1, "", "stationary_distribution"], [143, 4, 1, "", "stationary_distribution_sensitivity"], [144, 4, 1, "", "timescale_sensitivity"], [145, 4, 1, "", "timescales"]], "deeptime.markov.tools.estimation": [[146, 4, 1, "", "bootstrap_counts"], [147, 4, 1, "", "bootstrap_trajectories"], [148, 4, 1, "", "connected_sets"], [149, 4, 1, "", "count_matrix"], [150, 4, 1, "", "error_perturbation"], [151, 4, 1, "", "is_connected"], [152, 4, 1, "", "largest_connected_set"], [153, 4, 1, "", "largest_connected_submatrix"], [154, 4, 1, "", "log_likelihood"], [155, 4, 1, "", "prior_const"], [156, 4, 1, "", "prior_neighbor"], [157, 4, 1, "", "prior_rev"], [158, 4, 1, "", "rate_matrix"], [159, 4, 1, "", "tmatrix_cov"], [160, 4, 1, "", "tmatrix_sampler"], [161, 4, 1, "", "transition_matrix"]], "deeptime.markov.tools.flux": [[162, 4, 1, "", "coarsegrain"], [163, 4, 1, "", "flux_consumers"], [164, 4, 1, "", "flux_matrix"], [165, 4, 1, "", "flux_producers"], [166, 4, 1, "", "flux_production"], [167, 4, 1, "", "mfpt"], [168, 4, 1, "", "pathways"], [169, 4, 1, "", "rate"], [170, 4, 1, "", "to_netflux"], [171, 4, 1, "", "total_flux"]], "deeptime.numeric": [[172, 7, 1, "", "ZeroRankError"], [173, 4, 1, "", "drop_nan_rows"], [174, 4, 1, "", "eig_corr"], [175, 4, 1, "", "eigs"], [176, 4, 1, "", "is_diagonal_matrix"], [177, 4, 1, "", "is_square_matrix"], [178, 4, 1, "", "schatten_norm"], [179, 4, 1, "", "sort_eigs"], [180, 4, 1, "", "spd_eig"], [181, 4, 1, "", "spd_inv"], [182, 4, 1, "", "spd_inv_split"], [183, 4, 1, "", "spd_inv_sqrt"], [184, 4, 1, "", "spd_truncated_svd"]], "deeptime.numeric.ZeroRankError": [[172, 1, 1, "", "with_traceback"]], "deeptime.plots": [[185, 0, 1, "", "Energy2dPlot"], [186, 0, 1, "", "Network"], [187, 4, 1, "", "plot_adjacency"], [188, 4, 1, "", "plot_ck_test"], [189, 4, 1, "", "plot_contour2d_from_xyz"], [190, 4, 1, "", "plot_density"], [191, 4, 1, "", "plot_energy2d"], [192, 4, 1, "", "plot_flux"], [193, 4, 1, "", "plot_implied_timescales"], [194, 4, 1, "", "plot_markov_model"]], "deeptime.plots.Network": [[186, 2, 1, "", "adjacency_matrix"], [186, 2, 1, "", "bounds"], [186, 2, 1, "", "cmap"], [186, 2, 1, "", "d_x"], [186, 2, 1, "", "d_y"], [186, 2, 1, "", "edge_base_scale"], [186, 1, 1, "", "edge_label"], [186, 2, 1, "", "edge_labels"], [186, 2, 1, "", "n_nodes"], [186, 2, 1, "", "node_sizes"], [186, 1, 1, "", "plot"], [186, 2, 1, "", "pos"], [186, 2, 1, "", "state_colors"], [186, 2, 1, "", "state_labels"], [186, 2, 1, "", "state_sizes"]], "deeptime.sindy": [[195, 0, 1, "", "SINDy"], [196, 0, 1, "", "SINDyModel"], [197, 0, 1, "", "STLSQ"]], "deeptime.sindy.SINDy": [[195, 1, 1, "", "fetch_model"], [195, 1, 1, "", "fit"], [195, 1, 1, "", "fit_fetch"], [195, 1, 1, "", "get_params"], [195, 2, 1, "", "has_model"], [195, 2, 1, "", "model"], [195, 1, 1, "", "set_params"]], "deeptime.sindy.SINDyModel": [[196, 2, 1, "", "coefficients"], [196, 1, 1, "", "copy"], [196, 1, 1, "", "equations"], [196, 1, 1, "", "get_params"], [196, 2, 1, "", "intercept"], [196, 1, 1, "", "predict"], [196, 1, 1, "", "print"], [196, 1, 1, "", "score"], [196, 1, 1, "", "set_params"], [196, 1, 1, "", "simulate"], [196, 1, 1, "", "transform"]], "deeptime.sindy.STLSQ": [[197, 1, 1, "", "fit"], [197, 1, 1, "", "get_params"], [197, 1, 1, "", "predict"], [197, 1, 1, "", "score"], [197, 1, 1, "", "set_params"]], "deeptime.util": [[198, 0, 1, "", "EnergyLandscape2d"], [199, 0, 1, "", "QuantityStatistics"], [202, 4, 1, "", "confidence_interval"], [212, 4, 1, "", "energy2d"]], "deeptime.util.EnergyLandscape2d": [[198, 1, 1, "", "plot"]], "deeptime.util.QuantityStatistics": [[199, 2, 1, "", "L"], [199, 2, 1, "", "R"], [199, 1, 1, "", "gather"], [199, 2, 1, "", "mean"], [199, 2, 1, "", "std"]], "deeptime.util.callbacks": [[200, 0, 1, "", "ProgressCallback"], [201, 4, 1, "", "supports_progress_interface"]], "deeptime.util.callbacks.ProgressCallback": [[200, 1, 1, "", "__call__"]], "deeptime.util.data": [[203, 0, 1, "", "ConcatDataset"], [204, 0, 1, "", "TimeLaggedConcatDataset"], [205, 0, 1, "", "TimeLaggedDataset"], [206, 0, 1, "", "TrajectoriesDataset"], [207, 0, 1, "", "TrajectoryDataset"], [208, 4, 1, "", "timeshifted_split"]], "deeptime.util.data.ConcatDataset": [[203, 1, 1, "", "setflags"], [203, 2, 1, "", "subsets"]], "deeptime.util.data.TimeLaggedConcatDataset": [[204, 1, 1, "", "setflags"], [204, 2, 1, "", "subsets"]], "deeptime.util.data.TimeLaggedDataset": [[205, 1, 1, "", "astype"], [205, 2, 1, "", "data"], [205, 2, 1, "", "data_lagged"], [205, 1, 1, "", "setflags"]], "deeptime.util.data.TrajectoriesDataset": [[206, 1, 1, "", "from_numpy"], [206, 2, 1, "", "lagtime"], [206, 1, 1, "", "setflags"], [206, 2, 1, "", "subsets"], [206, 2, 1, "", "trajectories"]], "deeptime.util.data.TrajectoryDataset": [[207, 1, 1, "", "astype"], [207, 2, 1, "", "data"], [207, 2, 1, "", "data_lagged"], [207, 1, 1, "", "from_trajectories"], [207, 1, 1, "", "setflags"]], "deeptime.util.decorators": [[209, 0, 1, "", "cached_property"], [210, 4, 1, "", "deprecated_argument"], [211, 4, 1, "", "plotting_function"]], "deeptime.util.decorators.cached_property": [[209, 1, 1, "", "deleter"], [209, 1, 1, "", "getter"], [209, 1, 1, "", "setter"]], "deeptime.util.parallel": [[213, 4, 1, "", "handle_n_jobs"]], "deeptime.util.platform": [[214, 4, 1, "", "handle_progress_bar"], [215, 4, 1, "", "module_available"]], "deeptime.util.types": [[216, 4, 1, "", "atleast_nd"], [217, 4, 1, "", "is_timelagged_dataset"], [218, 4, 1, "", "to_dataset"]], "deeptime.util.validation": [[219, 0, 1, "", "ChapmanKolmogorovTest"], [220, 0, 1, "", "ImpliedTimescales"], [221, 4, 1, "", "ck_test"], [222, 4, 1, "", "implied_timescales"]], "deeptime.util.validation.ChapmanKolmogorovTest": [[219, 2, 1, "", "err_est"], [219, 2, 1, "", "estimates"], [219, 2, 1, "", "estimates_samples"], [219, 2, 1, "", "has_errors"], [219, 2, 1, "", "lagtimes"], [219, 1, 1, "", "plot"], [219, 2, 1, "", "predictions"], [219, 2, 1, "", "predictions_samples"]], "deeptime.util.validation.ImpliedTimescales": [[220, 2, 1, "", "has_samples"], [220, 2, 1, "", "lagtimes"], [220, 2, 1, "", "max_n_processes"], [220, 2, 1, "", "max_n_samples"], [220, 2, 1, "", "n_lagtimes"], [220, 1, 1, "", "n_samples"], [220, 1, 1, "", "plot"], [220, 1, 1, "", "samples_for_process"], [220, 1, 1, "", "timescales_for_process"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:function", "5": "py:data", "6": "py:attribute", "7": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 185, 186, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 219, 220, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237], "dataset": [0, 253, 262, 305], "estim": [1, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 240, 241, 243, 245, 246, 247, 250, 294, 306, 317], "model": [2, 240, 241, 243, 245, 246, 250, 251, 256, 268, 269, 283, 297, 305, 306], "transform": [3, 283, 294], "concaten": 4, "ident": 5, "monomi": 6, "observ": 7, "boxdiscret": 8, "boxdiscretizationmodel": 9, "clustermodel": 10, "kmean": 11, "kmeansmodel": 12, "metricregistri": 13, "minibatchkmean": 14, "regularspac": 15, "function": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 80, 85, 86, 87, 88, 96, 97, 98, 99, 112, 113, 114, 115, 116, 117, 118, 123, 125, 133, 134, 135, 136, 140, 142, 145, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 201, 202, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 240], "kmeans_plusplu": 16, "data": [17, 242, 251, 283], "metric": [17, 240, 299], "covari": [18, 65, 241], "covariancemodel": 19, "koopmanweightingestim": 20, "koopmanweightingmodel": 21, "abc_flow": 22, "bickley_jet": 23, "birth_death_chain": 24, "custom_od": 25, "custom_sd": 26, "double_well_2d": 27, "double_well_discret": 28, "drunkards_walk": 29, "ellipsoid": [30, 234, 262], "ornstein_uhlenbeck": 31, "position_based_fluid": 32, "prinz_potenti": 33, "quadruple_wel": 34, "quadruple_well_asymmetr": 35, "sqrt_model": 36, "swissroll_model": 37, "time_dependent_quintuple_wel": 38, "tmatrix_metropolis1d": 39, "triple_well_1d": 40, "triple_well_2d": 41, "covariancekoopmanmodel": 42, "dmd": [43, 300], "dmdmodel": 44, "edmd": [45, 301, 305, 308], "edmdmodel": 46, "kvad": [47, 303], "kvadmodel": 48, "kernelcca": 49, "kernelccamodel": 50, "kerneledmd": 51, "kerneledmdmodel": 52, "tica": [53, 290, 305, 313], "transferoperatormodel": 54, "vamp": [55, 289, 290, 303, 305, 307, 317], "blocksplit_traj": 56, "cvsplit_traj": 57, "tae": 58, "taemodel": 59, "tvae": 60, "tvaeencod": 61, "tvaemodel": 62, "vampnet": [63, 302, 303, 305, 318], "vampnetmodel": 64, "koopman_matrix": 66, "kvad_scor": 67, "sym_invers": 68, "vamp_scor": [69, 71], "vampnet_loss": 70, "vamp_score_cv": 72, "vamp_score_data": 73, "gaussiankernel": 74, "generalizedgaussiankernel": 75, "kernel": [76, 244, 282, 283, 303, 305, 307, 308], "laplaciankernel": 77, "polynomialkernel": 78, "torchgaussiankernel": 79, "is_torch_kernel": 80, "pccamodel": 81, "reactiveflux": 82, "transitioncountestim": 83, "transitioncountmodel": 84, "compute_connected_set": 85, "compute_dtrajs_effect": 86, "compute_effective_strid": 87, "count_stat": 88, "bayesianhmm": 89, "bayesianhmmposterior": 90, "discreteoutputmodel": 91, "gaussianoutputmodel": 92, "hiddenmarkovmodel": 93, "maximumlikelihoodhmm": 94, "outputmodel": 95, "metastable_from_data": 96, "metastable_from_msm": 97, "random_guess": 98, "from_data": 99, "augmentedmsm": 100, "augmentedmsmestim": 101, "bayesianmsm": 102, "bayesianmsmposterior": 103, "koopmanreweightedmsm": 104, "markovstatemodel": 105, "markovstatemodelcollect": 106, "maximumlikelihoodmsm": 107, "oomreweightedmsm": 108, "tram": [109, 288, 315], "tramdataset": 110, "trammodel": 111, "number_of_st": 112, "pcca": [113, 247, 285, 310], "reactive_flux": 114, "compute_index_st": 115, "indices_by_distribut": 116, "indices_by_sequ": 117, "indices_by_st": 118, "deeptim": [119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 311], "markov": [119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 245, 246, 247, 297, 305, 306], "tool": [119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 245, 247, 248], "analysi": [119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 245, 247], "committor": [119, 247, 314], "committor_sensit": 120, "correl": 121, "eigenvalue_sensit": 122, "eigenvalu": [123, 248], "eigenvector_sensit": 124, "eigenvector": [125, 313], "expect": [126, 247], "expectation_sensit": 127, "expected_count": 128, "expected_counts_stationari": 129, "fingerprint_correl": 130, "fingerprint_relax": 131, "hitting_prob": 132, "is_connect": [133, 151], "is_rate_matrix": 134, "is_revers": 135, "is_transition_matrix": 136, "mfpt": [137, 167], "mfpt_sensit": 138, "pcca_membership": 139, "rdl_decomposit": 140, "relax": 141, "stationary_distribut": 142, "stationary_distribution_sensit": 143, "timescale_sensit": 144, "timescal": [145, 281], "bootstrap_count": 146, "bootstrap_trajectori": 147, "connected_set": 148, "count_matrix": 149, "error_perturb": 150, "largest_connected_set": 152, "largest_connected_submatrix": 153, "log_likelihood": 154, "prior_const": 155, "prior_neighbor": 156, "prior_rev": 157, "rate_matrix": 158, "tmatrix_cov": 159, "tmatrix_sampl": 160, "transition_matrix": 161, "flux": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 247, 287, 314], "coarsegrain": 162, "flux_consum": 163, "flux_matrix": 164, "flux_produc": 165, "flux_product": 166, "pathwai": [168, 247, 314], "rate": [169, 247], "to_netflux": 170, "total_flux": 171, "except": 172, "zerorankerror": 172, "drop_nan_row": 173, "eig_corr": 174, "eig": 175, "is_diagonal_matrix": 176, "is_square_matrix": 177, "schatten_norm": 178, "sort_eig": 179, "spd_eig": 180, "spd_inv": 181, "spd_inv_split": 182, "spd_inv_sqrt": 183, "spd_truncated_svd": 184, "energy2dplot": 185, "network": [186, 284], "plot_adjac": 187, "plot_ck_test": 188, "plot_contour2d_from_xyz": 189, "plot_dens": 190, "plot_energy2d": 191, "plot_flux": 192, "plot_implied_timescal": 193, "plot_markov_model": 194, "sindi": [195, 250, 286, 311], "sindymodel": 196, "stlsq": 197, "energylandscape2d": 198, "quantitystatist": 199, "progresscallback": 200, "supports_progress_interfac": 201, "confidence_interv": 202, "concatdataset": 203, "timelaggedconcatdataset": 204, "timelaggeddataset": 205, "trajectoriesdataset": 206, "trajectorydataset": 207, "timeshifted_split": 208, "cached_properti": 209, "deprecated_argu": 210, "plotting_funct": 211, "energy2d": 212, "handle_n_job": 213, "handle_progress_bar": 214, "module_avail": 215, "atleast_nd": 216, "is_timelagged_dataset": 217, "to_dataset": 218, "chapmankolmogorovtest": 219, "impliedtimescal": 220, "ck_test": 221, "implied_timescal": 222, "whiteningtransform": 223, "covar": [224, 225], "moments_xx": 226, "moments_xxxi": 227, "moments_block": 228, "bickleyjet": 229, "birthdeathchain": 230, "customsystem": 231, "doublewelldiscret": 232, "drunkardswalk": 233, "pbfsimul": 235, "timedependentsystem": 236, "timeindependentsystem": 237, "base": [238, 264, 289, 317], "basi": 239, "cluster": [240, 277, 299], "ad": [240, 294], "new": 240, "util": [241, 243, 245, 251], "api": [242, 252, 317], "custom": [242, 257, 258, 294, 299], "system": [242, 286], "implement": 242, "decomposit": [243, 247, 314], "deep": [243, 293], "altern": 245, "transit": [245, 247, 314, 316], "count": [245, 247, 316], "special": 245, "msm": [245, 247, 304, 309], "hmm": 246, "output": 246, "initi": [246, 299], "guess": 246, "countmatrix": 247, "connect": 247, "sampl": [247, 306, 309], "bootstrap": 247, "prior": 247, "valid": [247, 251], "passag": 247, "time": [247, 270, 274, 291, 312, 317], "fingerprint": 247, "sensit": 247, "path": [247, 314], "theori": [247, 314], "reactiv": [247, 314], "reaction": 247, "numer": 248, "gener": [248, 275, 296], "problem": [248, 311], "plot": [249, 278, 279, 284], "solver": 250, "statist": 251, "type": 251, "other": [251, 252], "tabl": 252, "Of": 252, "content": 252, "document": [252, 294], "doc": 252, "arnold": 254, "beltrami": 254, "childress": 254, "flow": 254, "bicklei": [255, 282, 303], "jet": [255, 282, 303], "birth": 256, "death": 256, "chain": [256, 271], "od": 257, "sde": 258, "doubl": [259, 260, 288, 305, 315], "well": [259, 260, 266, 267, 270, 272, 273, 288, 315], "2d": [259, 273], "discret": [260, 299], "drunkard": [261, 285, 287], "": [261, 285, 287], "walk": [261, 285, 287], "One": [263, 265], "dimension": [263, 265, 278, 279], "ornstein": 263, "uhlenbeck": 263, "process": 263, "posit": [264, 289, 317], "fluid": [264, 289, 317], "prinz": [265, 304], "potenti": [265, 304], "quadrupl": [266, 267], "asymmetr": 267, "sqrt": [268, 283], "swissrol": 269, "depend": [270, 294], "quintupl": 270, "metropoli": 271, "1d": [271, 272, 288], "energi": [271, 280], "landscap": 271, "tripl": [272, 273], "comput": [274, 291], "exampl": [275, 285, 287, 296, 311, 314, 317], "chapman": 276, "kolmogorov": 276, "test": [276, 294], "method": 277, "comparison": [277, 303, 313], "two": [278, 279], "contour": 278, "from": [278, 279, 314], "xyz": 278, "densiti": 279, "xy": 279, "surfac": 280, "impli": 281, "cca": [282, 283, 303, 305, 307, 317], "find": 282, "coher": [282, 303], "set": [282, 303], "identif": 286, "rossler": 286, "gross": 287, "net": 287, "v": [290, 313], "pca": [290, 313], "imprint": 292, "dim": 293, "reduct": [293, 295, 305], "For": 294, "develop": 294, "write": 294, "capabl": 294, "pytorch": 294, "your": 294, "code": 294, "dimens": [295, 305], "notebook": 296, "state": [297, 305], "softwar": 298, "licens": 298, "third": 298, "parti": 298, "notic": 298, "k": 299, "mean": 299, "uniform": 299, "mini": 299, "batch": 299, "regular": 299, "space": 299, "box": 299, "defin": 299, "advanc": 299, "alanin": 302, "dipeptid": 302, "kvadnet": 303, "score": [303, 317], "wedg": 305, "backtransform": 305, "hidden": 306, "bayesian": [306, 309], "maximum": 309, "likelihood": 309, "coars": [310, 314], "grain": [310, 314], "main": 311, "idea": 311, "approxim": 311, "object": 311, "lag": [312, 317], "autoencod": 312, "variat": 312, "scale": [313, 317], "koopman": 313, "reweight": 313, "The": 314, "probabl": 314, "trajectori": 314, "introduct": 315, "applic": 315, "recov": 315, "pmf": 315, "select": 316, "submodel": 316, "short": 317, "demonstr": 317, "A": 317, "more": 317, "detail": 317, "look": 317, "singular": 317, "vector": 317}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 56}})